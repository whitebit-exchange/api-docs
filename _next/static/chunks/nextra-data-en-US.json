{"/faq":{"title":"Faq","data":{"faq#F.A.Q.":"Q: Why am I getting a 429 error and can't make requests?\nA: If the rate limit for an endpoint is exceeded, you will receive a 429 error. To fix the error, you need to wait a bit. The rate limit value for a specific request can be found in the endpoint description.\nQ: Why do I get a CORS error when requesting the whitebit.com/api/v4/public/ticker method?\nA: CORS requests to this endpoint are forbidden for security reasons. Make the request from the backend.\nQ: Why am I getting a 403 error when making requests to the Smartplan endpoints?\nA: These endpoints are available only for B2B partner services. You need to contact support@whitebit.com in order to get permissions to use these endpoints.https://whitebit-exchange.github.io/api-docs/private/http-main-v4/#crypto-lеnding\nQ: Can I get information on pairs for multiple time periods in the https://whitebit-exchange.github.io/api-docs/public/websocket/#kline method?\nA: Open multiple WebSocket connections or call an equivalent HTTP method.\nQ: Why can't I see trade history for a pair in the last 24 hours?\nA: You can only see the last 100 deals. If you want to see more, subscribe to our WebSocket and accumulate information on your side.\nQ: Why am I getting nonce errors?\nA: The problem is solved by debugging your code and recreating the keys.\nQ: Why doesn't the transfer between balances occur when transferring assets via API? Example: I made a transfer from a trading account to a main account and made a withdrawal request, but I received an error indicating that there were no funds in the balance.\nA: You made a withdrawal before the transfer was completed. Wait for it to finish (about 2 seconds).\nQ: I get an error that there are insufficient funds for withdrawal, even though there are assets on the balance.\nA: The amount plus the fee was greater than the balance. For the withdraw-pay method, you need to take into account the withdrawal fee https://github.com/whitebit-exchange/api-docs/blob/main/docs/Private/http-main-v4.md#fees\nQ: Is https required for Webhook API communication? What port is used for this communication?\nA: Yes, https is required. Communication takes place through port 443.\nQ: How can I find out if deposits and withdrawals of a specific currency are working through the API?\nA: You can find this information at https://whitebit.com/api/v4/public/assets"}},"/glossary":{"title":"Glossary","data":{"a#A":"","active-orders#Active Orders":"Orders that are running for the duration of the trading day","ask#Ask":"Sell order","assets#Assets":"A digital representation of value that you can transfer, store, or trade electronically","b#B":"","balance-collateral#Balance Collateral":"Balance for margin and futures trading","balance-main#Balance Main":"Balance that accepts deposits and/or withdraws cryptocurrency and national currency","balance-spotbalance-trade#Balance Spot(Balance Trade)":"Balance for spot trading, this balance is intended solely for non-marginal trading (placing orders), as well as for the currency exchange","bid#Bid":"Buy order","c#C":"","codes#Codes":"See WhiteBit Codes","collateral#Collateral":"The cryptocurrency asset that the borrower pledges as a guarantee that the loan is going to be repaid","crypto-lendingsmart-staking#Crypto Lending(SMART Staking)":"A unique tool for passive income that allows depositing funds in specific plans and receiving a percentage from holding them for particular periods. Allows you to make profit by lending your funds to the exchange in a certain cryptocurrency by using one of the available plans","d#D":"","deal-trade#Deal (Trade)":"A transaction between two parties in which an asset or commodity is bought or sold at an agreed-upon price, with a record of the transaction typically including information such as the trade price, amount, date, and any fees or commissions associated with the trade.","derivative#Derivative":"Crypto derivatives are contracts that derive their value from a primary underlying asset. In the case of crypto derivatives, the primary asset would be a cryptocurrency such as Bitcoin","e#E":"","f#F":"","fee#Fee":"A cryptocurrency transaction fee that is charged to users when performing crypto transactions","fiat#Fiat":"Is a currency (a medium of exchange) established as money, often by government regulation, but that does not have intrinsic value (value independent of the nominal value, such as a precious metal might have).","finished-orders#Finished orders":"A list of all completed(executed) orders that includes information such as the order id, date, amount, price, conditions and any other relevant data related to the order","futures#Futures":"See Perpetual Futures","futures-trading#Futures Trading":"Users can open Long and Short positions and use leverage and they pay a fee for using borrowed funds not to the exchange but to each other.","g#G":"","h#H":"","i#I":"","j#J":"","k#K":"","kill-switch-timer#Kill-switch timer":"A function that cancel all orders automatically if the timer is set. It only cancel orders with (that are grouped by) concrete asset.","l#L":"","lending-planssmart-plans#Lending Plans(Smart Plans)":"See Crypto lending","leverage#Leverage":"The ratio of the margin to the borrowed funds used to open a position. In other words, it shows the number of times the credit exceeds your assets.","limit-order#Limit order":"This order allows you to buy or sell an asset at a fixed price","m#M":"","maker#Maker":"Trader who places limit orders on the order book, which means they set the price and quantity of the trade they want to make, and wait for another trader to accept their order","margin-trading#Margin trading":"The use of exchange's funds to trade assets, which allows placing orders for sums exceeding the initial deposit several times. The latter is called \"margin” and its size depends on the leverage.","market#Market":"Assets that can be traded for each other on an exchange.","market-activity#Market activity":"Market information(last price, volume, high, low, change) for last 24 hours","market-order#Market order":"This order allows you to buy or sell an asset immediately at the best available price.","market-pair#Market Pair":"See Market","memodestination-tag#Memo(destination tag)":"A special identifier used in transactions. To deposit and withdraw some cryptocurrencies, such as Ripple (XRP) and Stellar (XLM), you must specify a memo.","money#Money":"The currency that is used to buy and sell assets on a trading platform.","multinetwork#Multinetwork":"Cryptocurrency like USDT obtained in different networks, like: OMNI, Tron, Ethereum etc. Network should be selected in order to make a deposit or withdraw.","n#N":"","nonce#Nonce":"An arbitrary number that can be used just once.","o#O":"","oco-orders#OCO orders":"This order allows you to place a combination of two orders at the same time. It combines the limit order with a stop-limit, on condition that only one of them will be executed. The feature of this order is that as soon as one of the orders is partially or completely executed, the second order is automatically canceled.","order-book#Order Book":"A separated list of buy (bids) and sell (asks) active orders for a specific trading pair.","orders#Orders":"Simple contracts that allow you to specify which crypto you want to buy or sell, how much of it and for what price. Orders consist of trades(deals). The execution of all deals executes the order. There are different types of orders: Market order, Limit order, Stop market order, Stop limit order, OCO order. Orders may have executed(finished) or unexecuted(active) status.","orders-pending#Orders Pending":"Orders that request an exchange to buy or sell an asset at a set price and conditions.","p#P":"","pair#Pair":"See Market","perpetual-futuresfutures#Perpetual Futures(Futures)":"A type of derivative contract for trading cryptocurrencies that do not have an expiration date and are rolled over daily","precision#Precision":"Is the number of digits to the right of the decimal point","provider#Provider":"Fiat currencies has different providers that helps people making deposits and withdraws by bank transfers.","q#Q":"","r#R":"","s#S":"","smart-planslending-plans#Smart Plans(Lending Plans)":"See Crypto lending","smart-staking#SMART Staking":"See Crypto lending","spot-trading#Spot trading":"Buying and selling assets for immediate settlement","stock#Stock":"Asset that can be traded on an exchange.","stop-limit-order#Stop limit order":"This order has both the stop and the limit prices. When the specified market price at this pair is reached the order gets activated and is being completed as a basic limit order.","stop-market-order#Stop market order":"This order is completed when the market price reaches a price set by you in advance (the stop price). This type of order is often used to prevent losses in the context of market volatility.","stop-price#Stop price":"A price set by you in advance","t#T":"","taker#Taker":"A trader who accepts an existing order from the order book, which means they take liquidity from the market","ticker#Ticker":"An alphabetic and/or numeric abbreviation of the name of a digital asset. (BTC - Bitcoin ticker).","trade#Trade":"See Deal","trade-volume#Trade Volume":"See Volume","u#U":"","v#V":"","volumetrade-volume#Volume(Trade Volume)":"The total number of shares or contracts exchanged between buyers and sellers of a market on a given day","w#W":"","whitebit-codes#WhiteBIT Codes":"Free alphanumeric codes with the assets packaged in it","x#X":"","y#Y":"","z#Z":""}},"/":{"title":"Official Documentation of WhiteBIT API","data":{"whitebit-api-supports-private-and-public-endpoints#WhiteBIT API supports private and public endpoints":"","by-using-any-of-the-whitebit-api-endpoints-you-are-confirming-your-agreement-to-the-terms-of-use#By using any of the WhiteBIT API endpoints you are confirming your agreement to the Terms of Use":"","using-public-endpoints#Using Public endpoints:":"Public endpoints are cached. You can find specific cache refresh interval for each particular request in API documentation.\nUse HTTP method GET method when making a request.\nUse query string if you need to send additional data.\nPublic endpoints:\nPublic API V4 Documentation - Modified general endpoints + new endpoints: Ticker, Assets, Order and Trades, Fee, Server Time, Server Status, Collateral Markets.\nDeprecated endpoints:\nPublic API V1 Documentation - General endpoints: Market info, Market activity, Single market activity, Kline, Symbols, Order depth, Trade history.\nPublic API V2 Documentation - Modified general endpoints + new endpoints: Recent trades, Fee, Asset status list, Orderbook.","using-private-endpoints#Using Private endpoints:":"Read full guide Private API Authentication Documentation\nYou can add up to 5 trusted IPs\nRead API Quick start helper to find the list of languages our API supports (and instructions for each language)\nAuth request should be using POST method and include Body data and Headers\nPrivate endpoints:\nPrivate API Documentation - Authentication - How to use requests that require authentication on WhiteBIT.\nPrivate API V1 Documentation - Trade balance - Documentation for making private trading, order operations and order history requests.\nDeprecated endpoints:\nPrivate API V4 Documentation - Main balance - Main balance, deals methods & history, Codes, SMART, Fees.\nPrivate API V4 Documentation - Trade balance - Additional endpoints (trade balance, orders, deals methods).","whitebit-api-supports-private-and-public-websockets#WhiteBIT API supports private and public websockets":"Public WebSocket API - General methods, Kline, Last Price, Market Statistics for current day UTC, Market Trades, Market depth.\nPrivate WebSocket API - Authentication + private methods (trade balance, orders, deals methods).","whitebit-api-supports-webhooks#WhiteBIT API supports Webhooks":"Private Webhooks Documentation - Main balance - Documentation for processing webhooks","sdks#SDKs":"","glossary#Glossary":"","faq#F.A.Q.":""}},"/oauth/overview":{"title":"OAuth 2.0 Overview","data":{"":"OAuth 2.0 is a widely adopted standard that enables websites and applications to access resources from other web apps on behalf of users. It offers a secure and consent-based approach, ensuring that client apps can interact with resources without compromising user credentials. It's important to note that OAuth 2.0 primarily serves as an authorization protocol, focusing on granting access to specific resources such as remote APIs or user data, rather than an authentication protocol.In OAuth 2.0, the usage of Access Tokens plays a crucial role. These tokens serve as authorization credentials, representing the permission to access resources on behalf of the end-user. While OAuth 2.0 does not prescribe a specific format for Access Tokens, the JSON Web Token (JWT) format is commonly used in various contexts. JWT allows token issuers to include additional data within the token itself, providing flexibility and extensibility.Additionally, for enhanced security, Access Tokens often come with expiration dates. This ensures that access to resources is time-limited and reduces the risk of unauthorized usage.If you have any further questions or need assistance with OAuth 2.0 integration, please feel free to reach out to us at support@whitebit.com. Our team will be happy to help you with any inquiries you may have."}},"/oauth/usage":{"title":"OAuth 2.0 API","data":{"get-token#Get token":"[POST] /oauth2/token\nThis endpoint activates access token.For this request the IP of a client must be added to WB Whitelist.❗ Access token duration is 300 sec.Request BODY x-www-form-urlencoded:\nNeed to send \"client_id\", \"client_secret\" and \"code\".Response:\n{\n  \"data\": {\n    \"access_token\": \"MZM1MDBMMJYTNWM4MI0ZNTIYLTKXNDATNZY1MZHKM2Y2MJY3\",\n    \"expires_in\": 300,\n    \"refresh_token\": \"ODK5ZTVKZDUTYTI5ZC01NWJHLTGZZDMTYWFKYTNMNJHHMGZM\",\n    \"scope\": \"codes.apply,show.userinfo\",\n    \"token_type\": \"Bearer\"\n  }\n}","errors#Errors:":"\"This action is unauthorized.\"\n{\n  \"data\": {\n    \"message\": [\"Invalid request\"]\n  }\n}","refresh-token#Refresh token":"[POST] /oauth2/refresh_token\nThis endpoint creates refresh token.For this request the IP of a client must be added to WB Whitelist.❗ Refresh token duration is 600 sec.❗ Rate limit 1 request/1 sec.Request BODY x-www-form-urlencoded:\nNeed to send \"client_id\", \"client_secret\" and \"refresh_token\".Response:\n{\n  \"data\": {\n    \"access_token\": \"NTBLZJKYNZETNJFIZC0ZNGM1LWJMYTMTODBJYZRKNWE2NMRM\",\n    \"expires_in\": 300,\n    \"refresh_token\": \"ODZMNMRHM2ETMZQZZI01OTQYLWEWMZATNWQ0NDYZNJBMOWUW\",\n    \"scope\": \"codes.apply,show.userinfo\",\n    \"token_type\": \"Bearer\"\n  }\n}","errors-1#Errors:":"\"Invalid token.\"\n{\n  \"data\": {\n    \"token\": [\"Invalid token.\"]\n  }\n}"}},"/private/http-auth":{"title":"Private HTTP API Authentication","data":{"how-to-use#How to use:":"Go to your account on whitebit.com/settings/api.\nSelect the appropriate configuration tab for your API keys. Different API keys allow access to different API calls.\nGenerate an API key.\nEnable IP restrictions by specifying up to 5 trusted IPs (optional, recommended)\nEnable Endpoint access restrictions. Select only those endpoints, that you are going to use and click \"Apply\" button.","requirements#Requirements:":"Auth request should be using POST method and should include:\nBody data\nHeaders","body-data#Body data":"JSON that includes:\n'request' - a request path without the domain name. Example: '/api/v4/trade-account/balance'.\n'nonce' - a number that is always greater than the previous request’s nonce number. Example: '1594297865'. A good method of creating a nonce is to use the unix timestamp in milliseconds. This way you'll always get an incrementing number, but make sure not to send two API calls at the same time, otherwise their nonce will be identical.\n'nonceWindow' - boolean. In cases when you can’t guarantee consecutive increment of nonce you can use nonceWindow field. If it set to true nonce validation will be work a bit different. You have to passed nonce as unix timestamp in milliseconds. The api will validate that your nonce enter the range of current time +/- 5 seconds (5000 milliseconds). Also your nonce will be checked as unique, to avoid double spending. This feature can be useful in high-frequency concurrent systems when a lot of requests is being generated in a short period of time.\nparams of request\nExample:\n{\n    \"request\": \"/api/v4/trade-account/balance\",\n    \"nonce\": 1594297865,\n    \"nonceWindow\": true,\n    \"ticker\": \"BTC\"\n}","headers#Headers":"With every request you need to provide next headers:\n'Content-type': 'application/json'\n'X-TXC-APIKEY': api_key - where api_key is your public WhiteBit API key\n'X-TXC-PAYLOAD': payload' - where payload is base64-encoded body data\n'X-TXC-SIGNATURE': signature - where signature is hex(HMAC_SHA512(payload), key=api_secret))","examples-of-auth#Examples of auth":"To help you get started with our API, we've created the API Quick start helper library. It supports the following languages:\n1. Python\n2. PHP\n3. NodeJS\n4. Go\n5. JavaScript\n6. Kotlin\n7. DotNet\n8. Ruby\n9. C++\n10. Rust","errors#Errors:":"\"Too many requests.\" - this error occurs if the “nonce” in your current request is equal or is lower than the one in the previous request.\n{\n  \"message\": [[\"Too many requests.\"]],\n  \"result\": [],\n  \"success\": false\n}\n\"This action is unauthorized. Enable your key in API settings\" - this error occurs when you are using disabled API key. You can enable your API key in account API settings https://whitebit.com/settings/api. Note: Your API key is disabled automatically after disabling 2FA. Also, the API key will be disabled if the request is received from unknown IP (if IP access restrictions are turned on).\n{\n  \"message\": [[\"This action is unauthorized. Enable your key in API settings\"]],\n  \"result\": [],\n  \"success\": false\n}\n\"You don't have permission to use this endpoint. Please contact support for more details\" - this error occurs when you are using an endpoint that is disabled for a specific API key in API key settings. You can enable endpoint by editing \"Endpoint access restrictions\" for this API key in account settings https://whitebit.com/settings/api.\n{\n  \"message\": [\n    [\n      \"You don't have permission to use this endpoint. Please contact support for more details\"\n    ]\n  ],\n  \"result\": [],\n  \"success\": false\n}\n\"Invalid payload\" - this error occurs when the data that was provided in the body of the request doesn't match the base64-decoded payload.\n{\n  \"message\": [[\"Invalid payload.\"]],\n  \"result\": [],\n  \"success\": false\n}\n\"Unauthorized request.\" - this error occurs if the request was signed incorrectly.\n{\n  \"message\": [[\"Unauthorized request.\"]],\n  \"result\": [],\n  \"success\": false\n}\n\"Nonce not provided.\" - this error occurs if your request is missing \"nonce\" in the request body.\n{\n  \"message\": [[\"Nonce not provided.\"]],\n  \"result\": [],\n  \"success\": false\n}\n\"Your nonce is more than 5 seconds lesser than the current nonce\" - this error occurs if nonceWindow set to true, but you passed not a valid timestamp in nonce - it should be current timestamp in milliseconds.\n{\n  \"message\": [\n    [\"Your nonce is more than 5 seconds lesser than the current nonce\"]\n  ],\n  \"result\": [],\n  \"success\": false\n}\n\"Invalid nonceWindow.\" - this error occurs if nonceWindow is not boolean.\n{\n  \"message\": [[\"Invalid nonceWindow.\"]],\n  \"result\": [],\n  \"success\": false\n}\n\"Request not provided.\" - this error occurs if your request is missing \"request\" path in the request body.\n{\n  \"message\": [[\"Request not provided.\"]],\n  \"result\": [],\n  \"success\": false\n}"}},"/private/http-trade-v1":{"title":"Private HTTP API V1","data":{"those-endpoints-are-deprecated-use-v4-alternatives-instead#Those endpoints are deprecated. Use V4 alternatives instead":"Trading balance by currency\nTrading balances\nCreate limit order\nCancel order\nQuery unexecuted(active) orders\nQuery order history\nQuery order history by single market\nQuery order history by all markets\nQuery executed order deals\nBase URL is https://whitebit.comEndpoint example: https://whitebit.com/api/v1/{endpoint}All endpoints return time in Unix-time format.All endpoints return either a JSON object or array.For receiving responses from API calls please use http method POST","error-messages-v1-format#Error messages V1 format":"{\n  \"code\": 0,\n  \"message\": \"MESSAGE\",\n  \"errors\": {\n    \"PARAM1\": [\"MESSAGE\"],\n    \"PARAM2\": [\"MESSAGE\"]\n  }\n}","trading-balance-by-currency#Trading balance by currency":"","this-endpoint-is-deprecated-use-v4-endpoint-instead#This endpoint is deprecated. Use V4 endpoint instead":"[POST] /api/v1/account/balance\nThis endpoint retrieves the trade balance by currency ticker.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tcurrency\tString\tYes\tCurrency's ticker. Example: BTC\t\nRequest BODY raw:\n{\n  \"currency\": \"BTC\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\n{\n  \"available\": \"0.2\", // Available balance of currency for trading\n  \"freeze\": \"1.02\" // Balance of currency on orders\n}\n{\n  \"message\": \"Currency not found\"\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ticker\": [\"The ticker must be a string.\"]\n  }\n}","trading-balances#Trading balances":"","this-endpoint-is-deprecated-use-v4-endpoint-instead-1#This endpoint is deprecated. Use V4 endpoint instead":"[POST] /api/v1/account/balances\nThis endpoint retrieves all available balances for trading.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nNONERequest BODY raw:\n{\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\n{\n    \"success\": true,\n    \"message\": \"\",\n    \"result\": {\n        \"BAT\": {\n            \"available\": \"0\",\n            \"freeze\": \"0\"\n        },\n        \"BCH\": {\n            \"available\": \"0.00096586\",\n            \"freeze\": \"0\"\n        },\n        \"BNB\": {\n            \"available\": \"0\",\n            \"freeze\": \"0\"\n        },\n        \"BSV\": {\n            \"available\": \"0\",\n            \"freeze\": \"0\"\n        },\n        \"BTC\": {\n            \"available\": \"0.2\",\n            \"freeze\": \"1.02\"\n        },\n        \"BTG\": {\n            \"available\": \"0\",\n            \"freeze\": \"0\"\n        },\n        \"BTT\": {\n            \"available\": \"0\",\n            \"freeze\": \"0\"\n        },\n        \"DASH\": {\n            \"available\": \"0\",\n            \"freeze\": \"0\"\n        },\n        \"DBTC\": {\n            \"available\": \"0.47\",\n            \"freeze\": \"0\"\n        },\n        \"ETH\": {\n            \"available\": \"0.0000059\",\n            \"freeze\": \"0\"\n        },\n        \"EUR\": {\n            \"available\": \"0.00155901\",\n            \"freeze\": \"0\"\n        },\n        {...}\n    }\n}","create-limit-order#Create limit order":"","this-endpoint-is-deprecated-use-v4-endpoint-instead-2#This endpoint is deprecated. Use V4 endpoint instead":"[POST] /api/v1/order/new\nThis endpoint creates limit trading order.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tside\tString\tYes\tOrder type. Variables: 'buy' / 'sell' Example: 'buy'\tamount\tString\tYes\tAmount of stock currency to buy or sell. Example: '0.001'\tprice\tString\tYes\tPrice in money currency. Example: '9800'\tclientOrderId\tString\tNo\tIdentifier should be unique and contain letters, dashes or numbers only. The identifier must be unique for the next 24 hours.\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"buy\",\n  \"amount\": \"0.001\",\n  \"price\": \"40000\",\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\n{\n  \"orderId\": 4180284841, // order id\n  \"clientOrderId\": \"order1987111\", // custom client order id; \"clientOrderId\": \"\" - if not specified.\n  \"market\": \"BTC_USDT\", // deal market\n  \"side\": \"buy\", // order side\n  \"type\": \"limit\", // order type\n  \"timestamp\": 1595792396.165973, // current timestamp\n  \"dealMoney\": \"0\", // if order finished - amount in money currency that finished\n  \"dealStock\": \"0\", // if order finished - amount in stock currency that finished\n  \"amount\": \"0.001\", // amount\n  \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n  \"takerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n  \"left\": \"0.001\", // if order not finished - rest of amount that must be finished\n  \"dealFee\": \"0\", // fee in money that you pay if order is finished\n  \"price\": \"40000\" // price\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"The amount field is required.\"],\n    \"market\": [\"The market field is required.\"],\n    \"price\": [\"The price field is required.\"],\n    \"side\": [\"The side field is required.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"side\": [\"The selected side is invalid.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"The amount must be a number.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"The price must be a number.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Unknown market.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Given amount is less than min amount 0.0001\"],\n    \"total\": [\"Total is less than 5.05\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\"The field should be a string.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\"The field format should be: «0-9a-z»\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"This client order id is already used by the current account. It will become available in 24 hours (86400 seconds). \"\n    ]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"Min amount step = 0.01\" //money/stock precision is not taken into consideration when order was submitted\n    ]\n  }\n}","cancel-order#Cancel order":"","this-endpoint-is-deprecated-use-v4-endpoint-instead-3#This endpoint is deprecated. Use V4 endpoint instead":"[POST] /api/v1/order/cancel\nThis endpoint cancels the existing order.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\torderId\tInt\tYes\tOrder Id. Example: 4180284841\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"orderId\": 4180284841,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\n{\n  \"amount\": \"0.001\", // amount\n  \"dealFee\": \"0\", // fee in money that you pay if order is finished\n  \"dealMoney\": \"0\", // if order finished - amount in money currency that finished\n  \"dealStock\": \"0\", // if order finished - amount in stock currency that finished\n  \"left\": \"0.001\", // if order not finished - rest of amount that must be finished\n  \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n  \"market\": \"BTC_USDT\", // deal market\n  \"orderId\": 4180284841, // order id\n  \"clientOrderId\": \"order1987111\", // custom client order id; \"clientOrderId\": \"\" - if not specified.\n  \"price\": \"9800\", // price\n  \"side\": \"buy\", // order side\n  \"takerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n  \"timestamp\": 1595792396.165973, // current timestamp\n  \"type\": \"limit\" // order type\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"The market field is required.\"],\n    \"orderId\": [\"The order id field is required.\"]\n  }\n}\n{\n  \"code\": 2,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"order_id\": [\"Unexecuted order was not found.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"orderId\": [\"The order id must be an integer.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\n      \"The market must be a string.\",\n      \"The market format is invalid.\",\n      \"Market is not available\"\n    ]\n  }\n}","query-unexecutedactive-orders#Query unexecuted(active) orders":"","this-endpoint-is-deprecated-use-v4-endpoint-instead-4#This endpoint is deprecated. Use V4 endpoint instead":"[POST] /api/v1/orders\nThis endpoint retrieves unexecuted orders only.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 50, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"offset\": 0,\n  \"limit\": 100,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\n[\n    {\n        \"orderId\": 3686033640,            // unexecuted order ID\n        \"clientOrderId\": \"order1987111\",  // custom client order id; \"clientOrderId\": \"\" - if not specified.\n        \"market\": \"BTC_USDT\",             // currency market\n        \"side\": \"buy\",                    // order side\n        \"type\": \"limit\",                  // unexecuted order type\n        \"timestamp\": 1594605801.49815,    // current timestamp of unexecuted order\n        \"dealMoney\": \"0\",                 // executed amount in money\n        \"dealStock\": \"0\",                 // executed amount in stock\n        \"amount\": \"2.241379\",             // active order amount\n        \"takerFee\": \"0.001\",              // taker fee ratio. If the number less than 0.0001 - its rounded to zero\n        \"makerFee\": \"0.001\",              // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n        \"left\": \"2.241379\",               // unexecuted amount in stock\n        \"dealFee\": \"0\",                   // executed fee by deal\n        \"price\": \"60000\"                  // unexecuted order price\n    },\n    {...}\n]\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"The market field is required.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be an integer.\"],\n    \"offset\": [\"The offset must be an integer.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit may not be greater than 100.\"],\n    \"offset\": [\"The offset may not be greater than 10000.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be at least 1.\"],\n    \"offset\": [\"The offset must be at least 0.\"]\n  }\n}","query-order-history#Query order history":"","this-endpoint-is-deprecated-use-v4-endpoint-instead-5#This endpoint is deprecated. Use V4 endpoint instead":"[POST] /api/v1/account/order_history\nThis endpoint retrieves orders history sorted by all markets❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tNo\tRequested available market. Example: BTC_USDT\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 50, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nRequest BODY raw:\n{\n  \"offset\": 0,\n  \"limit\": 100,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\n{\n    \"success\": true,\n    \"message\": \"\",\n    \"result\": {\n        \"BTC_USDT\": [\n            {\n                \"amount\": \"0.70326019\",           // executed order amount\n                \"price\": \"0\",                     // executed order price, if executed order type is market it is equal to 0\n                \"type\": \"market\",                 // executed order type\n                \"id\": 3711942768,                 // executed order ID\n                \"clientOrderId\": \"order11-23-3\",  // custom client order ID; \"clientOrderId\": \"\" - if not specified.\n                \"side\": \"sell\",                   // executed order side\n                \"ctime\": 1594667731.724387,       // executed order creating time\n                \"takerFee\": \"0.001\",              // taker fee ratio. If the number less than 0.0001 - it is rounded to zero\n                \"ftime\": 1594667731.724403,       // executed order finish time\n                \"makerFee\": \"0.001\",              // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n                \"dealFee\": \"0\",                   // executed order fee that user pay\n                \"dealStock\": \"0.000076\",          // executed order amount in stock\n                \"dealMoney\": \"0.70407996\",        // executed order amount in money\n                \"marketName\": \"BTC_USDT\",         // market name\n                \"status\": 1                      // Order status: either 1 (finished) or 2 (canceled)\n            }\n        ],\n        \"DBTC_DUSDT\": [\n            {...}\n        ],\n        \"ETH_USDT\": [\n            {...}\n        ]\n    }\n}\n{\n  \"success\": false,\n  \"message\": {\n    \"market\": [\"The market must be a string.\", \"The market format is invalid.\"]\n  },\n  \"result\": []\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be an integer.\"],\n    \"offset\": [\"The offset must be an integer.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit may not be greater than 100.\"],\n    \"offset\": [\"The offset may not be greater than 10000.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be at least 1.\"],\n    \"offset\": [\"The offset must be at least 0.\"]\n  }\n}","query-executed-order-history-by-single-market#Query executed order history by single market":"","this-endpoint-is-deprecated-use-v4-endpoint-instead-6#This endpoint is deprecated. Use V4 endpoint instead":"[POST] /api/v1/account/executed_history\nThis endpoint retrieves deals history sorted by single market❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tRequested available market. Example: BTC_USDT\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records that a particular query can return. Default: 50, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"offset\": 0,\n  \"limit\": 100,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\n{\n    \"success\": true,\n    \"message\": \"\",\n    \"result\": [\n        {\n            \"id\": 160305483,                  // orderID\n            \"clientOrderId\": \"order1987111\",  // custom client order id; \"clientOrderId\": \"\" - if not specified.\n            \"time\": 1594667731.724403,        // Timestamp of executed order\n            \"side\": \"sell\",                   // Order side \"sell\" / \"buy\"\n            \"role\": 2,                        // Role - 1 - maker, 2 - taker\n            \"amount\": \"0.000076\",             // amount in stock\n            \"price\": \"9264.21\",               // price\n            \"deal\": \"0.70407996\",             // amount in money\n            \"fee\": \"0.00070407996\"            // fee that you pay\n        },\n        {...}\n    ]\n}\n{\n  \"success\": false,\n  \"message\": {\n    \"market\": [\"The market must be a string.\", \"The market format is invalid.\"]\n  },\n  \"result\": []\n}\n{\n  \"success\": false,\n  \"message\": {\n    \"market\": [\"The market field is required.\"]\n  },\n  \"result\": []\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit may not be greater than 100.\"],\n    \"offset\": [\"The offset may not be greater than 10000.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be at least 1.\"],\n    \"offset\": [\"The offset must be at least 0.\"]\n  }\n}","query-executed-order-history-by-all-markets#Query executed order history by all markets":"","this-endpoint-is-deprecated-use-v4-endpoint-instead-7#This endpoint is deprecated. Use V4 endpoint instead":"[POST] /api/v1/account/executed_history/all\nThis endpoint retrieves orders history sorted by all markets.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 50, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nRequest BODY raw:\n{\n  \"offset\": 0,\n  \"limit\": 100,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\n{\n    \"success\": true,\n    \"message\": \"\",\n    \"result\": {\n        \"BTC_USDT\": [\n            {\n                \"id\": 160305483,                    // orderID\n                \"clientOrderId\": \"order1987111\",    // custom client order id; \"clientOrderId\": \"\" - if not specified.\n                \"time\": 1594667731.724403,          // Timestamp of executed order\n                \"side\": \"sell\",                     // Order side \"sell\" / \"buy\"\n                \"role\": 2,                          // Role - 1 - maker, 2 - taker\n                \"amount\": \"0.000076\",               // amount in stock\n                \"price\": \"9264.21\",                 // price\n                \"deal\": \"0.70407996\",               // amount in money\n                \"fee\": \"0.00070407996\"              // paid fee\n            },\n            {...},\n        ],\n        \"DBTC_DUSDT\": [\n            {...}\n        ]\n    }\n}\n{\n  \"success\": false,\n  \"message\": {\n    \"market\": [\"The market must be a string.\", \"The market format is invalid.\"]\n  },\n  \"result\": []\n}\n{\n  \"success\": false,\n  \"message\": {\n    \"market\": [\"The market field is required.\"]\n  },\n  \"result\": []\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit may not be greater than 100.\"],\n    \"offset\": [\"The offset may not be greater than 10000.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be at least 1.\"],\n    \"offset\": [\"The offset must be at least 0.\"]\n  }\n}","query-executed-order-deals#Query executed order deals":"","this-endpoint-is-deprecated-use-v4-endpoint-instead-8#This endpoint is deprecated. Use V4 endpoint instead":"[POST] /api/v1/account/order\nThis endpoint retrieves more details on order deals history.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\torderId\tInt\tYes\tOrder ID. Example: 1234\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 50, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nRequest BODY raw:\n{\n  \"orderId\": 3135554375,\n  \"offset\": 0,\n  \"limit\": 100,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Empty response if order is not yours\n{\n  \"success\": true,\n  \"message\": \"\",\n  \"result\": {\n    \"limit\": 50,\n    \"offset\": 0,\n    \"records\": [\n      {\n        \"id\": 149156519, // id of trade\n        \"clientOrderId\": \"order1987111\", // custom client order id; \"clientOrderId\": \"\" - if not specified.\n        \"amount\": \"598\", // amount in stock\n        \"time\": 1593342324.613711, // Timestamp of executed order\n        \"dealOrderId\": 3134995325, // completed order ID\n        \"role\": 2, // Role - 1 - maker, 2 - taker\n        \"deal\": \"0.00419198\", // amount in money\n        \"price\": \"0.00000701\", // price\n        \"fee\": \"0.00000419198\" // paid fee\n      }\n    ]\n  }\n}\n{\n  \"success\": false,\n  \"message\": {\n    \"orderId\": [\"The order id field is required.\"]\n  },\n  \"result\": []\n}\n{\n  \"success\": false,\n  \"message\": {\n    \"orderId\": [\"The order id must be an integer.\"]\n  },\n  \"result\": []\n}\n{\n  \"success\": false,\n  \"message\": {\n    \"limit\": [\"The limit may not be greater than 100.\"],\n    \"offset\": [\"The offset may not be greater than 10000.\"]\n  },\n  \"result\": []\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be at least 1.\"],\n    \"offset\": [\"The offset must be at least 0.\"]\n  }\n}"}},"/private/http-main-v4":{"title":"Private HTTP API V4 for Main balance changes","data":{"":"Error messages V4 format\nMain balance\nGet cryptocurrency deposit address\nGet fiat deposit address\nCreate withdraw request\nCreate withdraw request with the specific withdraw amount (fee is not included)\nTransfer between main and trade balances\nGet deposit/withdraw history\nCreate new address for deposit\nCodes\nCreate code\nApply code\nGet my codes\nGet codes history\nCrypto Lеnding\nGet plans\nInvest\nClose investment\nGet investments history\nGet interest payments history\nFees\nGet fees\nBase URL is https://whitebit.comEndpoint example: https://whitebit.com/api/v4/{endpoint}All endpoints return time in Unix-time format.All endpoints return either a JSON object or array.For receiving responses from API calls please use http method POST","error-messages-v4-format#Error messages V4 format":"{\n  \"code\": 0,\n  \"message\": \"MESSAGE\",\n  \"errors\": {\n    \"PARAM1\": [\"MESSAGE\"],\n    \"PARAM2\": [\"MESSAGE\"]\n  }\n}","main-balance#Main balance":"[POST] /api/v4/main-account/balance\nThis endpoint retrieves the main balance by currency ticker or all balances.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tticker\tString\tNo\tCurrency's ticker. Example: BTC\t\nRequest BODY raw:\n{\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if request validation failed\n{\n    \"BSV\": {\n        \"main_balance\": \"0\"           // main balance volume of BSV\n    },\n    \"BTC\": {\n        \"main_balance\": \"0\"           // main balance volume of BTC\n    },\n    \"BTG\": {\n        \"main_balance\": \"0\"           // main balance volume of BTG\n    },\n    \"BTT\": {\n        \"main_balance\": \"0\"           // main balance volume of BTT\n    },\n    \"XLM\": {\n        \"main_balance\": \"36.48\"       // main balance volume of XLM\n    },\n    \"currecty_ticker\": {...}\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ticker\": [\"The selected ticker is invalid.\"]\n  }\n}","get-cryptocurrency-deposit-address#Get cryptocurrency deposit address":"[POST] /api/v4/main-account/address\nThis endpoint retrieves a deposit address of the cryptocurrency.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tticker\tString\tYes\tCurrencies ticker. Example: BTC ⚠ Currency ticker should not be fiat and it's \"can_deposit\" status must be \"true\". You can find this status in https://whitebit.com/api/v4/public/assets respsonse.\tnetwork\tString\tYes, if currency is multinetwork\tCryptocurrency network. ⚠ If currency has multiple networks like USDT - you need to specify network to be used. You can find ticker networks list in “networks” field from response https://whitebit.com/api/v4/public/assets.\t\nRequest BODY raw:\n{\n  \"ticker\": \"BTC\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nRequest BODY (for multinetwork currency) raw:\n{\n  \"ticker\": \"USDT\",\n  \"network\": \"ERC20\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 400 if request validation failed\nStatus 503 if service temporary unavailable\n{\n  \"account\": {\n    \"address\": \"\", // deposit address\n    \"memo\": \"48565488244493\" // memo if currency requires memo\n  },\n  \"required\": {\n    \"fixedFee\": \"0\", // fixed deposit fee\n    \"flexFee\": {\n      // flexible fee - is fee that use percent rate\n      \"maxFee\": \"0\", // maximum fixed fee that you will pay\n      \"minFee\": \"0\", // minimum fixed fee that you will pay\n      \"percent\": \"0\" // percent of deposit that you will pay\n    },\n    \"maxAmount\": \"0\", // max amount of deposit that can be accepted by exchange - if you deposit more than that number, it won't be accepted by exchange\n    \"minAmount\": \"1\" // min amount of deposit that can be accepted by exchange - if you will deposit less than that number, it won't be accepted by exchange\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ticker\": [\"The selected ticker is invalid.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"network\": [\"The selected network is invalid.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"ticker\": [\"Currency is not depositable\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ticker\": [\"Fiat deposits are available only on the website\"]\n  }\n}","get-fiat-deposit-address#Get fiat deposit address":"[POST] /api/v4/main-account/fiat-deposit-url\nThis endpoint retrieves a deposit url of the fiat invoice. Please, pay attention that this endpoint works on demand. It means that you need to contact WhiteBIT support and provide your API key to get access to this functionality.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tticker\tString\tYes\tCurrencies ticker. Example: UAH ⚠ Currencies ticker should be: fiat and has \"can_deposit\" status must be \"true\". Use this url to know more about currency.\tprovider\tString\tYes\tFiat currency provider. Example: VISAMASTER ⚠ Currency provider should be taken from https://whitebit.com/api/v4/public/assets response.\tamount\tNumeric String\tYes\tDeposit amount.\tuniqueId\tString\tYes\tUnique transaction identifier on client's side.\tcustomer.firstName\tString\tYes, if currency USD or EUR with VISAMASTER provider\tCustomer billing first name\tcustomer.lastName\tString\tYes, if currency USD or EUR with VISAMASTER provider\tCustomer billing last name\tcustomer.email\tString\tYes, if currency USD or EUR with VISAMASTER provider\tCustomer billing email\tsuccessLink\tString\tNo\tCustomer will be redirected to this URL by acquiring provider after success deposit. To activate this feature, please contact support\tfailureLink\tString\tNo\tCustomer will be redirected to this URL in case of fail or rejection on acquiring provider side. To activate this feature, please contact support\treturnLink\tString\tNo\tCustomer will be redirected to the URL defined if selects 'back' option after from the payment success or failure page. To activate this feature, define desired link. If not populated, option 'back' won't be displayed\t\nRequest BODY raw:\n{\n  \"ticker\": \"UAH\",\n  \"provider\": \"VISAMASTER\",\n  \"amount\": \"100\",\n  \"uniqueId\": \"{{generateID}}\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nRequest BODY with customer fields raw:\n{\n  \"ticker\": \"UAH\",\n  \"provider\": \"VISAMASTER\",\n  \"amount\": \"100\",\n  \"uniqueId\": \"{{generateID}}\",\n  \"customer\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john_doe@email.com\"\n  },\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 400 if request validation failed\nStatus 503 if service temporary unavailable\n{\n  \"url\": \"https://someaddress.com\" // address for deposit\n}\n⚠ If you have used VISAMASTER as provider, you must pass referer header when you go to the invoice link (for example, pass referer header when you go to https://someaddress.com). Otherwise if there is no header (for example, you go to https://someaddress.com from Telegram message) you will be redirected to the WhiteBIT homepage\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount is too little for deposit\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"provider\": [\"Cannot find currency for specified provider\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"uniqueId\": [\"The unique id has already been taken.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"The amount must be a number.\"],\n    \"provider\": [\"The selected provider is invalid.\"],\n    \"ticker\": [\"The selected ticker is invalid.\"]\n  }\n}\n{\n  \"code\": 10,\n  \"message\": \"Failed to generate deposit url\"\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"The amount field is required.\"],\n    \"provider\": [\"The provider field is required.\"],\n    \"ticker\": [\"The ticker field is required.\"],\n    \"uniqueId\": [\"The unique id field is required.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"successLink\": [\n      \"Your domain is incorrect. Please contact support for more details\"\n    ],\n    \"failureLink\": [\n      \"Your domain is incorrect. Please contact support for more details\"\n    ]\n  }\n}\n{\n  \"success\": false,\n  \"message\": \"You don't have permission to use this endpoint. Please contact support for more details\",\n  \"code\": 0\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"successLink\": [\"Uri domain must have only https scheme\"],\n    \"failureLink\": [\"Uri domain must have only https scheme\"]\n  }\n}","create-withdraw-request#Create withdraw request":"[POST] /api/v4/main-account/withdraw\nThis endpoint creates withdraw for the specified ticker.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tticker\tString\tYes\tCurrencies ticker. Example: BTC ⚠ Currencies ticker must have \"can_deposit\" status equal to \"true\". Use this url to know more about currency.\tamount\tNumeric string\tYes\tWithdraw amount (including fee). If you want fee to be added to the specified amount, you need to use /main-account/withdraw-pay request (see examples there)\taddress\tString\tYes\tTarget address (wallet address for cryptocurrencies, identifier/card number for fiat currencies)\tmemo\tString\tYes, if currency is memoable\tTarget address (wallet address for cryptocurrencies, identifier/card number for fiat currencies)\tuniqueId\tString\tYes\tUnique transaction identifier. ⚠ Note that you should generate new unique id for each withdrawal request.\tprovider\tString\tYes, if currency is fiat\tFiat currency provider. Example: VISAMASTER ⚠ Currency provider should be taken from https://whitebit.com/api/v4/public/assets response.\tnetwork\tString\tNo\tCryptocurrency network. Available for multi network currencies. Example: OMNI ⚠ Currency network should be taken from https://whitebit.com/api/v4/public/assets response. Default for USDT is ERC20\tpartialEnable\tBoolean\tNo\tOptional parameter for FIAT withdrawals with increased Maximum Limit if set as “true”. In order to use this parameter your application should support “Partially successful” withdrawal status and latest updates in deposit/withdrawal history.\tbeneficiary\tObject\tYes, if currency ticker is one of: UAH_IBAN, USD_VISAMASTER, EUR_VISAMASTER, USD, EUR\tBeneficiary information data array.\tbeneficiary.firstName\tString\tYes, if currency ticker is one of: UAH_IBAN, USD_VISAMASTER, USD, EUR\tBeneficiary first name. Max length: 40 symbols, latin letters and special characters.\tbeneficiary.lastName\tString\tYes, if currency ticker is one of: UAH_IBAN, USD_VISAMASTER, USD, EUR\tBeneficiary last name. Max length: 40 symbols, latin letters and special characters.\tbeneficiary.tin\tInteger\tYes, if currency is UAH_IBAN\tBeneficiary TAX payer number. Integer, 10 digits.\tbeneficiary.phone\tString\tYes, if currency ticker is one of: USD_VISAMASTER, EUR_VISAMASTER\tBeneficiary phone number.\tbeneficiary.email\tString\tYes, if currency ticker is one of: USD_VISAMASTER, EUR_VISAMASTER\tBeneficiary email.\t\n_Please note that this endpoint has necessary limitation to avoid spam attack. The limit is 100 requests per minute. In case the limit is exceeded you will receive an 429 error code. _Request BODY raw:\n{\n  \"ticker\": \"ETH\",\n  \"amount\": \"0.9\",\n  \"address\": \"0x0964A6B8F794A4B8d61b62652dB27ddC9844FB4c\",\n  \"uniqueId\": \"24529041\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nRequest BODY (for multinetwork currency) raw:\n{\n  \"ticker\": \"USDT\",\n  \"amount\": \"0.9\",\n  \"address\": \"0x0964A6B8F794A4B8d61b62652dB27ddC9844FB4c\",\n  \"uniqueId\": \"24529042\",\n  \"network\": \"ERC20\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nRequest BODY (for fiat currency) raw:\n{\n  \"ticker\": \"UAH\",\n  \"amount\": \"100\",\n  \"provider\": \"VISAMASTER\",\n  \"uniqueId\": \"24529043\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nRequest BODY (for fiat currency with partialEnable) raw:\n{\n  \"ticker\": \"UAH\",\n  \"amount\": \"50000\",\n  \"address\": \"4111111111111111\",\n  \"provider\": \"VISAMASTER_PAYCORE\",\n  \"partialEnable\": true,\n  \"uniqueId\": \"24529045\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nRequest BODY (for fiat IBAN currency) raw:\n{\n  \"ticker\": \"UAH\",\n  \"amount\": \"50000\",\n  \"address\": \"UA213223130000026007233566001\",\n  \"beneficiary\": {\n    \"firstName\": \"Firstname\",\n    \"lastName\": \"Lastname\",\n    \"tin\": 1000000000\n  },\n  \"provider\": \"UAH_IBAN\",\n  \"uniqueId\": \"24529045\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nRequest BODY (for fiat USD_VISAMASTER, EUR_VISAMASTER payment providers) raw:\n{\n  \"ticker\": \"USD\",\n  \"amount\": \"30000\",\n  \"address\": \"4111111111111111\",\n  \"beneficiary\": {\n    \"firstName\": \"Firstname\",\n    \"lastName\": \"Lastname\",\n    \"phone\": \"1234567891\",\n    \"email\": \"john_doe@email.com\"\n  },\n  \"provider\": \"USD_VISAMASTER\",\n  \"uniqueId\": \"24529045\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 201 if validation succeeded and withdraw creation process is started\nStatus 400 if request validation failed\nStatus 422 if inner validation failed\nResponse error codes:\n1 - currency is not withdrawable\n2 - specified address is invalid\n3 - amount is too small\n4 - amount is too small for the payment system\n5 - not enough balance\n6 - amount is less than or equals fee\n7 - amount should be integer (can happen for currencies with zero precision like Neo)\n8 - target withdraw amount without fee equals zero\n9 - address is unavailable (occurs for withdraws to own address)\n[\n  // empty array - has success status - go to deposit/withdraw history and check you request status by uniqueId\n]\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"address\": [\"The address field is required.\"],\n    \"amount\": [\"The amount field is required.\"],\n    \"ticker\": [\"The ticker field is required.\"],\n    \"uniqueId\": [\"The unique id field is required.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"uniqueId\": [\"The unique id has already been taken.\"]\n  }\n}\nErrors for unconfirmed users (without KYC):\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"This currency has no active pairs or it may have been delisted. Its rate cannot be calculated at the moment.\",\n      \"Current limit exceeded\"\n    ]\n  }\n}\nAlso, fiat currencies can't be withdrawn without KYC:\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Your account must be verified\"]\n  }\n}\n{\n  \"code\": 2,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"address\": [\"The address is invalid\"]\n  }\n}\n{\n  \"code\": 5,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough money, Ethereum balance = 1\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ticker\": [\"The selected ticker is invalid.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"provider\": [\"Provider is required for fiat currency\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"memo\": [\"The memo field is required.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"partialEnable\": [\"The partial enable field must be true or false.\"]\n  }\n}\n{\n  \"message\": \"Too Many Attempts.\", // In case of throttling\n  \"code\": 0\n}","create-withdraw-request-with-the-specific-withdraw-amount-fee-is-not-included#Create withdraw request with the specific withdraw amount (fee is not included)":"[POST] /api/v4/main-account/withdraw-pay\nThis endpoint has the similar logic as /main-account/withdraw, but with the only difference: amount that is specified will not include fee (it will be calculated to make target withdraw amount equal to the specified amount).❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEExample:\nWhen you create base withdraw and set amount = 100 USD, receiver will recieve 100 USD - fee amount, and your balance will decrease by 100 USD.\nWhen you use this endpoint and set amount = 100 USD, receiver will recieve 100 USD, and your balance will decrease by 100 USD + fee amount.","transfer-between-main-and-trade-balances#Transfer between main and trade balances":"[POST] /api/v4/main-account/transfer\nThis endpoint transfers the specified amount between main and trade balances❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmethod\tString\tNo if from and to are set\tMethod We highly recommend to use from and to fields, which provides more flexibility. This way will be deprecated in future. Example: deposit if you need to transfer from main to trade / withdraw if you need to transfer from trade balance to main. For collateral balances you can use collateral-deposit to transfer from main to collateral balance and collateral-withdraw to transfer from collateral balance to main\tfrom\tString\tNo if method is set\tBalance FROM which funds will move to. Acceptable values: main, spot, collateral\tto\tString\tNo if method is set\tBalance TO which funds will move to. Acceptable values: main, spot, collateral\tticker\tString\tYes\tCurrency's ticker. Example: BTC\tamount\tNumeric string\tYes\tAmount to transfer. Max precision = 8, value should be greater than zero and less or equal your available balance.\t\n_Please note that this endpoint has necessary limitation to avoid spam attack. The limit is 100 requests per minute. In case the limit is exceeded you will receive an 429 error code. _Request BODY raw:\n{\n  \"ticker\": \"XLM\",\n  \"amount\": \"0.9\",\n  \"method\": \"deposit\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 201 if all validations succeeded and creating transaction is started\nStatus 400 if request validation failed\nStatus 422 if inner validation failed\nResponse error codes:\n1 - transfers from trade to main are disabled\n2 - transfers from main to trade are disabled\n3 - not enough balance\n[\n  // empty array - has success status\n]\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"The amount field is required.\"],\n    \"method\": [\"The method field is required.\"],\n    \"ticker\": [\"The ticker field is required.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ticker\": [\"The selected ticker is invalid.\"]\n  }\n}\nErrors for unconfirmed users (without KYC):\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"This currency has no active pairs or it may have been delisted. Its rate cannot be calculated at the moment.\",\n      \"Current limit exceeded\"\n    ]\n  }\n}\nAlso, fiat currencies can't be withdrawn without KYC:\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Your account must be verified\"]\n  }\n}\n{\n  \"code\": 3,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"You don't have such amount for transfer (available 34.68, in amount: 1000000)\"\n    ]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"method\": [\"The selected method is invalid.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"The amount must be at least 0.00000001.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"The amount must be a number.\", \"Invalid number\"]\n  }\n}\n{\n  \"message\": \"Too Many Attempts.\", // In case of throttling\n  \"code\": 0\n}","get-depositwithdraw-history#Get deposit/withdraw history":"[POST] /api/v4/main-account/history\nThis endpoint retrieves the history of deposits and withdraws❗ Rate limit 200 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\ttransactionMethod\tNumber\tNo\tMethod. Example: 1 to display deposits / 2 to display withdraws. Do not send this parameter in order to receive both deposits and withdraws.\tticker\tString\tNo\tCurrency's ticker. Example: BTC\taddress\tString\tNo\tCan be used for filtering transactions by specific address or memo.\taddresses\tArray\tNo\tCan be used for filtering transactions by specific addresses or memos (max: 20).\tuniqueId\tString\tNo\tCan be used for filtering transactions by specific unique id\tlimit\tInt\tYes\tLIMIT is a special clause used to limit records a particular query can return. Default: 50, Min: 1, Max: 100\toffset\tInt\tYes\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\tstatus\tArray\tNo\tCan be used for filtering transactions by status codes. ❗ Caution: You must use this parameter with appropriate transactionMethod and use valid status codes for this method. You can find them below. Example: \"status\": [3,7]\t\nDeposit status codes:\tSuccessful - 3, 7\tCanceled - 4, 9\tUnconfirmed by user - 5\tAML frozen - 21\tUncredited - 22\tPending - 15\t\nWithdraw status codes:\tPending - 1, 2, 6, 10, 11, 12, 13, 14, 15, 16, 17\tSuccessful - 3, 7\tCanceled - 4\tUnconfirmed by user - 5\tAML frozen - 21\tPartially successful - 18\t\nRequest BODY raw:\n{\n  \"transactionMethod\": \"1\",\n  \"ticker\": \"BTC\",\n  \"offset\": 0,\n  \"limit\": 100,\n  \"status\": [3, 7],\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 201 if all validations succeeded and creating transaction is started\nStatus 400 if request validation failed\nStatus 422 if inner validation failed\nResponse error codes:\n1 - transfers from trade to main are disabled\n2 - transfers from main to trade are disabled\n3 - not enough balance\n{\n    \"limit\": 100,\n    \"offset\": 0,\n    \"records\": [\n        {\n            \"address\": \"3ApEASLcrQtZpg1TsssFgYF5V5YQJAKvuE\",                                        // deposit address\n            \"uniqueId\": null,                                                                       // unique Id of deposit\n            \"createdAt\": 1593437922,                                                                // timestamp of deposit\n            \"currency\": \"Bitcoin\",                                                                  // deposit currency\n            \"ticker\": \"BTC\",                                                                        // deposit currency ticker\n            \"method\": 1,                                                                            // called method 1 - deposit, 2 - withdraw\n            \"amount\": \"0.0006\",                                                                     // amount of deposit\n            \"description\": \"\",                                                                      // deposit description\n            \"memo\": \"\",                                                                             // deposit memo\n            \"fee\": \"0\",                                                                             // deposit fee\n            \"status\": 15,                                                                           // transactions status\n            \"network\": null,                                                                        // if currency is multinetwork\n            \"transactionHash\": \"\",  // deposit transaction hash\n            \"transactionId\": \"5e112b38-9652-11ed-a1eb-0242ac120002\",                                // transaction id\n            \"details\": {\n                \"partial\": {                                                                        // details about partially successful withdrawals\n                    \"requestAmount\": \"50000\",                                                       // requested withdrawal amount\n                    \"processedAmount\": \"39000\",                                                     // processed withdrawal amount\n                    \"processedFee\": \"273\",                                                          // fee for processed withdrawal amount\n                    \"normalizeTransaction\": \"\"                                                      // deposit id\n                }\n            },\n            \"confirmations\": {                                                                      // if transaction status == 15 (Pending) you can see this object\n                \"actual\": 1,                                                                        // current block confirmations\n                \"required\": 2                                                                       // required block confirmation for successful deposit\n            }\n        },\n        {...},\n        {...},\n        {...}\n    ],\n    \"total\": 300                                                                                    // total number of  transactions, use this for calculating ‘limit’ and ‘offset'\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit field is required.\"],\n    \"offset\": [\"The offset field is required.\"],\n    \"transactionMethod\": [\"The transaction method field is required.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ticker\": [\"The selected ticker is invalid.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"transactionMethod\": [\"The selected transaction method is invalid.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit may not be greater than 100.\"],\n    \"offset\": [\"The offset may not be greater than 10000.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be at least 1.\"],\n    \"offset\": [\"The offset must be at least 0.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be an integer.\"],\n    \"offset\": [\"The offset must be an integer.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"status\": [\"The selected status is invalid.\"]\n  }\n}","create-new-address-for-deposit#Create new address for deposit":"[POST] /api/v4/main-account/create-new-address\nThis endpoint creates a new address even when the last created address is not used. This endpoint is not available by default, you need to contact support@whitebit.com in order to get permissions to use this endpoint.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tticker\tString\tYes\tCurrency's ticker. Example: BTC\tnetwork\tString\tNo\tCurrency's network if it is multinetwork currency. Example: OMNI or TRC20 or ERC20. For USDT default network is ERC20(ETH).\ttype\tString\tNo\tAddress type, available for specific currencies list (see address types table below)\t\nAddress types:\nCurrency\tTypes\tDefault\tBTC\tp2sh-segwit, bech32\tbech32\tLTC\tp2sh-segwit, bech32\tbech32\t\nRequest BODY raw:\n{\n  \"ticker\": \"XLM\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nRequest BODY (for multinetwork currency) raw:\n{\n  \"ticker\": \"USDT\",\n  \"network\": \"ERC20\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nRequest BODY (for BTC with specific address type):\n{\n  \"ticker\": \"BTC\",\n  \"type\": \"bech32\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 201 if all validations succeeded and creating transaction is started\nStatus 400 if request validation failed\nStatus 422 if inner validation failed\n{\n  \"account\": {\n    \"address\": \"\", // deposit address\n    \"memo\": \"48565488244493\" // memo if currency requires memo\n  },\n  \"required\": {\n    \"maxAmount\": \"0\", // max amount of deposit that can be accepted by exchange - if you deposit more than that number, it won't be accepted by exchange\n    \"minAmount\": \"1\", // min amount of deposit that accepted by exchange - if you deposit less than that number, it won't be accepted by exchange\n    \"fixedFee\": \"0\", // fixed deposit fee\n    \"flexFee\": {\n      // flexible fee - is fee that use percent rate\n      \"maxFee\": \"0\", // maximum fixed fee that you will pay\n      \"minFee\": \"0\", // minimum fixed fee that you will pay\n      \"percent\": \"0\" // percent of deposit that you will pay\n    }\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ticker\": [\"The ticker field is required.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ticker\": [\"The selected ticker is invalid.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"network\": [\"Unsupported network\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"network\": [\"The network must be a string.\"],\n    \"ticker\": [\"The ticker must be a string.\"]\n  }\n}","codes#Codes":"","create-code#Create code":"[POST] /api/v4/main-account/codes\nThis endpoint creates WhiteBIT code.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tticker\tString\tYes\tCurrency's ticker. Example: BTC\tamount\tNumeric string\tYes\tAmount to transfer. Max precision = 8, value should be greater than zero and your main balance.\tpassphrase\tString\tNo\tPassphrase that will be used for applying codes. Passphrase must contain only latin letters, numbers and symbols (like !@#$%^, no whitespaces). Max: 25 symbols.\tdescription\tString\tNo\tAdditional text description for code. Visible only for creator Max: 75 symbols.\t\nRequest BODY raw:\n{\n  \"ticker\": \"ETH\",\n  \"amount\": \"0.002\",\n  \"passphrase\": \"some passphrase\",\n  \"description\": \"some description\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 201 if all validations succeeded and creating transaction is started\nStatus 400 if request validation failed\nStatus 422 if inner validation failed\nResponse error codes:\n0 - Fiat are available on the front-end only\n1 - currency is not withdrawable\n2 - specified address is invalid\n3 - amount is too small\n4 - amount is too small for the payment system\n5 - not enough balance\n6 - amount is less than or equals fee\n{\n  \"code\": \"WBe11f4fce-2a53-4edc-b195-66b693bd77e3ETH\", // generated WhiteBIT code\n  \"message\": \"Code was successfully created\",\n  \"external_id\": \"be08a482-5faf-11ed-9b6a-0242ac120002\"\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"The amount field is required.\"],\n    \"ticker\": [\"The ticker field is required.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"The amount must be a number.\", \"Invalid number\"],\n    \"description\": [\"The description must be a string.\"],\n    \"passphrase\": [\"The passphrase must be a string.\"],\n    \"ticker\": [\"The selected ticker is invalid.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"The amount must be at least 0.\"],\n    \"description\": [\"The description may not be greater than 75 characters.\"],\n    \"passphrase\": [\"The passphrase may not be greater than 25 characters.\"],\n    \"ticker\": [\"The selected ticker is invalid.\"]\n  }\n}\nErrors for unconfirmed users (without KYC):\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"This currency has no active pairs or it may have been delisted. Its rate cannot be calculated at the moment.\",\n      \"Current limit exceeded\"\n    ]\n  }\n}\nAlso, fiat currencies can't be withdrawn without KYC:\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Your account must be verified\"]\n  }\n}\nPassphrase must contain only latin letters, numbers and symbols (like !@#$%^, no whitespaces)\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"passphrase\": [\"The passphrase format is invalid.\"]\n  }\n}","apply-code#Apply code":"[POST] /api/v4/main-account/codes/apply\nThis endpoint applies WhiteBIT code.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tcode\tString\tYes\tCode that will be applied.\tpassphrase\tString\tNo\tShould be provided if the code was created with passphrase Max: 25 symbols.\t\nRequest BODY raw:\n{\n  \"code\": \"WBe11f4fce-2a53-4edc-b195-66b693bd77e3ETH\",\n  \"passphrase\": \"some passphrase\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 201 if all validations succeeded and creating transaction is started\nStatus 400 if request validation failed\nStatus 422 if inner validation failed\n{\n  \"message\": \"Code was successfully applied\",\n  \"ticker\": \"ETH\",\n  \"amount\": \"0.002\",\n  \"external_id\": \"be08a482-5faf-11ed-9b6a-0242ac120002\"\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"code\": [\"The code field is required.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"code\": [\"Incorrect code or passphrase\"]\n  }\n}","get-my-codes#Get my codes":"[POST] /api/v4/main-account/codes/my\nThis endpoint retrieves the list of WhiteBIT codes created by my account.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 30, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nRequest BODY raw:\n{\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 201 if all validations succeeded and creating transaction is started\nStatus 400 if request validation failed\nStatus 422 if inner validation failed\n{\n    \"total\": 15,\n    \"data\": [\n        {\n            \"amount\": \"0.002\",                                          // code amount\n            \"code\": \"WBe11f4fce-2a53-4edc-b195-66b693bd77e3ETH\",        // code\n            \"date\": 1598296332,                                         // code creation timestamp\n            \"status\": \"Activated\",                                      // code status\n            \"ticker\": \"ETH\",                                            // code ticker\n            \"external_id\": \"cf7c3ff8-5eb0-11ed-9b6a-0242ac120002\"       // code external id\n        },\n        {...}\n    ],\n    \"limit\": 30,\n    \"offset\": 0\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit may not be greater than 100.\"],\n    \"offset\": [\"The offset may not be greater than 10000.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be at least 1.\"],\n    \"offset\": [\"The offset must be at least 0.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be an integer.\"],\n    \"offset\": [\"The offset must be an integer.\"]\n  }\n}","get-codes-history#Get codes history":"[POST] /api/v4/main-account/codes/history\nThis endpoint retrieves the whole codes history on your account.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 30, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nRequest BODY raw:\n{\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 201 if all validations succeeded and creating transaction is started\nStatus 400 if request validation failed\nStatus 422 if inner validation failed\n{\n    \"total\": 29,\n    \"data\": [\n        {\n            \"amount\": \"+0.002\",                                           // code amount change; - is created; + is applied\n            \"code\": \"WBe11f4fce-2a53-4edc-b195-66b693bd77e3ETH\",          // code\n            \"date\": 1598296734,                                           // code activation timestamp\n            \"status\": \"Activated\",                                        // current code status\n            \"ticker\": \"ETH\",                                              // code ticker\n            \"external_id\": \"cf7c3ff8-5eb0-11ed-9b6a-0242ac120002\"         // code external id\n        },\n        {\n            \"amount\": \"-0.002\",                                           // code amount change; - is created; + is applied\n            \"code\": \"WBe11f4fce-2a53-4edc-b195-66b693bd77e3ETH\",          // code\n            \"date\": 1598296332,                                           // code creation timestamp\n            \"status\": \"Activated\",                                        // current code status\n            \"ticker\": \"ETH\",                                              // code ticker\n            \"external_id\": \"52995812-5eb1-11ed-9b6a-0242ac120002\"         // code external id\n        },\n        {...}\n    ],\n    \"limit\": 100,\n    \"offset\": 0\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit may not be greater than 100.\"],\n    \"offset\": [\"The offset may not be greater than 10000.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be at least 1.\"],\n    \"offset\": [\"The offset must be at least 0.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be an integer.\"],\n    \"offset\": [\"The offset must be an integer.\"]\n  }\n}","crypto-lеnding#Crypto Lеnding":"This API provides endpoints for interacting with Crypto Lеnding: getting active plans, creating/closing investments, retrieving investments/interest payments history.These endpoints are available only for B2B partner services, you need to fill the form https://whitebit.com/institutional-services/b2b in order to get permissions to use these endpoints.","get-plans#Get plans":"[POST] /api/v4/main-account/smart/plans\nThis endpoint retrieves all active plans❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tticker\tString\tNo\tInvest plan source currency's ticker. Example: BTC\t\nRequest BODY raw:\n{\n  \"ticker\": \"USDT\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if request validation failed\n[\n  {\n    \"id\": \"8e667b4a-0b71-4988-8af5-9474dbfaeb51\", // Invest plan identifier\n    \"ticker\": \"USDT\", // Source currency ticker\n    \"status\": 1, // Status (1 - active, 2 - no coins left, 3 - inactive, 4 - pause)\n    \"percent\": \"10\", // Interest percent\n    \"duration\": 14400, // Investment duration (in minutes)\n    \"interestTicker\": \"USDT\", // Target currency ticker\n    \"interestRatio\": \"1\", // Target currency to source currency ratio, see note\n    \"minInvestment\": \"100\", // Min investment amount\n    \"maxInvestment\": \"10000\", // Max investment amount\n    \"maxPossibleInvestment\": \"3000\" // Max investment amount due to current invest plan state\n  }\n]\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ticker\": [\"The selected ticker is invalid.\"]\n  }\n}\nNote: when target currency is different from source currency, interest amount in target currency will be calculated using interestRatio value.Examples:\nWhen source currency = USDT, target currency = BTC and interest ratio = 40000,\nit means that you will receive interest in BTC that equals interest amount in USDT divided by interest ratio (in this case 0.000025 BTC per each 1 USDT of interest amount).\nWhen source currency equals target currency, interest ratio equals 1.","invest#Invest":"[POST] /api/v4/main-account/smart/investment\nThis endpoint creates a new investment to the specified invest plan❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tplanId\tString\tYes\tInvest plan identifier\tamount\tNumeric String\tYes\tInvestment amount\t\nRequest BODY raw:\n{\n  \"planId\": \"8e667b4a-0b71-4988-8af5-9474dbfaeb51\",\n  \"amount\": \"100\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 201\nStatus 400 if request validation failed\nStatus 422 if inner validation failed\n{\n  \"id\": \"0d7b66ff-1909-4938-ab7a-d16d9a64dcd5\" // Investment identifier\n}\nRequest validation exceptions\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"planId\": [\"The selected planId is invalid.\"],\n    \"amount\": [\"The amount must be a number.\", \"Invalid number\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"The amount must be at least 0.000001.\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"The amount you are trying to invest is bigger than the amount left in this SMART plan. Please try investing a smaller amount.\"\n    ]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"planId\": [\"Plan is disabled\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"planId\": [\"Plan is inactive\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"planId\": [\"There are no coins left in the plan\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"planId\": [\"There are no coins left in the plan\"]\n  }\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"planId\": [\"Plan is paused\"]\n  }\n}\nInner validation exceptionsWhen investment already exists, and you don't have permissions to create multiple investments by plan\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"planId\": [\"The investment in this investment plan already exists\"]\n  }\n}\nWhen amount is less than min investment amount\n{\n  \"code\": 2,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"The amount you're trying to invest is lower than the minimum amount in this investment plan.\"\n    ]\n  }\n}\nWhen amount is greater than max investment amount\n{\n  \"code\": 3,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"The amount you're trying to invest exceeds the maximum amount in this investment plan.\"\n    ]\n  }\n}\nWhen there is not enough balance to create investment\n{\n  \"code\": 4,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"Insufficient coins on your balance. 9 available, you're trying to invest 10\"\n    ]\n  }\n}\nWhen there are no funds in plan to cover target interest amount\n{\n  \"code\": 5,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Insufficient funds for the payment.\"]\n  }\n}","close-investment#Close investment":"[POST] /api/v4/main-account/smart/investment/close\nThis endpoint closes active investment❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tid\tString\tYes\tInvestment identifier\t\nRequest BODY raw:\n{\n  \"id\": \"0d7b66ff-1909-4938-ab7a-d16d9a64dcd5\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if request validation failed\n{}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"id\": [\"Investment not found\"]\n  }\n}","get-investments-history#Get investments history":"[POST] /api/v4/main-account/smart/investments\nThis endpoint retrieves an investments history❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tid\tString\tNo\tInvestment identifier\tticker\tString\tNo\tInvest plan source currency's ticker\tstatus\tInteger\tNo\tInvestment status (1 - active, 2 - closed)\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 100, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nRequest BODY raw:\n{\n  \"id\": \"0d7b66ff-1909-4938-ab7a-d16d9a64dcd5\",\n  \"ticker\": \"USDT\",\n  \"status\": 1,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if request validation failed\n{\n  \"offset\": 0,\n  \"limit\": 100,\n  \"records\": [\n    {\n      \"id\": \"0d7b66ff-1909-4938-ab7a-d16d9a64dcd5\", // Investment id\n      \"plan\": {\n        // Similar to the record from Get plans response\n        \"id\": \"8e667b4a-0b71-4988-8af5-9474dbfaeb51\",\n        \"ticker\": \"USDT\",\n        \"status\": 1,\n        \"percent\": \"10\",\n        \"duration\": 14400,\n        \"interestTicker\": \"USDT\",\n        \"interestRatio\": \"1\",\n        \"minInvestment\": \"100\",\n        \"maxInvestment\": \"10000\",\n        \"maxPossibleInvestment\": \"3000\"\n      },\n      \"status\": 1, // Investment status (1 - active, 2 - closed)\n      \"created\": 1646825196, // Timestamp of investment creation\n      \"updated\": 1646825196, // Timestamp of investment update\n      \"paymentTime\": 1646839596, // Timestamp of the payment time\n      \"amount\": \"100\", // Investment amount\n      \"interestPaid\": \"0\" // Interest paid amount\n    }\n  ]\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"id\": [\"The selected id is invalid.\"],\n    \"ticker\": [\"The selected ticker is invalid.\"],\n    \"status\": [\"The selected status is invalid.\"]\n  }\n}","get-interest-payments-history#Get interest payments history":"[POST] /api/v4/main-account/smart/interest-payment-history\nThis endpoint retrieves the history of interest payments❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tplanId\tString\tNo\tInvest plan identifier\tticker\tString\tNo\tInvest plan target currency's ticker\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 100, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nRequest BODY raw:\n{\n  \"planId\": \"8e667b4a-0b71-4988-8af5-9474dbfaeb51\",\n  \"ticker\": \"USDT\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if request validation failed\n{\n  \"offset\": 0,\n  \"limit\": 100,\n  \"records\": [\n    {\n      \"planId\": \"8e667b4a-0b71-4988-8af5-9474dbfaeb51\", // Invest plan identifier\n      \"investmentId\": \"0d7b66ff-1909-4938-ab7a-d16d9a64dcd5\", // Investment identifier\n      \"amount\": \"10\", // Interest amount\n      \"ticker\": \"USDT\", // Interest currency ticker\n      \"timestamp\": 1646839596 // Transaction timestamp\n    }\n  ]\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"planId\": [\"The selected planId is invalid.\"],\n    \"ticker\": [\"The selected ticker is invalid.\"]\n  }\n}","fees#Fees":"This API provides an endpoint for getting deposit/withdrawal fees and limits by all currencies","get-fees#Get fees":"Returns an array of objects containing deposit/withdrawal settings for the corresponding currencies.\nZero value in amount fields means that the setting is disabled.\n[POST] /api/v4/main-account/fee\n❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEResponse:Available statuses:\nStatus 200\n[\n  {\n    \"ticker\": \"BTC\", // Ticker\n    \"name\": \"Bitcoin\", // Currency name\n    \"can_deposit\": \"0\", // Status currency\n    \"can_withdraw\": \"0\", // Status currency\n    \"deposit\": {\n      // Deposit fees/limits\n      \"minFlex\": \"0\", // Min fee amount when flex fee is enabled\n      \"maxFlex\": \"0\", // Max fee amount when flex fee is enabled\n      \"percentFlex\": \"0\", // Flex fee percent\n      \"fixed\": \"0\", // Fixed fee\n      \"minAmount\": \"0.0005\", // Min deposit amount\n      \"maxAmount\": \"0\" // Max deposit amount\n    },\n    \"withdraw\": {\n      // Withdrawal fees/limits\n      \"minFlex\": \"0\", // Min fee amount when flex fee is enabled\n      \"maxFlex\": \"0\", // Max fee amount when flex fee is enabled\n      \"percentFlex\": \"0\", // Flex fee percent\n      \"fixed\": \"0.0004\", // Fixed fee\n      \"minAmount\": \"0.001\", // Min withdrawal amount\n      \"maxAmount\": \"0\" // Max withdrawal amount\n    }\n  }\n]"}},"/private/websocket":{"title":"Private WebSocket API","data":{"":"Websocket token\nAuthorize\nBalance Spot\nBalance Margin\nOrders Pending\nOrders Executed\nDeals\nWebSocket endpoint is wss://api.whitebit.com/wsThe API is based on JSON RPC of WebSocket protocol.⚠️ Connection will be closed by server in cause of inactivity after 30s.❗ Rate limit 1000 ws connections per minute and 200 requests per minute in one connection.All endpoints return time in Unix-time format.","order-types#Order types":"Order type ID\tDescription\t1\tLimit\t2\tMarket\t202\tMarket stock\t3\tStop limit\t4\tStop market\t7\tMargin limit\t8\tMargin market\t9\tMargin stop limit\t10\tMargin trigger-stop market\t14\tMargin normalization","️-request-message#⤴️ Request message":"JSON Structure of request message:\nid - Integer. Should be unique to handle response for your request.\nmethod - String. Name of request.\nparams - Array. Here you pass params for method.\n🚫 WebSocket connection will be closed if invalid JSON was sent.","types-of-request-messages#Types of request messages":"Query (balanceSpot_request, ordersPending_request, etc)\nSubscription (balanceSpot_subscribe, ordersPending_subscribe, etc). Repeated subscription will be cancelled for the same data type.","️-response-message#⤵️ Response message":"JSON Structure of response message:\nid - Integer. Request ID.\nresult - Null for failure, for success - look for responses below\nerror - Null for success, JSON Object for failure:\nmessage - Detailed text\ncode - Error code\nCode\tMessage\t1\tinvalid argument\t2\tinternal error\t3\tservice unavailable\t4\tmethod not found\t5\tservice timeout","types-of-response-messages#Types of response messages":"Query result\nSubscription status (success/failed)\nUpdate events","examples#Examples":"Example messages for request with response:","️-request#⤴️ Request:":"{\n  \"id\": 0,\n  \"method\": \"authorize\",\n  \"params\": [\"<get_your_token_via_api>\", \"\"]\n}","️-response#⤵️ Response:":"{\n  \"id\": 0,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}\nExample subscription:","️-request-1#⤴️ Request:":"{\n  \"id\": 0,\n  \"method\": \"balanceSpot_subscribe\",\n  \"params\": []\n}","️-response-1#⤵️ Response:":"{\n  \"id\": 0,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events#🔄 Update events:":"{\n  \"id\": null,\n  \"method\": \"balanceSpot_update\",\n  \"params\": [] // look below for params\n}","api#API":"","websocket-token#Websocket token":"[POST] /api/v4/profile/websocket_token\nThis V4 endpoint can be used to retrieve the websocket token for user.Request BODY raw:\n{\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\n{\n  \"websocket_token\": \"your_current_token\"\n}","authorize#Authorize":"When you establish WS connection, you should authorize this ws connection via authorize method.\nAfter successful authorization you will be able to send requests for balances, orders etc.It only needs to be done successfully once.","️-request-2#⤴️ Request:":"{\n  \"id\": 0,\n  \"method\": \"authorize\",\n  \"params\": [\n    \"<get_your_token_via_api>\", // WebSocket Token,\n    \"public\" // constant string, always should be \"public\"\n  ]\n}","️-response-2#⤵️ Response:":"{\n  \"id\": 0,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","balance-spot#Balance Spot":"","query#Query":"","️-request-3#⤴️ Request:":"{\n    \"id\": 2,\n    \"method\": \"balanceSpot_request\",\n    \"params\": [\n        \"ETH\",  // asset\n        \"BTC\",  // asset\n        ...\n    ]\n}","️-response-3#⤵️ Response:":"{\n  \"id\": 2,\n  \"result\": {\n    \"ETH\": {\n      \"available\": \"0\", // Amount available for trade\n      \"freeze\": \"0\" // Amount in active orders\n    },\n    \"BTC\": {\n      \"available\": \"0\", // Amount available for trade\n      \"freeze\": \"0\" // Amount in active orders\n    }\n  },\n  \"error\": null\n}","subscribe#Subscribe":"Subscribe to receive updates in spot balances.","️-request-4#⤴️ Request:":"{\n    \"id\": 3,\n    \"method\": \"balanceSpot_subscribe\",\n    \"params\": [\n        \"USDT\", // asset\n        \"ETH\",  // asset\n        ...\n    ]\n}","️-response-4#⤵️ Response:":"{\n  \"id\": 3,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events-1#🔄 Update events:":"{\n    \"id\": null,\n    \"method\": \"balanceSpot_update\",\n    \"params\": [\n        {\n            \"USDT\": {\n                \"available\": \"100.1885\", // Amount available for trade\n                \"freeze\": \"0\"            // Amount in active orders\n            }\n        },\n        ...\n    ]\n}","unsubscribe#Unsubscribe":"","️-request-5#⤴️ Request:":"{\n  \"id\": 4,\n  \"method\": \"balanceSpot_unsubscribe\",\n  \"params\": []\n}","️-response-5#⤵️ Response:":"{\n  \"id\": 4,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","balance-margin#Balance Margin":"","query-1#Query":"Request for amount on margin balance.\nBalance available for margin trade is equal to balance * leverage and it depends on liquidity in orderbook and your open positions.\nWhen you open position, your balance will not change, but amount available for trade will decrease","️-request-6#⤴️ Request:":"{\n  \"id\": 2,\n  \"method\": \"balanceMargin_request\",\n  \"params\": [\n    \"BTC\", // asset\n    \"USDT\" // asset\n  ]\n}","️-response-6#⤵️ Response:":"{\n  \"error\": null,\n  \"result\": {\n    \"BTC\": {\n      \"balance\": \"0.0006092\", // total amount on collateral balance\n      \"borrow\": \"0\", // borrowed amount\n      \"available_without_borrow\": \"0.0006092\", // available amount to transfer from collateral balance without borrowing\n      \"available_with_borrow\": \"0.00288701\" // available amount to transfer  from collateral balance with borrowing\n    },\n    \"USDT\": {\n      \"balance\": \"0.00538073\", // total amount on collateral balance\n      \"borrow\": \"0\", // borrowed amount\n      \"available_without_borrow\": \"0.00538073\", // available amount to transfer from collateral balance without borrowing\n      \"available_with_borrow\": \"28.43739825\" // available amount to transfer  from collateral balance with borrowing\n    }\n  },\n  \"id\": 1\n}","subscribe-1#Subscribe":"Subscribe to receive updates in spot balances.","️-request-7#⤴️ Request:":"{\n  \"id\": 3,\n  \"method\": \"balanceMargin_subscribe\",\n  \"params\": [\n    \"BTC\", // asset\n    \"USDT\" // asset\n  ]\n}","️-response-7#⤵️ Response:":"{\n  \"id\": 3,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events-2#🔄 Update events:":"{\n  \"method\": \"balanceMargin_update\",\n  \"params\": [\n    {\n      \"a\": \"BTC\", // asset ticker\n      \"B\": \"0.0006092\", // total amount on collateral balance\n      \"b\": \"0\", // borrowed amount\n      \"av\": \"0.0006092\", // available amount to transfer from collateral balance without borrowing\n      \"ab\": \"0.00288701\" // available amount to transfer  from collateral balance with borrowing\n    },\n    {\n      \"a\": \"USDT\", // asset ticker\n      \"B\": \"0.00538073\", // total amount on collateral balance\n      \"b\": \"0\", // borrowed amount\n      \"av\": \"0.00538073\", // available amount to transfer from collateral balance without borrowing\n      \"ab\": \"28.43739825\" // available amount to transfer  from collateral balance with borrowing\n    }\n  ],\n  \"id\": null\n}","unsubscribe-1#Unsubscribe":"","️-request-8#⤴️ Request:":"{\n  \"id\": 4,\n  \"method\": \"balanceMargin_unsubscribe\",\n  \"params\": []\n}","️-response-8#⤵️ Response:":"{\n  \"id\": 4,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","orders-pending#Orders Pending":"","query-2#Query":"","️-request-9#⤴️ Request:":"Market should exist. The maximum limit is 100.\n{\n  \"id\": 8,\n  \"method\": \"ordersPending_request\",\n  \"params\": [\n    \"BTC_USDT\", // market\n    0, // offset\n    30 // limit\n  ]\n}","️-response-9#⤵️ Response:":"All possible order types\n{\n    \"id\": 8,\n    \"result\": {\n        \"limit\": 100,                       // Limit from request\n        \"offset\": 0,                        // Offset from request\n        \"total\": 124,                       // Total count of records\n        \"records\": [\n            {\n                \"id\": 6880290,              // Order ID\n                \"market\": \"BTC_USDT\",       // Market\n                \"type\": 1,                  // Order type. All types in table above\n                \"side\": 1,                  // Side 1 - sell, 2 - bid\n                \"post_only\": true,          // Post only flag\n                \"ctime\": 1601464682.998461, // Created at in Unix time\n                \"mtime\": 1601464682.998461, // Modified at in Unix time\n                \"price\": \"10900\",           // Order price\n                \"amount\": \"0.773232\",       // Stock amount\n                \"left\": \"0.773232\",         // Stock amount that left to be executed\n                \"deal_stock\": \"0\",          // Stock amount that executed\n                \"deal_money\": \"0\",          // Money amount that executed\n                \"deal_fee\": \"0\",            // Charged fee amount in money,\n                \"client_order_id\": \"22\"     // Custom client order id\n            },\n            ...\n        ]\n    },\n    \"error\": null\n}","subscribe-2#Subscribe":"","️-request-10#⤴️ Request:":"{\n  \"id\": 9,\n  \"method\": \"ordersPending_subscribe\",\n  \"params\": [\n    \"BTC_USDT\", // market\n    \"ETH_BTC\" // market\n  ]\n}","️-response-10#⤵️ Response:":"{\n  \"id\": 9,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events-3#🔄 Update events:":"Update event ID\tDescription\t1\tNew order\t2\tUpdate order\t3\tFinish order (cancel or execute)\t\nIf new order instantly matches an order from orderbook, then you will receive only one message with update event ID equal to 3.\n{\n  \"id\": null,\n  \"method\": \"ordersPending_update\",\n  \"params\": [\n    2, // Update event ID (see above)\n    {\n      \"id\": 621879, // Order ID\n      \"market\": \"BTC_USDT\", // Market\n      \"type\": 1, // Order type. All types in table above\n      \"side\": 1, // Side 1 - sell, 2 - bid\n      \"ctime\": 1601475234.656275, // Created at in Unix time\n      \"mtime\": 1601475266.733574, // Modified at in Unix time\n      \"price\": \"10646.12\", // Order price\n      \"amount\": \"0.01\", // Stock amount\n      \"left\": \"0.008026\", // Stock amount that left to be executed.\n      \"deal_stock\": \"0.001974\", // Stock amount that executed\n      \"deal_money\": \"21.01544088\", // Money amount that executed\n      \"deal_fee\": \"2.101544088\", // Charged fee amount in money,\n      \"client_order_id\": \"22\" // Custom client order id\n    }\n  ]\n}","unsubscribe-2#Unsubscribe":"","️-request-11#⤴️ Request:":"{\n  \"id\": 10,\n  \"method\": \"ordersPending_unsubscribe\",\n  \"params\": []\n}","️-response-11#⤵️ Response:":"{\n  \"id\": 10,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","orders-executed#Orders Executed":"","query-3#Query":"","️-request-12#⤴️ Request:":"Market should exist. The maximum limit is 100.\nAll possible order types\n{\n  \"id\": 11,\n  \"method\": \"ordersExecuted_request\",\n  \"params\": [\n    {\n      \"market\": \"BTC_USDT\", // market\n      \"order_types\": [1, 2] // Order types filter. See above\n    },\n    0, // offset\n    30 // limit\n  ]\n}","️-response-12#⤵️ Response:":"All possible order types\n{\n    \"id\": 11,\n    \"result\": {\n        \"limit\": 100,\n        \"offset\": 0,\n        \"total\": 124,\n        \"records\": [\n            {\n                \"id\": 3848860,                // Order ID\n                \"ctime\": 1594999374.147639,   // Created at in Unix time\n                \"ftime\": 1594999817.987435,   // Finished at in Unix time\n                \"market\": \"BTC_USDT\",         // Market\n                \"type\": 1,                    // Order type. All types in table above\n                \"side\": 2,                    // Side 1 - sell, 2 - bid\n                \"status\": 1,                  // Status 1 - finished, 2 - cancelled\n                \"post_only\": true,            // Post only flag\n                \"price\": \"9157.95\",           // Order price\n                \"amount\": \"0.633232\",         // Stock amount\n                \"deal_stock\": \"0.633232\",     // Stock amount that executed\n                \"deal_money\": \"5799.1069944\", // Money amount that executed\n                \"deal_fee\": \"5.7991069944\",   // Charged fee amount in money,\n                \"client_order_id\": \"-a-a-a\"   // Custom client order id\n            },\n            ...\n        ]\n    },\n    \"error\": null\n}","subscribe-3#Subscribe":"","️-request-13#⤴️ Request:":"{\n  \"id\": 12,\n  \"method\": \"ordersExecuted_subscribe\",\n  \"params\": [\n    [\n      \"BTC_USDT\", // market\n      \"ETH_BTC\" // market\n    ],\n    0 // filter executed limit or market orders\n  ]\n}\nFilter\tExecuted orders\t0\tLimit and Market\t1\tLimit\t2\tMarket","️-response-13#⤵️ Response:":"{\n  \"id\": 12,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events-4#🔄 Update events:":"{\n  \"id\": null,\n  \"method\": \"ordersExecuted_update\",\n  \"params\": [\n    {\n      \"id\": 6887337167, // Order ID\n      \"market\": \"BTC_USDT\", // Market\n      \"type\": 1, // Order type. All types in table above\n      \"side\": 1, // Side 1 - sell, 2 - bid\n      \"ctime\": 1601478710.197908, // Created at in Unix time\n      \"mtime\": 1601478710.197917, // Modified at in Unix time\n      \"price\": \"10745.42\", // Order price\n      \"amount\": \"0.001\", // Stock amount\n      \"left\": \"0\", // Stock amount that left to be executed.\n      \"deal_stock\": \"0.001\", // Stock amount that executed\n      \"deal_money\": \"10.74563\", // Money amount that executed\n      \"deal_fee\": \"0.01074563\" // Charged fee amount in money\n    }\n  ]\n}","unsubscribe-3#Unsubscribe":"","️-request-14#⤴️ Request:":"{\n  \"id\": 13,\n  \"method\": \"ordersExecuted_unsubscribe\",\n  \"params\": []\n}","️-response-14#⤵️ Response:":"{\n  \"id\": 13,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","deals#Deals":"","query-4#Query":"","️-request-15#⤴️ Request:":"Market should exist. The maximum limit is 100.\n{\n  \"id\": 14,\n  \"method\": \"deals_request\",\n  \"params\": [\n    \"BTC_USDT\", // market\n    0, // offset\n    30 // limit\n  ]\n}","️-response-15#⤵️ Response:":"{\n    \"id\": 14,\n    \"result\": {\n        \"limit\": 100,\n        \"offset\": 0,\n        \"total\": 124,\n        \"records\": [\n            {\n                \"time\": 1602760519.688911,   // Deal time\n                \"id\": 251923106,             // Deal ID\n                \"side\": 1,                   // Side 1 - sell, 2 - bid\n                \"role\": 2,                   // Your role. 1 - maker, 2 - taker\n                \"price\": \"11303.76\",         // Deal price\n                \"amount\": \"0.001\",           // Stock amount\n                \"deal\": \"11.30376\",          // Money amount\n                \"fee\": \"0.01130376\",         // Deal fee in money\n                \"market\": \"BTC_USDT\",        // Market\n                \"deal_order_id\": 7421295951  // Order ID\n            },\n            ...\n        ]\n    },\n    \"error\": null\n}","subscribe-4#Subscribe":"Update interval: 0,5 sec","️-request-16#⤴️ Request:":"{\n  \"id\": 15,\n  \"method\": \"deals_subscribe\",\n  \"params\": [\n    [\n      \"BTC_USDT\", // market\n      \"ETH_BTC\" // market\n    ]\n  ]\n}","️-response-16#⤵️ Response:":"{\n  \"id\": 15,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events-5#🔄 Update events:":"{\n  \"id\": null,\n  \"method\": \"deals_update\",\n  \"params\": [\n    252104486, // Deal ID\n    1602770801.015587, // Deal time\n    \"BTC_USDT\", // Market\n    7425988844, // Order ID\n    \"11399.24\", // Price\n    \"0.008256\", // Stock amount\n    \"0.094112125440\", // Deal fee\n    \"1234\", // Custom client order id\n    1 // Side 1 - sell, 2 - bid\n  ]\n}","unsubscribe-4#Unsubscribe":"","️-request-17#⤴️ Request:":"{\n  \"id\": 16,\n  \"method\": \"deals_unsubscribe\",\n  \"params\": []\n}","️-response-17#⤵️ Response:":"{\n  \"id\": 16,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}"}},"/public/http-v1":{"title":"Public HTTP API V1","data":{"":"Error messages V1 format\nMarket Info\nMarket Activity\nSingle market activity\nKline\nSymbols\nOrder depth\nTrade History\nBase URL is https://whitebit.comEndpoint example: https://whitebit.com/api/v1/public/{endpoint}All endpoints return time in Unix-time format.All endpoints return either a JSON object or array.For receiving responses from API calls please use http method GETIf an endpoint requires parameters you should send them as query string","error-messages-v1-format#Error messages V1 format":"{\n  \"success\": false,\n  \"message\": \"ERROR MESSAGE\",\n  \"params\": []\n}","market-info#Market Info":"[GET] /api/v1/public/markets\nThis endpoint retrieves all information about available markets.Response is cached for:\n1 secondParameters:\nNONE❗ Rate limit 1000 requests/10 sec.Response:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": [\n    {\n      \"name\": \"BTC_USDT\",      // Name of market pair\n      \"stock\": \"BTC\",          // Ticker of stock currency\n      \"money\": \"USDT\",         // Ticker of money currency\n      \"stockPrec\": \"6\",        // Precision of stock currency\n      \"moneyPrec\": \"2\",        // Precision of money currency\n      \"feePrec\": \"4\",          // Precision of fee\n      \"makerFee\": \"0.001\",     // Default maker fee ratio\n      \"takerFee\": \"0.001\",     // Default taker fee ratio\n      \"minAmount\": \"0.0001\"    // Minimal amount of stock to trade\n    },\n    {\n      ...\n    }\n  ]\n}","market-activity#Market Activity":"[GET] /api/v1/public/tickers\nThis endpoint retrieves information about recent trading activity on all markets.Response is cached for:\n1 secondParameters:\nNONE❗ Rate limit 1000 requests/10 sec.Response:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": {\n    \"BTC_USDT\": {                         // Name of market pair\n      \"ticker\": {\n        \"bid\": \"9412.1\",                  // Highest bid\n        \"ask\": \"9416.33\",                 // Lowest ask\n        \"low\": \"9203.13\",                 // Lowest price for 24h\n        \"high\": \"9469.99\",                // Highest price for 24h\n        \"last\": \"9414.4\",                 // Last deal price\n        \"vol\": \"27324.819448\",            // Volume in stock currency\n        \"deal\": \"254587570.43407191\",     // Volume in money currency\n        \"change\": \"1.53\"                  // Change in percent between open and last prices\n      },\n      \"at\": 159423219                     // Timestamp in seconds\n    },\n    \"ETH_BTC\": {\n      ...\n    }\n  }\n}","single-market-activity#Single market activity":"[GET] /api/v1/public/ticker?market=ETH_BTC\nThis endpoint retrieves information about recent trading activity on the requested market.Response is cached for:\n1 second❗ Rate limit 1000 requests/10 sec.Parameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\t\nResponse:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": {\n    \"open\": \"9267.98\", // Open price for day\n    \"bid\": \"9417.4\", // The highest bid currently available\n    \"ask\": \"9421.64\", // The lowest ask currently available\n    \"low\": \"9203.13\", // Lowest price for day\n    \"high\": \"9469.99\", // Highest price for day\n    \"last\": \"9419.55\", // Latest deal price\n    \"volume\": \"27303.824558\", // Volume in stock\n    \"deal\": \"254399191.68843464\", // Volume in money\n    \"change\": \"1.63\" // Change between open and close price in percentage\n  }\n}","kline#Kline":"[GET] /api/v1/public/kline?market=BTC_USDT&interval=1h\nThis endpoint retrieves information about market kline.Response is cached for:\n1 second❗ Rate limit 1000 requests/10 sec.Max numbers of candles cannot exceed:\n1440Parameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tstart\tTimestamp\tNo\tStart time in seconds, default value is one week earlier from the current time. Cannot be greater than end parameter. Example: 1596848400\tend\tTimestamp\tNo\tEnd time in seconds, default value is current time. Cannot be less than start parameter. Example: 1596927600\tinterval\tString\tNO\tPossible values - 1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M. By default in case start and end parameters were not specified, for minutes intervals the server will return candlesticks for a period of 1 day. For hours intervals will return candlesticks for 1 week, for days and week intervals will return candlesticks for 1 month and for month interval will return candlesticks for 1 year. Default value is 1h.\tlimit\tInteger\tNO\tPossible values from 1 to 1440. Default value is 1440\t\nResponse:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": [\n    [\n        1631440800,            // Time in seconds\n        \"45865.62\",            // Open\n        \"45958.14\",            // Close\n        \"45981.3\",             // High\n        \"45750.23\",            // Low\n        \"15.327634\",           // Volume stock\n        \"703140.24230131\"      // Volume money\n    ],\n    [...]\n  ]\n}","symbols#Symbols":"[GET] /api/v1/public/symbols\nThis endpoint retrieves information about all available markets for trading.Response is cached for:\n1 second❗ Rate limit 1000 requests/10 sec.Parameters:\nNONEResponse:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": [\n    \"BTC_USDT\",      // Name of market pair\n    \"ETH_BTC\",       // Name of market pair\n    \"ETH_USDT\",      // Name of market pair\n    ...\n  ]\n}","order-depth#Order depth":"[GET] /api/v1/public/depth/result?market=BTC_USDT\nThis endpoint retrieves the current order book as two arrays (bids / asks)Response is cached for:\n100 ms❗ Rate limit 1000 requests/10 sec.Parameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tlimit\tint\tNo\tLimit of results. Default: 100 Max: 100 Example: 100\t\nResponse:\n{\n  \"asks\": [\n    [\n      \"9431.9\",            // Price of lowest ask\n      \"0.705088\"           // Amount of lowest ask\n    ],\n    [\n      \"9433.67\",           // Price of next ask\n      \"0.324509\"           // Amount of next ask\n    ],\n    [...]\n  ],\n  \"bids\": [\n    [\n      \"9427.65\",           // Price of highest bid\n      \"0.547909\"           // Amount of highest bid\n    ],\n    [\n      \"9427.3\",            // Price of next bid\n      \"0.669249\"           // Amount of next bid\n    ],\n    [...]\n  ]\n}","trade-history#Trade History":"[GET] /api/v1/public/history?market=BTC_USDT&lastId=1\nThis endpoint retrieves trades that have been executed for the requested market.Response is cached for:\n1 second❗ Rate limit 1000 requests/10 sec.Parameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tlastId\tint\tYes\tLargest id of last returned result. Example: request deals starting from id equals to 6\tlimit\tint\tNo\tLimit of results. Default: 50 Example: 100\t\nResponse:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": [\n    {\n      \"id\": 156720314,              // Deal id\n      \"time\": 1594240477.849703,    // Deal time in seconds\n      \"price\": \"9429.66\",           // Deal price\n      \"amount\": \"0.002784\",         // Deal amount\n      \"type\": \"sell\"                // Deal type (buy or sell)\n    },\n    {\n      \"id\": 156720309,\n      \"time\": 1594240476.832347,\n      \"price\": \"9429.66\",\n      \"amount\": \"0.002455\",\n      \"type\": \"sell\"\n    },\n    {...}\n  ]\n}"}},"/public/http-v2":{"title":"Public HTTP API V2","data":{"":"Error messages V2 format\nMarket Info\nMarket activity\nRecent Trades\nFee\nAsset Status List\nOrderbook\nBase endpoint is https://whitebit.comExample how to use: https://whitebit.com/api/v2/public/{endpoint}All endpoints return time in Unix-time format.All endpoints return either a JSON object array.For receiving responses from API calls please use http method GETIf endpoint required parameters you will need to send them as query string","error-messages-v2-format#Error messages V2 format":"{\n  \"success\": false,\n  \"message\": \"ERROR MESSAGE\",\n  \"params\": []\n}","market-info#Market Info":"[GET] /api/v2/public/markets\nThis endpoint retrieves all information about available markets.Response is cached for:\n1 secondParameters:\nNONEResponse:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": [\n    {\n      \"name\": \"SON_USD\",         // Market pair name\n      \"stock\": \"SON\",            // Ticker of stock currency\n      \"money\": \"USD\",            // Ticker of money currency\n      \"stockPrec\": \"3\",          // Stock currency precision\n      \"moneyPrec\": \"2\",          // Precision of money currency\n      \"feePrec\": \"4\",            // Fee precision\n      \"makerFee\": \"0.1\",         // Default maker fee percent\n      \"takerFee\": \"0.1\",         // Default taker fee percent\n      \"minAmount\": \"0.001\",      // Minimal amount of stock to trade\n      \"minTotal\": \"0.001\",       // Minimal amount of money to trade\n      \"tradesEnabled\": true      // Is trading enabled\n    },\n    {\n      ...\n    }\n  ]\n}","market-activity#Market activity":"[GET] /api/v2/public/ticker\nThis endpoint retrieves information on recent trading activity on all markets.Response is cached for:\n1 secondParameters:\nNONEResponse:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": [\n    {\n      \"lastUpdateTimestamp\": \"2020-07-10T13:37:27.000Z\",     // ISO 8601 time format of last update\n      \"tradingPairs\": \"ETH_BTC\",                             // Name of market pair\n      \"lastPrice\": \"0.026014\",                               // Last deal price\n      \"lowestAsk\": \"0.026027\",                               // Lowest ask price\n      \"highestBid\": \"0.026001\",                              // Highest bid price\n      \"baseVolume24h\": \"13445.988\",                          // Volume in stock currency\n      \"quoteVolume24h\": \"350.113082102\",                     // Volume in money currency\n      \"tradesEnabled\": true                                  // Is trading enabled on exchange\n    },\n    {\n      ...\n    }\n  ]\n}","recent-trades#Recent Trades":"[GET] /api/v2/public/trades/{market}\nThis endpoint retrieves the trades that have been executed recently on the requested marketResponse is cached for:\n1 secondParameters:\nNONEResponse:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": [\n    {\n      \"tradeId\": 157257950,                 // A unique ID associated with the trade for the currency pair transaction Note: Unix timestamp does not qualify as trade_id.\n      \"price\": \"9371.69\",                   // Price.\n      \"volume\": \"0.145642\",                 // Amount.\n      \"time\": \"2020-07-09T14:13:01.000Z\",   // Time.\n      \"isBuyerMaker\": true                  // Sell order is taker: true, Buy order is taker: false\n    },\n    {\n      ...\n    }\n  }\n}","fee#Fee":"[GET] /api/v2/public/fee\nThis endpoint retrieves the trading fee.Response is cached for:\n1 secondParameters:\nNONEResponse:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": {\n    \"makerFee\": \"0.1\", // Default maker fee (percent of trading amount in money currency)\n    \"takerFee\": \"0.1\" // Default taker fee (percent of trading amount in money currency)\n  }\n}","asset-status-list#Asset Status List":"[GET] /api/v2/public/assets\nThis endpoint retrieves the assets status.Response is cached for:\n1 secondParameters:\nNONEResponse:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": {\n    \"BTC\": {\n      \"id\": \"4f37bc79-f612-4a63-9a81-d37f7f9ff622\",         // Asset id\n      \"lastUpdateTimestamp\": \"2020-07-10T13:20:07.000Z\",    // ISO 8601 time format of last update\n      \"name\": \"Bitcoin\",                                    // Name of currency\n      \"canWithdraw\": true,                                  // Is currency withdrawable\n      \"canDeposit\": true,                                   // Is currency depositable\n      \"minWithdrawal\": \"0.001\",                             // Minimal amount to withdraw\n      \"maxWithdrawal\": \"0\",                                 // Maximum amount to withdraw\n      \"makerFee\": \"0.1\",                                    // Maker fee for currency\n      \"takerFee\": \"0.1\"                                     // Taker fee for currency\n    },\n    {...}\n  }\n}","orderbook#Orderbook":"[GET] /api/v2/public/depth/{market}\nThis endpoint retrieves the current order book as two arrays (bids / asks).Response is cached for:\n100 msParameters:\nNONEResponse:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": {\n      \"lastUpdateTimestamp\": \"2020-07-09T14:49:12.000Z\",     // Timestamp of last update\n      \"asks\": [\n        [\n          \"9431.9\",                                          // Price of lowest ask\n          \"0.705088\"                                         // Amount of lowest ask\n        ],\n        [\n          \"9433.67\",                                         // Price of the next ask\n          \"0.324509\"                                         // Amount of the next ask\n        ],\n        [...]\n      ],\n      \"bids\": [\n        [\n          \"9427.65\",                                         // Price of highest bid\n          \"0.547909\"                                         // Amount of highest bid\n        ],\n        [\n          \"9427.3\",                                          // Price of next bid\n          \"0.669249\"                                         // Amount of next bid\n        ],\n      ],\n      [...]\n  },\n}"}},"/public/http-v4":{"title":"Public HTTP API V4","data":{"":"Error messages V4 format\nMaintenance status\nMarket Info\nMarket activity\nAsset status list\nOrderbook\nRecent Trades\nFee\nServer Time\nServer Status\nCollateral Markets List\nAvailable Futures Markets List\nBase URL is https://whitebit.comEndpoint example: https://whitebit.com/api/v4/public/{endpoint}All endpoints return time in Unix-time format.All endpoints return either a JSON object or array.For receiving responses from API calls please use http method GETIf an endpoint requires parameters you should send them as query string","error-messages-v4-format#Error messages V4 format":"{\n  \"success\": false,\n  \"message\": \"ERROR MESSAGE\",\n  \"params\": []\n}","maintenance-status#Maintenance status":"[GET] /api/v4/public/platform/status\nThis endpoint retrieves maintenance statusResponse:\n{\n  \"status\": \"1\"  // 1 - system operational, 0 - system maintenance\n}","market-info#Market Info":"[GET] /api/v4/public/markets\nThis endpoint retrieves all information about available spot and futures markets.Response is cached for:\n1 secondParameters:\nNONE❗ Rate limit 2000 requests/10 sec.Response:\n[\n    {\n      \"name\": \"SON_USD\",         // Market pair name\n      \"stock\": \"SON\",            // Ticker of stock currency\n      \"money\": \"USD\",            // Ticker of money currency\n      \"stockPrec\": \"3\",          // Stock currency precision\n      \"moneyPrec\": \"2\",          // Precision of money currency\n      \"feePrec\": \"4\",            // Fee precision\n      \"makerFee\": \"0.001\",       // Default maker fee ratio\n      \"takerFee\": \"0.001\",       // Default taker fee ratio\n      \"minAmount\": \"0.001\",      // Minimal amount of stock to trade\n      \"minTotal\": \"0.001\",       // Minimal amount of money to trade\n      \"maxTotal\": \"10000000000\", // Maximum total(amount * price) of money to trade\n      \"tradesEnabled\": true,     // Is trading enabled\n      \"isCollateral\": true,      // Is margin trading enabled\n      \"type\": \"spot\"             // Market type. Possible values: \"spot\", \"futures\"\n    },\n    {\n      ...\n    }\n]","market-activity#Market activity":"[GET] /api/v4/public/ticker\nThis endpoint retrieves a 24-hour pricing and volume summary for each market pair available on the exchange.Response is cached for:\n1 secondParameters:\nNONE❗ Rate limit 2000 requests/10 sec.Response:\n{\n  \"BTC_USDT\": {\n    \"base_id\": 1,                           // CoinmarketCap Id of base currency; 0 - if unknown\n    \"quote_id\": 825,                        // CoinmarketCap Id of quote currency; 0 - if unknown\n    \"last_price\": \"9164.09\",                // Last price\n    \"quote_volume\": \"43341942.90416876\",    // Volume in quote currency\n    \"base_volume\": \"4723.286463\",           // Volume in base currency\n    \"isFrozen\": false,                      // Identifies if trades are closed\n    \"change\": \"0.57\"                        // Change in percent between open and last prices\n  },\n  {...}\n}","asset-status-list#Asset status list":"[GET] /api/v4/public/assets\nThis endpoint retrieves the assets status.Response is cached for:\n1 secondParameters:\nNONE❗ Rate limit 2000 requests/10 sec.Response:\n{\n  \"BTC\": {\n    \"name\": \"Bitcoin\",                        // Full name of cryptocurrency.\n    \"unified_cryptoasset_id\": 1,              // Unique ID of cryptocurrency assigned by Unified Cryptoasset ID, 0 if unknown\n    \"can_withdraw\": true,                     // Identifies whether withdrawals are enabled or disabled.\n    \"can_deposit\": true,                      // Identifies whether deposits are enabled or disabled.\n    \"min_withdraw\": \"0.001\",                  // Identifies the single minimum withdrawal amount of a cryptocurrency.\n    \"max_withdraw\": \"2\",                      // Identifies the single maximum withdrawal amount of a cryptocurrency.\n    \"maker_fee\": \"0.1\",                       // Maker fee in percentage\n    \"taker_fee\": \"0.1\",                       // Taker fee in percentage\n    \"min_deposit\": \"0.0001\",                  // Min deposit amount\n    \"max_deposit\": \"0\",                       // Max deposit amount, will not be returned if there is no limit, 0 if unlimited\n    \"currency_precision\": 18,                 // Max number of digits to the right of the decimal point\n    \"is_memo\": false,                         // Identifies if currency has memo address\n    \"networks\": {                             // Currency networks. It might be a list of networks for cryptocurrency networks or just a single item list for simple cryptocurrencies or tokens\n      \"deposits\": [                           // Networks available for depositing\n        \"BTC\"\n      ],\n      \"withdraws\": [                          // Networks available for withdrawing\n        \"BTC\"\n      ],\n      \"default\": \"BTC\"                        // Default network for depositing / withdrawing if available\n    },\n    \"limits\": {                               // Currency limits by each network\n      \"deposit\": {                            // Deposits limits\n        \"BTC\": {                              // Network\n          \"min\": \"0.001\"                      // Min deposit amount\n        },\n      },\n      \"withdraw\": {                           // Withdraws limits\n        \"BTC\": {                              // Network\n          \"min\": \"0.002\",                     // Min withdraw amount\n        },\n      }\n    },\n    \"confirmations\": {                        // Deposit confirmations count mapped by network\n      \"BTC\": 2\n    }\n  },\n  \"ETH\": {\n    \"name\": \"Ethereum\",\n    \"unified_cryptoasset_id\": 1027,\n    \"can_withdraw\": true,\n    \"can_deposit\": true,\n    \"min_withdraw\": \"0.02\",\n    \"max_withdraw\": \"0\",\n    \"maker_fee\": \"0.1\",\n    \"taker_fee\": \"0.1\",\n    \"min_deposit\": \"0.1\",\n    \"max_deposit\": \"0\",\n    \"currency_precision\": 18,\n    \"is_memo\": false,\n    \"networks\": {                             // Currency networks. It might be a list of networks for cryptocurrency networks or just a single item list for simple cryptocurrencies or tokens\n      \"deposits\": [                           // Networks available for depositing\n        \"ETH\"\n      ],\n      \"withdraws\": [                          // Networks available for withdrawing\n        \"ETH\"\n      ],\n      \"default\": \"ETH\"                        // Default network for depositing / withdrawing if available\n    },\n    \"limits\": {                               // Currency limits by each network\n      \"deposit\": {                            // Deposits limits\n        \"ETH\": {                              // Network\n          \"min\": \"0.001\"                      // Max deposit amount\n        },\n      },\n      \"withdraw\": {                           // Withdraws limits\n        \"ETH\": {                              // Network\n          \"min\": \"0.002\",                     // Min withdraw amount\n        },\n      }\n    },\n    \"confirmations\": {\n      \"ETH\": 20\n    }\n  },\n  \"USDT\": {\n    \"name\": \"Tether US\",\n    \"unified_cryptoasset_id\": 825,\n    \"can_withdraw\": true,\n    \"can_deposit\": true,\n    \"min_withdraw\": \"5\",\n    \"max_withdraw\": \"0\",\n    \"maker_fee\": \"0.1\",\n    \"taker_fee\": \"0.1\",\n    \"min_deposit\": \"0\",\n    \"max_deposit\": \"0\",\n    \"currency_precision\": 6,\n    \"is_memo\": false,\n    \"networks\": {                             // Currency networks. It might be a list of networks for cryptocurrency networks or just a single item list for simple cryptocurrencies or tokens\n      \"deposits\": [                           // Networks available for depositing\n        \"ERC20\",\n        \"TRC20\",\n        \"OMNI\",\n        \"BEP20\"\n      ],\n      \"withdraws\": [                          // Networks available for withdrawing\n        \"ERC20\",\n        \"TRC20\",\n        \"OMNI\",\n        \"BEP20\"\n      ],\n      \"default\": \"ERC20\"                      // Default network for depositing / withdrawing\n    },\n    \"limits\": {                               // This object will be returned when currency has several networks/providers\n      \"deposit\": {                            // Deposits limits\n        \"ERC20\": {                            // Network\n          \"min\": \"5\",                         // Min deposit amount\n          \"max\": \"1000\"                       // Max deposit amount\n        },\n        \"TRC20\": {\n          \"min\": \"5\"                          // If there is no max limit, it is not returned\n        },\n        ...\n      },\n      \"withdraw\": {                           // Withdraws limits\n        \"ERC20\": {                            // Network\n          \"min\": \"10\",                        // Min withdraw amount\n          \"max\": \"1000\"                       // Max withdraw amount\n        },\n        \"TRC20\": {\n          \"min\": \"10\"                         // If there is no max limit, it is not returned\n        },\n        ...\n      }\n    },\n    \"confirmations\": {\n      \"ERC20\": 20,\n      \"TRC20\": 20\n    }\n  },\n  \"UAH\": {\n    \"name\": \"Hryvnia\",\n    \"unified_cryptoasset_id\": 0,\n    \"can_withdraw\": true,\n    \"can_deposit\": true,\n    \"min_withdraw\": \"50\",\n    \"max_withdraw\": \"100000\",\n    \"maker_fee\": \"0.1\",\n    \"taker_fee\": \"0.1\",\n    \"min_deposit\": \"50\",\n    \"max_deposit\": \"100000\",\n    \"is_memo\": false,\n    \"providers\": {                            // Fiat currency providers\n      \"deposits\": [                           // Providers available for depositing\n        \"VISAMASTER\",\n        \"ADVCASH\",\n        \"GEOPAY\"\n      ],\n      \"withdraws\": [                          // Providers available for withdrawing\n        \"VISAMASTER\",\n        \"GEOPAY\"\n      ],\n    },\n    \"limits\": {                               // This object will be returned when currency has several networks/providers\n      \"deposit\": {                            // Deposits limits\n        \"VISAMASTER\": {                       // Provider\n          \"min\": \"50\",                        // Min deposit amount\n          \"max\": \"50000\"                      // Max deposit amount\n        },\n      ...\n      },\n      \"withdraw\": {                          // Withdraws limits\n        \"VISAMASTER\": {                      // Provider\n          \"min\": \"50\",                       // Min withdraw amount\n          \"max\": \"50000\"                     // Max withdraw amount\n        },\n        ...\n      }\n    }\n  },\n  {...}\n}","orderbook#Orderbook":"[GET] /api/v4/public/orderbook/{market}?limit=100&level=2\nThis endpoint retrieves the current [order book](./../glossary.md#order-book as two arrays (bids / asks) with additional parameters.Response is cached for:\n100 ms❗ Rate limit 600 requests/10 sec.Parameters:\nName\tType\tMandatory\tDescription\tlimit\tint\tNo\tOrders depth quantity: 0 - 100. Not defined or 0 will return 100 entries.\tlevel\tint\tNo\tOptional parameter that allows API user to see different level of aggregation. Level 0 – default level, no aggregation. Starting from level 1 (lowest possible aggregation) and up to level 5 - different levels of aggregated orderbook.\t\nResponse:\n{\n  \"ticker_id\": \"BTC_PERP\",        // Market Name\n  \"timestamp\": 1594391413,        // Current timestamp\n  \"asks\": [                       // Array of ask orders\n    [\n      \"9184.41\",                  // Price of lowest ask\n      \"0.773162\"                  // Amount of lowest ask\n    ],\n    [ ... ]\n  ],\n  \"bids\": [                       // Array of bid orders\n    [\n      \"9181.19\",                  // Price of highest bid\n      \"0.010873\"                  // Amount of highest bid\n    ],\n    [ ... ]\n  ]\n}","recent-trades#Recent Trades":"[GET] /api/v4/public/trades/{market}?type=sell\nThis endpoint retrieves the trades that have been executed recently on the requested market.Response is cached for:\n1 second❗ Rate limit 2000 requests/10 sec.Parameters:\nName\tType\tMandatory\tDescription\ttype\tString\tNo\tCan be buy or sell\t\nResponse:\n[\n  {\n    \"tradeID\": 158056419,             // A unique ID associated with the trade for the currency pair transaction Note: Unix timestamp does not qualify as trade_id.\n    \"price\": \"9186.13\",               // Transaction price in quote pair volume.\n    \"quote_volume\": \"0.0021\",         // Transaction amount in quote pair volume.\n    \"base_volume\": \"9186.13\",         // Transaction amount in base pair volume.\n    \"trade_timestamp\": 1594391747,    // Unix timestamp in milliseconds, identifies when the transaction occurred.\n    \"type\": \"sell\"                    // Used to determine whether or not the transaction originated as a buy or sell. Buy – Identifies an ask that was removed from the order book. Sell – Identifies a bid that was removed from the order book.\n  },\n  {\n    \"tradeID\": 158056416,\n    \"price\": \"9186.13\",\n    \"base_volume\": \"9186.13\",\n    \"quote_volume\": \"0.002751\",\n    \"trade_timestamp\": 1594391746,\n    \"type\": \"sell\"\n  },\n  {...}\n}","fee#Fee":"[GET] /api/v4/public/fee\nThis endpoint retrieves the list of fees and min/max amount for deposits and withdrawsResponse is cached for:\n1 second❗ Rate limit 2000 requests/10 sec.Response:\n{\n  \"USDT (ERC20)\": {\n    \"ticker\": \"USDT\", // currency ticker\n    \"name\": \"Tether US\", // currency ticker\n    \"providers\": [],\n    \"deposit\": {\n      // deposit fees\n      \"min_amount\": \"0.0005\", // min deposit amount. 0 if there is no limitation\n      \"max_amount\": \"0.1\", // max deposit amount. 0 if there is no limitation\n      \"fixed\": \"0.0005\", // fixed fee amount which applies for all transaction\n      \"flex\": {\n        \"min_fee\": \"100\", // min fee amount\n        \"max_fee\": \"1000\", // max fee amount\n        \"percent\": \"10\"\n      } // flex fee only applies for all transactions but according to min/max fee. Nullable if there is no flex fee\n    },\n    \"withdraw\": {\n      \"min_amount\": \"0.001\",\n      \"max_amount\": \"0\",\n      \"fixed\": null,\n      \"flex\": null\n    },\n    \"is_depositable\": true, //true if currency can be depositable\n    \"is_withdrawal\": true, //true if currency can be withdrawable\n    \"is_api_withdrawal\": true, //true if currency can be withdrawable by api\n    \"is_api_depositable\": true //true if currency can be depositable by api\n  },\n  \"USD\": {\n    \"ticker\": \"USD\", // currency ticker\n    \"name\": \"United States Dollar\", // currency ticker\n    \"providers\": [\n      \"USD_ADVCASH\",\n      \"USD_CAPITALIST\",\n      \"USD_EPAY_COM\",\n      \"USD_PERFECT_MONEY\",\n      \"USD_VISAMASTER_INTERKASSA\"\n    ], // the list of providers. It is uses for fiat currencies. Provider is a payment system with own fees, which process payment operation\n    \"deposit\": {\n      // for currencies with payment providers fee and amounts shows for each provider directly\n      \"USD_VISAMASTER_INTERKASSA\": {\n        \"min_amount\": \"10\",\n        \"max_amount\": \"1500\",\n        \"fixed\": null,\n        \"flex\": null,\n        \"is_depositable\": false,\n        \"is_api_depositable\": true,\n        \"name\": \"USD Visa/MasterCard Interkassa\", // provider name\n        \"ticker\": \"USD_VISAMASTER_INTERKASSA\" //provider ticker\n      }\n    },\n    \"withdraw\": {\n      \"USD_VISAMASTER_INTERKASSA\": {\n        \"min_amount\": \"20\",\n        \"max_amount\": \"1500\",\n        \"fixed\": null,\n        \"flex\": null,\n        \"is_withdrawal\": false,\n        \"is_api_withdrawal\": true,\n        \"name\": \"USD Visa/MasterCard Interkassa\",\n        \"ticker\": \"USD_VISAMASTER_INTERKASSA\"\n      }\n    }\n  }\n}","server-time#Server Time":"[GET] /api/v4/public/time\nThis endpoint retrieves the current server time.Response is cached for:\n1 second❗ Rate limit 2000 requests/10 sec.Response:\n{\n  \"time\": 1631451591\n}","server-status#Server Status":"[GET] /api/v4/public/ping\nThis endpoint retrieves the current API life-state.❗ Rate limit 2000 requests/10 sec.Response is cached for:\n1 secondResponse:\n[\"pong\"]","collateral-markets-list#Collateral Markets List":"[GET] /api/v4/public/collateral/markets\nThis endpoint returns the list of markets that available for collateral trading❗ Rate limit 2000 requests/10 sec.Response is cached for:\n1 secondResponse:\n[\n  \"ADA_USDT\",\n  \"BCH_USDT\",\n  \"BTC_USDT\",\n  \"DOGE_USDT\",\n  \"EOS_USDT\",\n  \"ETH_BTC\",\n  \"ETH_USDT\",\n  \"LINK_USDT\",\n  \"LTC_USDT\",\n  \"SHIB_USDT\",\n  \"SOL_USDT\",\n  \"TRX_USDT\",\n  \"USDC_USDT\",\n  \"XLM_USDT\",\n  \"XRP_USDT\"\n]","available-futures-markets-list#Available Futures Markets List":"[GET] /api/v4/public/futures\nThis endpoint returns the list of available futures markets.❗ Rate limit 2000 requests/10 sec.Response is cached for:\n1 secondResponse:\n{\n  \"success\": true,\n  \"message\": null,\n  \"result\": [\n    {\n      \"ticker_id\": \"BTC_PERP\", //Identifier of a ticker with delimiter to separate base/target\n      \"stock_currency\": \"BTC\", //Symbol/currency code of base pair\n      \"money_currency\": \"USDT\", //Symbol/currency code of target pair\n      \"last_price\": \"24005.5\", //Last transacted price of base currency based on given target currency\n      \"stock_volume\": \"196965.591\", //24 hour trading volume in base pair volume\n      \"money_volume\": \"4737879075.7817\", //24 hour trading volume in target pair volume\n      \"bid\": \"24005.4\", //Current highest bid price\n      \"ask\": \"24005.6\", //Current lowest ask price\n      \"high\": \"24295.1\", //Rolling 24-hours highest transaction price\n      \"low\": \"23765.3\", //Rolling 24-hours lowest transaction price\n      \"product_type\": \"Perpetual\", //What product is this? Futures, Perpetual, Options?\n      \"open_interest\": \"6000\", //The open interest in the last 24 hours in contracts.\n      \"index_price\": \"24019.25\", //Underlying index price\n      \"index_name\": \"Bitcoin\", //Name of the underlying index if any\n      \"index_currency\": \"BTC\", //Underlying currency for index\n      \"funding_rate\": \"0.000044889033693137\", //Current funding rate\n      \"next_funding_rate_timestamp\": \"1660665600000\", //Timestamp of the next funding rate change\n      \"brackets\": {\n        \"1\": 0,\n        \"2\": 0,\n        \"3\": 0,\n        \"5\": 0,\n        \"10\": 0,\n        \"20\": 0,\n        \"50\": 20,\n        \"100\": 50\n      }, // Brackets\n      \"max_leverage\": 100 // Max Leverage\n    }\n  ]\n}"}},"/public/websocket":{"title":"Public WebSocket API","data":{"":"Service\nPing\nTime\nKline\nLast price\nMarket statistics\nMarket statistics for current day UTC\nMarket trades\nMarket depth\nWebSocket endpoint is wss://api.whitebit.com/wsThe API is based on JSON RPC of WebSocket protocol.⚠️ Connection will be closed by server in cause of inactivity after 30s.❗ Rate limit 1000 ws connections per minute and 200 requests per minute in one connection.All endpoints return time in Unix-time format.","️-request-message#⤴️ Request message":"JSON Structure of request message:\nid - Integer. Should be unique to handle response for your request.\nmethod - String. Name of request.\nparams - Array. Here you pass params for method.\n🚫 WebSocket connection will be closed if invalid JSON was sent.","types-of-request-messages#Types of request messages":"Query (ping, candles_request, etc)\nSubscription (candles_subscribe, lastprice_subscribe, etc). Repeated subscription will be cancelled for the same data type.","️-response-message#⤵️ Response message":"JSON Structure of response message:\nid - Integer. Id of request.\nresult - Null for failure, for success - look for responses below\nerror - Null for success, JSON Object for failure:\nmessage - Detailed text\ncode - Error code\nCode\tMessage\t1\tinvalid argument\t2\tinternal error\t3\tservice unavailable\t4\tmethod not found\t5\tservice timeout","types-of-response-messages#Types of response messages":"Query result\nSubscription status (success/failed)\nUpdate events","examples#Examples":"Example messages for request with response:","️-request#⤴️ Request:":"{\n  \"id\": 0,\n  \"method\": \"ping\",\n  \"params\": []\n}","️-response#⤵️ Response:":"{\n  \"id\": 0,\n  \"result\": \"pong\",\n  \"error\": null\n}\nExample subscription:","️-request-1#⤴️ Request:":"{\n  \"id\": 0,\n  \"method\": \"candles_subscribe\",\n  \"params\": []\n}","️-response-1#⤵️ Response:":"{\n  \"id\": 0,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events#🔄 Update events:":"{\n  \"id\": null,\n  \"method\": \"candles_update\",\n  \"params\": [] // look below for params\n}","api#API":"","service#Service":"","ping#Ping":"","️-request-2#⤴️ Request:":"{\n  \"id\": 0,\n  \"method\": \"ping\",\n  \"params\": []\n}","️-response-2#⤵️ Response:":"{\n  \"id\": 0,\n  \"result\": \"pong\",\n  \"error\": null\n}","time#Time":"","️-request-3#⤴️ Request:":"{\n  \"id\": 1,\n  \"method\": \"time\",\n  \"params\": []\n}","️-response-3#⤵️ Response:":"{\n  \"id\": 1,\n  \"result\": 1493285895,\n  \"error\": null\n}","kline#Kline":"","query#Query":"The requested interval must meet the following conditions:\nIf the number is less than 60, then 60 must be divisible by the requested number without a remainder;\nLess than 3600 (1 hour) - the number must be divisible by 60 without a remainder, and 3600 must be divisible by the requested number without a remainder;\nLess than 86400 (day) - the number must be whitened by 3600 without a remainder, and 86400 must be divisible by the number without a remainder;\nLess than 86400 * 7 (week) - the number must be divisible by 86400 without a remainder;\nEqual to 86400 * 7;\nEqual to 86400 * 30.","️-request-4#⤴️ Request:":"{\n  \"id\": 2,\n  \"method\": \"candles_request\",\n  \"params\": [\n    \"ETH_BTC\", // market\n    1659569940, // start time\n    1660894800, // end time\n    3600 // interval in seconds\n  ]\n}","️-response-4#⤵️ Response:":"{\n    \"id\": 2,\n    \"result\": [\n        [\n            1580860800,       // time\n            \"0.020543\",       // open\n            \"0.020553\",       // close\n            \"0.020614\",       // highest\n            \"0.02054\",        // lowest\n            \"7342.597\",       // volume in stock\n            \"151.095481849\",  // volume in deal\n            \"ETH_BTC\"         // market\n        ],\n        ...\n    ],\n    \"error\": null\n}","subscribe#Subscribe":"Update interval: 0.5 sec","️-request-5#⤴️ Request:":"{\n  \"id\": 3,\n  \"method\": \"candles_subscribe\",\n  \"params\": [\n    \"BTC_USD\", // market\n    900 // interval in seconds\n  ]\n}","️-response-5#⤵️ Response:":"{\n  \"id\": 3,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events-1#🔄 Update events:":"{\n  \"id\": null,\n  \"method\": \"candles_update\",\n  \"params\": [\n    [\n      1580895000, // time\n      \"0.020683\", // open\n      \"0.020683\", // close\n      \"0.020683\", // high\n      \"0.020666\", // low\n      \"504.701\", // volume in stock\n      \"10.433600491\", // volume in money (deal)\n      \"ETH_BTC\" // market\n    ]\n  ]\n}","unsubscribe#Unsubscribe":"","️-request-6#⤴️ Request:":"{\n  \"id\": 4,\n  \"method\": \"candles_unsubscribe\",\n  \"params\": []\n}","️-response-6#⤵️ Response:":"{\n  \"id\": 4,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","last-price#Last price":"","query-1#Query":"","️-request-7#⤴️ Request:":"{\n  \"id\": 5,\n  \"method\": \"lastprice_request\",\n  \"params\": [\n    \"ETH_BTC\" // market\n  ]\n}","️-response-7#⤵️ Response:":"{\n  \"id\": 5,\n  \"result\": \"0.020553\",\n  \"error\": null\n}","subscribe-1#Subscribe":"Update interval: 1 sec","️-request-8#⤴️ Request:":"{\n    \"id\": 6,\n    \"method\": \"lastprice_subscribe\",\n    \"params\": [\n        \"ETH_BTC\", // markets\n        \"BTC_USDT\",\n        ...\n    ]\n}","️-response-8#⤵️ Response:":"{\n  \"id\": 6,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events-2#🔄 Update events:":"{\n  \"id\": null,\n  \"method\": \"lastprice_update\",\n  \"params\": [\n    \"ETH_BTC\", // market\n    \"0.020683\" // price\n  ]\n}","unsubscribe-1#Unsubscribe":"","️-request-9#⤴️ Request:":"{\n  \"id\": 7,\n  \"method\": \"lastprice_unsubscribe\",\n  \"params\": []\n}","️-response-9#⤵️ Response:":"{\n  \"id\": 7,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","market-statistics#Market statistics":"","query-2#Query":"","️-request-10#⤴️ Request:":"{\n  \"id\": 5,\n  \"method\": \"market_request\",\n  \"params\": [\n    \"ETH_BTC\", // market\n    86400 // period in seconds\n  ]\n}","️-response-10#⤵️ Response:":"{\n  \"id\": 5,\n  \"result\": {\n    \"period\": 86400, // period in seconds\n    \"last\": \"0.020981\", // last price\n    \"open\": \"0.02035\", // open price that was at 'now - period' time\n    \"close\": \"0.020981\", // price that closes this period\n    \"high\": \"0.020988\", // highest price\n    \"low\": \"0.020281\", // lowest price\n    \"volume\": \"135220.218\", // volume in stock\n    \"deal\": \"2776.587022649\" // volume in money\n  },\n  \"error\": null\n}","subscribe-2#Subscribe":"You can subscribe only for 86400s (24h from now).Update interval: 1 sec","️-request-11#⤴️ Request:":"{\n    \"id\": 6,\n    \"method\": \"market_subscribe\",\n    \"params\": [\n        \"ETH_BTC\", // markets\n        \"BTC_USDT\",\n        ...\n    ]\n}","️-response-11#⤵️ Response:":"{\n  \"id\": 6,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events-3#🔄 Update events:":"{\n  \"id\": null,\n  \"method\": \"market_update\",\n  \"params\": [\n    \"ETH_BTC\", // market\n    {\n      // response same as 'market_request'\n      \"period\": 86400, // period in seconds\n      \"last\": \"0.020964\", // last price\n      \"open\": \"0.020349\", // open price that was at 'now - period' time\n      \"close\": \"0.020964\", // price that closes this period\n      \"high\": \"0.020997\", // highest price\n      \"low\": \"0.020281\", // lowest price\n      \"volume\": \"135574.476\", // volume in stock\n      \"deal\": \"2784.413999488\" // volume in money\n    }\n  ]\n}","unsubscribe-2#Unsubscribe":"","️-request-12#⤴️ Request:":"{\n  \"id\": 7,\n  \"method\": \"market_unsubscribe\",\n  \"params\": []\n}","️-response-12#⤵️ Response:":"{\n  \"id\": 7,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","market-statistics-for-current-day-utc#Market statistics for current day UTC":"","query-3#Query":"","️-request-13#⤴️ Request:":"{\n  \"id\": 14,\n  \"method\": \"marketToday_query\",\n  \"params\": [\n    \"ETH_BTC\" // only one market per request\n  ]\n}","️-response-13#⤵️ Response:":"{\n  \"id\": 14,\n  \"result\": {\n    \"last\": \"0.020981\", // last price\n    \"open\": \"0.02035\", // open price that was at 'now - period' time\n    \"high\": \"0.020988\", // highest price\n    \"low\": \"0.020281\", // lowest price\n    \"volume\": \"135220.218\", // volume in stock\n    \"deal\": \"2776.587022649\" // volume in money\n  },\n  \"error\": null\n}","subscribe-3#Subscribe":"Update interval: 1 sec","️-request-14#⤴️ Request:":"{\n    \"id\": 15,\n    \"method\": \"marketToday_subscribe\",\n    \"params\": [\n        \"ETH_BTC\", // markets\n        \"BTC_USDT\",\n        ...\n    ]\n}","️-response-14#⤵️ Response:":"{\n  \"id\": 15,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events-4#🔄 Update events:":"{\n  \"id\": null,\n  \"method\": \"marketToday_update\",\n  \"params\": [\n    \"ETH_BTC\", // market\n    {\n      // response same as 'market_request'\n      \"last\": \"0.020964\", // last price\n      \"open\": \"0.020349\", // open price that was at 'now - period' time\n      \"high\": \"0.020997\", // highest price\n      \"low\": \"0.020281\", // lowest price\n      \"volume\": \"135574.476\", // volume in stock\n      \"deal\": \"2784.413999488\" // volume in money\n    }\n  ]\n}","unsubscribe-3#Unsubscribe":"","️-request-15#⤴️ Request:":"{\n  \"id\": 16,\n  \"method\": \"marketToday_unsubscribe\",\n  \"params\": []\n}","️-response-15#⤵️ Response:":"{\n  \"id\": 16,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","market-trades#Market trades":"","query-4#Query":"","️-request-16#⤴️ Request:":"{\n  \"id\": 8,\n  \"method\": \"trades_request\",\n  \"params\": [\n    \"ETH_BTC\", // market\n    100, // limit\n    41358445 // largest id from which you want to request trades\n  ]\n}","️-response-16#⤵️ Response:":"{\n    \"id\": 8,\n    \"result\": [\n        {\n            \"id\": 41358530,           // trade id\n            \"time\": 1580905394.70332, // time in milliseconds\n            \"price\": \"0.020857\",      // trade price\n            \"amount\": \"5.511\",        // trade amount\n            \"type\": \"sell\"            // type of trade (buy/sell)\n        },\n        ...\n    ],\n    \"error\": null\n}","subscribe-4#Subscribe":"Update interval: 100 ms❗ For each websocket connection, you can subscribe to either one or several markets. Every following subscription will replace the existing one.","️-request-17#⤴️ Request:":"{\n    \"id\": 9,\n    \"method\": \"trades_subscribe\",\n    \"params\": [\n        \"ETH_BTC\", // markets\n        \"BTC_USDT\",\n        ...\n    ]\n}","️-response-17#⤵️ Response:":"{\n  \"id\": 9,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events-5#🔄 Update events:":"{\n    \"id\": null,\n    \"method\": \"trades_update\",\n    \"params\": [\n        \"ETH_BTC\",                         // market\n         [                                 // response same as 'market_request'\n             {\n                 \"id\": 41358530,           // trade id\n                 \"time\": 1580905394.70332, // time in milliseconds\n                 \"price\": \"0.020857\",      // trade price\n                 \"amount\": \"5.511\",        // trade amount\n                 \"type\": \"sell\"            // type of trade (buy/sell)\n             },\n             ...\n         ]\n    ]\n}","unsubscribe-4#Unsubscribe":"","️-request-18#⤴️ Request:":"{\n  \"id\": 10,\n  \"method\": \"trades_unsubscribe\",\n  \"params\": []\n}","️-response-18#⤵️ Response:":"{\n  \"id\": 10,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","market-depth#Market depth":"","query-5#Query":"","️-request-19#⤴️ Request:":"{\n  \"id\": 11,\n  \"method\": \"depth_request\",\n  \"params\": [\n    \"ETH_BTC\", // market\n    100, // limit, max value is 100\n    \"0\" // price interval units. \"0\" - no interval, available values - \"0.00000001\", \"0.0000001\", \"0.000001\", \"0.00001\", \"0.0001\", \"0.001\", \"0.01\", \"0.1\"\n  ]\n}","️-response-19#⤵️ Response:":"{\n    \"id\": 11,\n    \"result\": {\n        \"timestamp\": 1689600180.5164471,\n        \"asks\": [                   // sorted ascending\n            [\"0.020846\", \"29.369\"], // [price, amount]\n            ...\n        ],\n        \"bids\": [                   // sorted descending\n            [\"0.02083\", \"9.598\"],   // [price, amount]\n            ...\n        ]\n    },\n    \"error\": null\n}","subscribe-5#Subscribe":"Update interval: 100 ms","️-request-20#⤴️ Request:":"{\n  \"id\": 12,\n  \"method\": \"depth_subscribe\",\n  \"params\": [\n    \"ETH_BTC\",  // market\n    100,        // limit, max value is 100\n    \"0\",        // price interval units. \"0\" - no interval, available values - \"0.00000001\", \"0.0000001\", \"0.000001\", \"0.00001\", \"0.0001\", \"0.001\", \"0.01\", \"0.1\"\n    true        // multiple subscription flag. true - add, false - unsubscribe from all\n  ]\n}\nThe last parameter - Multiple subscription flag - allows you to subscribe to market depths as many markets as you want. The only restriction is one subscription with specific parameters per market.","️-response-20#⤵️ Response:":"{\n  \"id\": 12,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}","-update-events-6#🔄 Update events:":"{\n    \"id\": null,\n    \"method\": \"depth_update\",\n    \"params\": [\n        false,                          // true - full reload, false - partial update\n        {\n            \"timestamp\": 1689600180.5164471,\n            \"asks\": [\n                [\"0.020861\", \"0\"],      // for partial update - finished orders will be [price, \"0\"]\n                ...\n            ],\n            \"bids\": [\n                [\"0.020844\", \"5.949\"],\n                ...\n            ]\n        },\n        \"ETH_BTC\"                       // market\n    ]\n}","unsubscribe-5#Unsubscribe":"","️-request-21#⤴️ Request:":"{\n  \"id\": 13,\n  \"method\": \"depth_unsubscribe\",\n  \"params\": []\n}","️-response-21#⤵️ Response:":"{\n  \"id\": 13,\n  \"result\": {\n    \"status\": \"success\"\n  },\n  \"error\": null\n}"}},"/private/http-trade-v4":{"title":"Private HTTP API V4 for trading","data":{"":"Private HTTP API V4 for trading\nError messages V4 format\nSpot\nTrading balance\nCreate limit order\nBulk limit order\nCreate market order\nCreate buy stock market order\nCreate stop-limit order\nCreate stop-market order\nCancel order\nCancel all orders\nQuery unexecuted(active) orders\nQuery executed order history\nQuery executed order deals\nQuery executed orders\nSync kill-switch timer\nStatus kill-switch timer\nCollateral\nCollateral Account Balance\nCollateral Account Balance Summary\nCollateral Limit Order\nCollateral Market Order\nCollateral Stop-Limit Order\nCollateral Trigger Market Order\nCollateral Account Summary\nOpen Positions\nPositions History\nChange Collateral Account Leverage\nQuery unexecuted(active) OCO orders\nCreate collateral OCO order\nCancel OCO order\nConvert\nEstimate\nConfirm\nHistory\nBase URL is https://whitebit.comEndpoint example: https://whitebit.com/api/v4/{endpoint}All endpoints return time in Unix-time format.All endpoints return either a JSON object or array.For receiving responses from API calls please use http method POST","error-messages-v4-format#Error messages V4 format":"{\n  \"code\": 0,\n  \"message\": \"MESSAGE\",\n  \"errors\": {\n    \"PARAM1\": [\"MESSAGE\"],\n    \"PARAM2\": [\"MESSAGE\"]\n  }\n}","spot#Spot":"","trading-balance#Trading balance":"[POST] /api/v4/trade-account/balance\nThis endpoint retrieves the trade balance by currency ticker or all balances.❗ Rate limit 12000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tticker\tString\tNo\tCurrency's ticker. Example: BTC\t\nRequest BODY raw:\n{\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 422 if request validation failed\nStatus 400 if inner validation failed\nStatus 503 if service temporary unavailable\n{\n    \"...\": {...},\n    \"BTC\": {\n        \"available\": \"0.123\",      // Available balance of currency for trading\n        \"freeze\": \"1\"              // Balance of currency that is currently in active orders\n    },\n    \"...\": {...},\n    \"XMR\": {\n        \"available\": \"3013\",\n        \"freeze\": \"100\"\n    },\n    \"...\": {...}\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ticker\": [\"Ticker field should be a string.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ticker\": [\"Currency was not found.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}","create-limit-order#Create limit order":"[POST] /api/v4/order/new\nThis endpoint creates limit trading order.❗ Rate limit 10000 requests/10 sec.Parameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tside\tString\tYes\tOrder type. Variables: 'buy' / 'sell' Example: 'buy'\tamount\tString/Number\tYes\tAmount of stock currency to buy or sell. Example: '0.001' or 0.001\tprice\tString/Number\tYes\tPrice in money currency. Example: '9800' or 9800\tclientOrderId\tString\tNo\tIdentifier should be unique and contain letters, dashes or numbers only. The identifier must be unique for the next 24 hours.\tpostOnly\tboolean\tNo\tOrders are guaranteed to be the maker order when executed. Variables: 'true' / 'false' Example: 'false'.\tioc\tboolean\tNo\tAn immediate or cancel order (IOC) is an order that attempts to execute all or part immediately and then cancels any unfilled portion of the order. Variables: 'true' / 'false' Example: 'false'.\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"buy\",\n  \"amount\": \"0.01\",\n  \"price\": \"40000\",\n  \"postOnly\": false,\n  \"ioc\": false,\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if request validation failed\nStatus 503 if service temporary unavailable\n{\n  \"orderId\": 4180284841, // order id\n  \"clientOrderId\": \"order1987111\", // custom client order id; \"clientOrderId\": \"\" - if not specified.\n  \"market\": \"BTC_USDT\", // deal market\n  \"side\": \"buy\", // order side\n  \"type\": \"limit\", // order type\n  \"timestamp\": 1595792396.165973, // current timestamp\n  \"dealMoney\": \"0\", // if order finished - amount in money currency that is finished\n  \"dealStock\": \"0\", // if order finished - amount in stock currency that is finished\n  \"amount\": \"0.01\", // amount\n  \"takerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"left\": \"0.001\", // if order not finished - rest of the amount that must be finished\n  \"dealFee\": \"0\", // fee in money that you pay if order is finished\n  \"price\": \"40000\", // price\n  \"postOnly\": false, // PostOnly\n  \"ioc\": false // IOC\n}\nError codes:\n30 - default validation error code\n31 - market validation failed\n32 - amount validation failed\n33 - price validation failed\n36 - clientOrderId validation failed\n37 - ioc and postOnly flags are both true\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount field is required.\"],\n    \"market\": [\"Market field is required.\"],\n    \"price\": [\"Price field is required.\"],\n    \"side\": [\"Side field is required.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"side\": [\"Side field should contain only 'buy' or 'sell' values.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should not be empty string.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"Given amount is less than min amount 0.001\",\n      \"Min amount step = 0.000001\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\"ClientOrderId field should be a string.\"]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"ClientOrderId field field should contain only latin letters, numbers and dashes.\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"This client order id is already used by the current account. It will become available in 24 hours (86400 seconds).\"\n    ]\n  }\n}\n{\n  \"code\": 37,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ioc\": [\"Either IOC or PostOnly flag in true state is allowed.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"total\": [\"Total(amount * price) is less than 5.05\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"Min amount step = 0.01\" // money/stock precision is not taken into consideration when order was submitted\n    ]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price field should be at least 10\", \"Min price step = 0.000001\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 35,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"maker_fee\": [\"Incorrect maker fee\"]\n  }\n}\n{\n  \"code\": 10,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}\n{\n  \"code\": 11,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount too small.\"]\n  }\n}\n{\n  \"code\": 13,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"postOnly\": [\n      \"This order couldn't be executed as a maker order and was canceled.\"\n    ]\n  }\n}","create-market-order#Create market order":"[POST] /api/v4/order/market\nThis endpoint creates market trading order.❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tside\tString\tYes\tOrder type. Variables: 'buy' / 'sell' Example: 'buy'\tamount\tString/Number\tYes\t⚠️ Amount of money currency to buy or amount in stock currency to sell. Example: '5 USDT' for buy (min total) and '0.001 BTC' for sell (min amount).\tclientOrderId\tString\tNo\tIdentifier should be unique and contain letters, dashes or numbers only. The identifier must be unique for the next 24 hours.\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"buy\",\n  \"amount\": \"50\", // I want to buy BTC for 50 USDT\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"sell\",\n  \"amount\": \"0.01\", // I want to sell 0.01 BTC\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if request validation failed\nStatus 503 if service temporary unavailable\n{\n  \"orderId\": 4180284841, // order id\n  \"clientOrderId\": \"order1987111\", // custom client order id; \"clientOrderId\": \"\" - if not specified.\n  \"market\": \"BTC_USDT\", // deal market\n  \"side\": \"buy\", // order side\n  \"type\": \"market\", // order type\n  \"timestamp\": 1595792396.165973, // current timestamp\n  \"dealMoney\": \"0\", // amount in money currency that finished\n  \"dealStock\": \"0\", // amount in stock currency that finished\n  \"amount\": \"0.001\", // amount\n  \"takerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n  \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n  \"left\": \"0.001\", // rest of amount that must be finished\n  \"dealFee\": \"0\" // fee in money that you pay if order is finished\n}\nError codes:\n30 - default validation error code\n31 - market validation failed\n32 - amount validation failed\n36 - clientOrderId validation failed\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount field is required.\"],\n    \"market\": [\"Market field is required.\"],\n    \"side\": [\"Side field is required.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"side\": [\"Side field should contain only 'buy' or 'sell' values.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should not be empty string.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"Given amount is less than min amount 0.001\",\n      \"Min amount step = 0.000001\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\"ClientOrderId field should be a string.\"]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"ClientOrderId field field should contain only latin letters, numbers and dashes.\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"This client order id is already used by the current account. It will become available in 24 hours (86400 seconds).\"\n    ]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Total amount + fee should be no less than\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Min total step = = 0.000001\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 10,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}\n{\n  \"code\": 11,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount too small.\"]\n  }\n}","create-buy-stock-market-order#Create buy stock market order":"[POST] /api/v4/order/stock_market\nThis endpoint creates buy stock market trading order.❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tside\tString\tYes\tOrder type. Available variables: \"buy\", \"sell\"\tamount\tString/Number\tYes\t⚠️ Amount in stock currency for buy or sell. Example: \"0.0001\" or 0.0001.\tclientOrderId\tString\tNo\tIdentifier should be unique and contain letters, dashes or numbers only. The identifier must be unique for the next 24 hours.\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"buy\",\n  \"amount\": \"0.001\", // I want to buy 0.001 BTC\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if request validation failed\nStatus 503 if service temporary unavailable\n{\n  \"orderId\": 4180284841, // order id\n  \"clientOrderId\": \"order1987111\", // custom client order id; \"clientOrderId\": \"\" - if not specified.\n  \"market\": \"BTC_USDT\", // deal market\n  \"side\": \"buy\", // order side\n  \"type\": \"stock market\", // order type\n  \"timestamp\": 1595792396.165973, // current timestamp\n  \"dealMoney\": \"0\", // amount in money currency that finished\n  \"dealStock\": \"0\", // amount in stock currency that finished\n  \"amount\": \"0.001\", // amount\n  \"takerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n  \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n  \"left\": \"0.001\", // rest of amount that must be finished\n  \"dealFee\": \"0\" // fee in money that you pay if order is finished\n}\nError codes:\n30 - default validation error code\n31 - market validation failed\n32 - amount validation failed\n36 - clientOrderId validation failed\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount field is required.\"],\n    \"market\": [\"Market field is required.\"],\n    \"side\": [\"Side field is required.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"side\": [\"Side field should contain only 'buy' or 'sell' values.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should not be empty string.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"Given amount is less than min amount 0.001\",\n      \"Min amount step = 0.000001\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\"ClientOrderId field should be a string.\"]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"ClientOrderId field field should contain only latin letters, numbers and dashes.\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"This client order id is already used by the current account. It will become available in 24 hours (86400 seconds).\"\n    ]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 10,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}\n{\n  \"code\": 11,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount too small.\"]\n  }\n}","create-stop-limit-order#Create stop-limit order":"[POST] /api/v4/order/stop_limit\nThis endpoint creates stop-limit trading order❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tside\tString\tYes\tOrder type. Variables: 'buy' / 'sell' Example: 'buy'\tamount\tString/Number\tYes\tAmount of stock currency to buy or sell. Example: '0.001' or 0.001\tprice\tString/Number\tYes\tPrice in money currency. Example: '9800' or 9800\tactivation_price\tString/Number\tYes\tActivation price in money currency. Example: '10000' or 10000\tclientOrderId\tString\tNo\tIdentifier should be unique and contain letters, dashes or numbers only. The identifier must be unique for the next 24 hours.\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"buy\",\n  \"amount\": \"0.001\",\n  \"price\": \"40000\",\n  \"activation_price\": \"40000\",\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if request validation failed\nStatus 503 if service temporary unavailable\n{\n  \"orderId\": 4180284841, // order id\n  \"clientOrderId\": \"order1987111\", // custom client order id; \"clientOrderId\": \"\" - if not specified.\n  \"market\": \"BTC_USDT\", // deal market\n  \"side\": \"buy\", // order side\n  \"type\": \"stop limit\", // order type\n  \"timestamp\": 1595792396.165973, // current timestamp\n  \"dealMoney\": \"0\", // if order finished - amount in money currency that finished\n  \"dealStock\": \"0\", // if order finished - amount in stock currency that finished\n  \"amount\": \"0.001\", // amount\n  \"takerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"left\": \"0.001\", // if order not finished - rest of amount that must be finished\n  \"dealFee\": \"0\", // fee in money that you pay if order is finished\n  \"price\": \"40000\", // price\n  \"activation_price\": \"40000\" // activation price\n}\nError codes:\n30 - default validation error code\n31 - market validation failed\n32 - amount validation failed\n33 - price validation failed\n36 - clientOrderId validation failed\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activation_price\": [\"Activation price field is required.\"],\n    \"amount\": [\"Amount field is required.\"],\n    \"market\": [\"Market field is required.\"],\n    \"price\": [\"Price field is required.\"],\n    \"side\": [\"Side field is required.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"side\": [\"Side field should contain only 'buy' or 'sell' values.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should not be empty string.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"Given amount is less than min amount 0.001\",\n      \"Min amount step = 0.000001\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"total\": [\"Total(amount * price) is less than 5.05\"]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\"ClientOrderId field should be a string.\"]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"ClientOrderId field field should contain only latin letters, numbers and dashes.\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"This client order id is already used by the current account. It will become available in 24 hours (86400 seconds).\"\n    ]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price field should be at least 10\", \"Min price step = 0.000001\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 35,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"maker_fee\": [\"Incorrect maker fee\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\n      \"Activation price should not be equal to the last price\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activation_price\": [\"Activation price should be numeric string.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Activation price should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Empty history\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Min activation price = 10\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Min activation price step = 0.00001\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\n      \"Activation price should not be equal to the last price\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"lastPrice\": [\"internal error\"]\n  }\n}\n{\n  \"code\": 10,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}\n{\n  \"code\": 11,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount too small.\"]\n  }\n}","create-stop-market-order#Create stop-market order":"[POST] /api/v4/order/stop_market\nThis endpoint creates stop-market trading order❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tside\tString\tYes\tOrder type. Variables: 'buy' / 'sell' Example: 'buy'\tamount\tString/Number\tYes\t⚠️Amount of money currency to buy or amount in stock currency to sell. Example: '0.01' or 0.01 for buy and '0.0001' for sell.\tactivation_price\tString/Number\tYes\tActivation price in money currency. Example: '10000' or 10000\tclientOrderId\tString\tNo\tIdentifier should be unique and contain letters, dashes or numbers only. The identifier must be unique for the next 24 hours.\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"buy\",\n  \"amount\": \"50\", // I want to buy for 50 USDT\n  \"activation_price\": \"40000\",\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"sell\",\n  \"amount\": \"0.001\", // I want to sell 0.01 BTC\n  \"activation_price\": \"40000\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 422 if inner validation failed\nStatus 503 if service temporary unavailable\n{\n  \"orderId\": 4180284841, // order id\n  \"clientOrderId\": \"order1987111\", // custom order identifier; \"clientOrderId\": \"\" - if not specified.\n  \"market\": \"BTC_USDT\", // deal market\n  \"side\": \"buy\", // order side\n  \"type\": \"stop market\", // order type\n  \"timestamp\": 1595792396.165973, // current timestamp\n  \"dealMoney\": \"0\", // if order finished - amount in money currency that finished\n  \"dealStock\": \"0\", // if order finished - amount in stock currency that finished\n  \"amount\": \"0.001\", // amount\n  \"takerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"left\": \"0.001\", // if order not finished - rest of amount that must be finished\n  \"dealFee\": \"0\", // fee in money that you pay if order is finished\n  \"activation_price\": \"40000\" // activation price\n}\nError codes:\n30 - default validation error code\n31 - market validation failed\n32 - amount validation failed\n36 - clientOrderId validation failed\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activation_price\": [\"Activation price field is required.\"],\n    \"amount\": [\"Amount field is required.\"],\n    \"market\": [\"Market field is required.\"],\n    \"side\": [\"Side field is required.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"side\": [\"Side field should contain only 'buy' or 'sell' values.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should not be empty string.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"Given amount is less than min amount 0.001\",\n      \"Min amount step = 0.000001\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\"ClientOrderId field should be a string.\"]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"ClientOrderId field field should contain only latin letters, numbers and dashes.\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"This client order id is already used by the current account. It will become available in 24 hours (86400 seconds).\"\n    ]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\n      \"Activation price should not be equal to the last price\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activation_price\": [\"Activation price should be numeric string.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Activation price should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Empty history\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Min activation price = 10\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Min activation price step = 0.00001\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\n      \"Activation price should not be equal to the last price\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"lastPrice\": [\"internal error\"]\n  }\n}\n{\n  \"code\": 10,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}\n{\n  \"code\": 11,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount too small.\"]\n  }\n}","cancel-order#Cancel order":"[POST] /api/v4/order/cancel\nCancel existing order❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\torderId\tString/Int\tYes\tOrder Id. Example: 4180284841 or \"4180284841\"\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"orderId\": 4180284841,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if validation failed\nStatus 503 if service temporary unavailable\n{\n  \"orderId\": 4180284841, // order id\n  \"clientOrderId\": \"customId11\", // custom order identifier; \"clientOrderId\": \"\" - if not specified.\n  \"market\": \"BTC_USDT\", // deal market\n  \"side\": \"buy\", // order side\n  \"type\": \"stop market\", // order type\n  \"timestamp\": 1595792396.165973, // current timestamp\n  \"dealMoney\": \"0\", // if order finished - amount in money currency that is finished\n  \"dealStock\": \"0\", // if order finished - amount in stock currency that is finished\n  \"amount\": \"0.001\", // amount\n  \"takerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"left\": \"0.001\", // if order not finished - rest of the amount that must be finished\n  \"dealFee\": \"0\", // fee in money that you pay if order is finished\n  \"price\": \"40000\", // price if price isset\n  \"activation_price\": \"40000\" // activation price if activation price is set\n}\nError codes:\n30 - default validation error code\n31 - market validation failed\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field is required.\"],\n    \"orderId\": [\"OrderId field is required.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"orderId\": [\"OrderId field should be an integer.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\n      \"Market field should be a string.\",\n      \"Market field format is invalid.\"\n    ]\n  }\n}\n{\n  \"code\": 2,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"orderId\": [\"Unexecuted order was not found.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}","cancel-all-orders#Cancel all orders":"[POST] /api/v4/order/cancel/all\nCancel existing order❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tNo\tAvailable market. Example: BTC_USDT\ttype\tArray\tNo\tOrder types value. Example: \"spot\", \"margin\", \"futures\"\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"type\": [\n    \"Margin\",\n    \"Futures\",\n    \"Spot\"\n  ]\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if validation failed\nStatus 503 if service temporary unavailable\n[]\nError codes:\n30 - default validation error code\n31 - market validation failed\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"type\": [\"The type must be an array.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\n      \"Market field should be a string.\",\n      \"Market field format is invalid.\"\n    ]\n  }\n}\n{\n  \"code\": 2,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"orderId\": [\"Unexecuted order was not found.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}","query-unexecutedactive-orders#Query unexecuted(active) orders":"[POST] /api/v4/orders\nThis endpoint retrieves unexecuted orders only.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tNo\tAvailable market. Example: BTC_USDT\torderId\tString\tNo\tAvailable orderId. Example: 3134995325\tclientOrderId\tString\tNo\tAvailable clientOrderId. Example: customId11\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 50, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nSearch across all markets is available only if clientOrderId and orderId are not provided.Request BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"orderId\": \"3134995325\", //order Id (optional)\n  \"clientOrderId\": \"customId11\", // custom order id; (optional)\n  \"offset\": 0,\n  \"limit\": 100,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 422 if request validation failed\nStatus 400 if inner validation failed\nStatus 503 if service temporary unavailable\n[\n    {\n        \"orderId\": 3686033640,            // unexecuted order ID\n        \"clientOrderId\": \"customId11\",    // custom order id; \"clientOrderId\": \"\" - if not specified.\n        \"market\": \"BTC_USDT\",             // currency market\n        \"side\": \"buy\",                    // order side\n        \"type\": \"limit\",                  // unexecuted order type\n        \"timestamp\": 1594605801.49815,    // current timestamp of unexecuted order\n        \"dealMoney\": \"0\",                 // executed amount in money\n        \"dealStock\": \"0\",                 // executed amount in stock\n        \"amount\": \"2.241379\",             // active order amount\n        \"takerFee\": \"0.001\",              // taker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n        \"makerFee\": \"0.001\",              // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n        \"left\": \"2.241379\",               // unexecuted amount in stock\n        \"dealFee\": \"0\",                   // executed fee by deal\n        \"price\": \"40000\"                  // unexecuted order price\n    },\n    {...}\n]\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"The market field is required.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should be a string.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field format is invalid.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should not be empty string.\"]\n  }\n}\n{\n  \"message\": \"Validation failed\",\n  \"code\": 31,\n  \"errors\": {\n    \"market\": [\"Market is not available\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be an integer.\"],\n    \"offset\": [\"The offset must be an integer.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit may not be greater than 100.\"],\n    \"offset\": [\"The offset may not be greater than 10000.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be at least 1.\"],\n    \"offset\": [\"The offset must be at least 0.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}","query-executed-order-history#Query executed order history":"[POST] /api/v4/trade-account/executed-history\nThis endpoint retrieves the deals history. Can be sorted by single market if needed.❗ Rate limit 12000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tNo\tRequested market. Example: BTC_USDT\tclientOrderId\tString\tNo\tRequested clientOrderId. Example: customId11\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 50, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nRequest BODY raw:\n{\n  \"clientOrderId\": \"customId11\", // custom order id; (optional)\n  \"offset\": 0,\n  \"limit\": 100,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 422 if request validation failed\nStatus 400 if inner validation failed\nStatus 503 if service temporary unavailable\n{\n    \"BTC_USDT\": [\n        {\n            \"id\": 160305483,               // deal ID\n            \"clientOrderId\": \"customId11\", // custom order id; \"clientOrderId\": \"\" - if not specified.\n            \"time\": 1594667731.724403,     // Timestamp of the executed deal\n            \"side\": \"sell\",                // Deal side \"sell\" / \"buy\"\n            \"role\": 2,                     // Role - 1 - maker, 2 - taker\n            \"amount\": \"0.000076\",          // amount in stock\n            \"price\": \"9264.21\",            // price\n            \"deal\": \"0.70407996\",          // amount in money\n            \"fee\": \"0.00070407996\"         // paid fee\n        },\n        {...}\n    ],\n    \"DTBC_DUSDT\": [...]\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"Limit field should be an integer.\"],\n    \"offset\": [\"Offset field should be an integer.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field format is invalid.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should be a string.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"Limit should not be greater than 100.\"],\n    \"offset\": [\"Offset should not be greater than 10000.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"Limit should be at least 1.\"],\n    \"offset\": [\"Offset should be at least 0.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}","query-executed-order-deals#Query executed order deals":"[POST] /api/v4/trade-account/order\nThis endpoint retrieves deals history details on pending or executed order.❗ Rate limit 12000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\torderId\tInt\tYes\tOrder ID. Example: 1234\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 50, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nRequest BODY raw:\n{\n  \"orderId\": 3135554375,\n  \"offset\": 0,\n  \"limit\": 100,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 422 if request validation failed\nStatus 400 if inner validation failed\nStatus 503 if service temporary unavailable\n{\n  \"records\": [\n    {\n      \"time\": 1593342324.613711, // Timestamp of executed order\n      \"fee\": \"0.00000419198\", // fee that you pay\n      \"price\": \"0.00000701\", // price\n      \"amount\": \"598\", // amount in stock\n      \"id\": 149156519, // deal id\n      \"dealOrderId\": 3134995325, // completed order Id\n      \"clientOrderId\": \"customId11\", // custom order id; \"clientOrderId\": \"\" - if not specified.\n      \"role\": 2, // Role - 1 - maker, 2 - taker\n      \"deal\": \"0.00419198\" // amount in money\n    }\n  ],\n  \"offset\": 0,\n  \"limit\": 100\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"orderId\": [\"Order was not found.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"orderId\": [\"OrderId field is required.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"orderId\": [\"OrderId field should be an integer.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"Limit should not be greater than 100.\"],\n    \"offset\": [\"Offset should not be greater than 10000.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"Limit should be at least 1.\"],\n    \"offset\": [\"Offset should be at least 0.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}","query-executed-orders#Query executed orders":"[POST] /api/v4/trade-account/order/history\nThis endpoint retrieves executed order history by market.❗ Rate limit 12000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tNo\tRequested available market. Example: BTC_USDT\torderId\tString\tNo\tRequested available orderId. Example: 3134995325\tclientOrderId\tString\tNo\tRequested available clientOrderId. Example: clientOrderId\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 50, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\tstatus\tString\tNo\tPossible values: \"all\", \"filled\", \"canceled\"\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\", //optional\n  \"orderId\": \"3134995325\", //order Id (optional)\n  \"clientOrderId\": \"clientOrderId\", // custom order id; (optional)\n  \"offset\": 0,\n  \"limit\": 100,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 422 if request validation failed\nStatus 400 if inner validation failed\nStatus 503 if service temporary unavailable\nEmpty response if order is not yours\n{\n    \"BTC_USDT\": [\n        {\n            \"amount\": \"0.0009\",               // amount of trade\n            \"price\": \"40000\",                 // price\n            \"type\": \"limit\",                  // order type\n            \"id\": 4986126152,                 // order id\n            \"clientOrderId\": \"customId11\",    // custom order identifier; \"clientOrderId\": \"\" - if not specified.\n            \"side\": \"sell\",                   // order side\n            \"ctime\": 1597486960.311311,       // timestamp of order creation\n            \"takerFee\": \"0.001\",              // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n            \"ftime\": 1597486960.311332,       // executed order timestamp\n            \"makerFee\": \"0.001\",              // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n            \"dealFee\": \"0.041258268\",         // paid fee if order is finished\n            \"dealStock\": \"0.0009\",            // amount in stock currency that finished\n            \"dealMoney\": \"41.258268\",         // amount in money currency that finished\n            \"postOnly\": false,                // PostOnly flag\n            \"ioc\": false,                     // IOC flag\n            \"status\": \"canceled\"             // Order status: either \"filled\" or \"canceled\"\n        },\n        {...}\n    ]\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"Limit field should be an integer.\"],\n    \"offset\": [\"Offset field should be an integer.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field format is invalid.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should be a string.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"Limit should not be greater than 100.\"],\n    \"offset\": [\"Offset should not be greater than 10000.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"Limit should be at least 1.\"],\n    \"offset\": [\"Offset should be at least 0.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}","collateral#Collateral":"","collateral-account-balance#Collateral Account Balance":"[POST] /api/v4/collateral-account/balance\nThis endpoint returns a current collateral balance❗ Rate limit 12000 requests/10 sec.Response is cached for:\nNONEParameters\nName\tType\tMandatory\tDescription\tticker\tString\tNo\tAsset to be filtered. For example: BTC\t\nRequest BODY raw:\n{\n  \"ticker\": \"BTC\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 422 if inner validation failed\nStatus 503 if service temporary unavailable\n{\n  \"BTC\": 1,\n  \"USDT\": 1000\n}","collateral-account-balance-summary#Collateral Account Balance Summary":"[POST] /api/v4/collateral-account/balance-summary\nThis endpoint returns a current collateral balance summaryParameters\nName\tType\tMandatory\tDescription\tticker\tString\tNo\tFilter by requested asset. For example: BTC\t\nRequest BODY raw:\n{\n  \"ticker\": \"BTC\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 422 if inner validation failed\nStatus 503 if service temporary unavailable\n[\n  {\n    \"asset\": \"BTC\",\n    \"balance\": \"0\",\n    \"borrow\": \"0\",\n    \"availableWithoutBorrow\": \"0\",\n    \"availableWithBorrow\": \"123.456\"\n  }\n]","collateral-limit-order#Collateral Limit Order":"[POST] /api/v4/order/collateral/limit\nThis endpoint creates limit order using collateral balance❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable margin market. Example: BTC_USDT\tside\tString\tYes\tOrder type. Variables: 'buy' / 'sell' Example: 'buy'. For open long position you have to use buy, for short sell. Also to close current position you have to place opposite order with current position amount.\tamount\tString\tYes\t⚠️Amount of stock currency to buy or sell.\tprice\tString\tYes\tPrice in money currency. Example: '9800'\tclientOrderId\tString\tNo\tIdentifier should be unique and contain letters, dashes or numbers only. The identifier must be unique for the next 24 hours.\tpostOnly\tboolean\tNo\tOrders are guaranteed to be the maker order when executed. Variables: true / false Example: false.\tioc\tboolean\tNo\tAn immediate or cancel order (IOC) is an order that attempts to execute all or part immediately and then cancels any unfilled portion of the order. Variables: 'true' / 'false' Example: 'false'.\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"buy\",\n  \"amount\": \"0.01\",\n  \"price\": \"40000\",\n  \"postOnly\": false,\n  \"ioc\": false,\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 422 if inner validation failed\nStatus 503 if service temporary unavailable\n{\n  \"orderId\": 4180284841, // order id\n  \"clientOrderId\": \"order1987111\", // custom client order id; \"clientOrderId\": \"\" - if not specified.\n  \"market\": \"BTC_USDT\", // deal market\n  \"side\": \"buy\", // order side\n  \"type\": \"limit\", // order type\n  \"timestamp\": 1595792396.165973, // current timestamp\n  \"dealMoney\": \"0\", // if order finished - amount in money currency that is finished\n  \"dealStock\": \"0\", // if order finished - amount in stock currency that is finished\n  \"amount\": \"0.01\", // amount\n  \"takerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"left\": \"0.001\", // if order not finished - rest of the amount that must be finished\n  \"dealFee\": \"0\", // fee in money that you pay if order is finished\n  \"price\": \"40000\", // price\n  \"postOnly\": false, // PostOnly\n  \"ioc\": false // IOC\n}\nError codes:\n31 - market is disabled for trading\n32 - incorrect amount (it is less than or equals zero or its precision is too big)\n33 - incorrect price (it is less than or equals zero or its precision is too big)\n36 - incorrect clientOrderId (invalid string or not unique id)\n37 - ioc and postOnly flags are both true\nDetailed information about errors response you can find in Create limit order","collateral-market-order#Collateral Market Order":"[POST] /api/v4/order/collateral/market\nThis endpoint creates market trading order.❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable margin market. Example: BTC_USDT\tside\tString\tYes\tOrder type. Variables: 'buy' / 'sell' Example: 'buy'. For open long position you have to use buy, for short sell. Also to close current position you have to place opposite order with current position amount.\tamount\tString\tYes\t⚠️Amount of stock currency to buy or sell.\tclientOrderId\tString\tNo\tIdentifier should be unique and contain letters, dashes or numbers only. The identifier must be unique for the next 24 hours.\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"buy\",\n  \"amount\": \"0.01\", // I want to buy 0.01 BTC\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"sell\",\n  \"amount\": \"0.01\", // I want to sell 0.01 BTC\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 422 if internal validation failed\nStatus 503 if service is temporary unavailable\n{\n  \"orderId\": 4180284841, // order id\n  \"clientOrderId\": \"order1987111\", // custom client order id; \"clientOrderId\": \"\" - if not specified.\n  \"market\": \"BTC_USDT\", // deal market\n  \"side\": \"buy\", // order side\n  \"type\": \"market\", // order type\n  \"timestamp\": 1595792396.165973, // current timestamp\n  \"dealMoney\": \"0\", // amount in money currency that finished\n  \"dealStock\": \"0\", // amount in stock currency that finished\n  \"amount\": \"0.001\", // amount\n  \"takerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n  \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - its rounded to zero\n  \"left\": \"0.001\", // rest of amount that must be finished\n  \"dealFee\": \"0\" // fee in money that you pay if order is finished\n}\nError codes:\n31 - market is disabled for trading\n32 - incorrect amount (it is less than or equals zero or its precision is too big)\n33 - incorrect price (it is less than or equals zero or its precision is too big)\n36 - incorrect clientOrderId (invalid string or not unique id)\nDetailed information about errors response you can find in Create market order","collateral-stop-limit-order#Collateral Stop-Limit Order":"[POST] /api/v4/order/collateral/stop-limit\nThis endpoint creates collateral stop-limit trading order❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tside\tString\tYes\tOrder type. Variables: 'buy' / 'sell' Example: 'buy'\tamount\tString/Number\tYes\tAmount of stock currency to buy or sell. Example: '0.001' or 0.001\tprice\tString/Number\tYes\tPrice in money currency. Example: '9800' or 9800\tactivation_price\tString/Number\tYes\tActivation price in money currency. Example: '10000' or 10000\tclientOrderId\tString\tNo\tIdentifier should be unique and contain letters, dashes or numbers only. The identifier must be unique for the next 24 hours.\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"buy\",\n  \"amount\": \"0.001\",\n  \"price\": \"40000\",\n  \"activation_price\": \"40000\",\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if request validation failed\nStatus 503 if service temporary unavailable\n{\n  \"orderId\": 4180284841, // order id\n  \"clientOrderId\": \"order1987111\", // custom client order id; \"clientOrderId\": \"\" - if not specified.\n  \"market\": \"BTC_USDT\", // deal market\n  \"side\": \"buy\", // order side\n  \"type\": \"stop limit\", // order type\n  \"timestamp\": 1595792396.165973, // current timestamp\n  \"dealMoney\": \"0\", // if order finished - amount in money currency that finished\n  \"dealStock\": \"0\", // if order finished - amount in stock currency that finished\n  \"amount\": \"0.001\", // amount\n  \"takerFee\": \"0.001\", // taker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"left\": \"0.001\", // if order not finished - rest of amount that must be finished\n  \"dealFee\": \"0\", // fee in money that you pay if order is finished\n  \"price\": \"40000\", // price\n  \"activation_price\": \"40000\" // activation price\n}\nError codes:\n30 - default validation error code\n31 - market validation failed\n32 - amount validation failed\n33 - price validation failed\n36 - clientOrderId validation failed\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activation_price\": [\"Activation price field is required.\"],\n    \"amount\": [\"Amount field is required.\"],\n    \"market\": [\"Market field is required.\"],\n    \"price\": [\"Price field is required.\"],\n    \"side\": [\"Side field is required.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"side\": [\"Side field should contain only 'buy' or 'sell' values.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should not be empty string.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"Given amount is less than min amount 0.001\",\n      \"Min amount step = 0.000001\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"total\": [\"Total(amount * price) is less than 5.05\"]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\"ClientOrderId field should be a string.\"]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"ClientOrderId field field should contain only latin letters, numbers and dashes.\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"This client order id is already used by the current account. It will become available in 24 hours (86400 seconds).\"\n    ]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price field should be at least 10\", \"Min price step = 0.000001\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 35,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"maker_fee\": [\"Incorrect maker fee\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\n      \"Activation price should not be equal to the last price\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activation_price\": [\"Activation price should be numeric string.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Activation price should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Empty history\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Min activation price = 10\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Min activation price step = 0.00001\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\n      \"Activation price should not be equal to the last price\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"lastPrice\": [\"internal error\"]\n  }\n}\n{\n  \"code\": 10,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}\n{\n  \"code\": 11,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount too small.\"]\n  }\n}","collateral-trigger-market-order#Collateral Trigger Market Order":"[POST] /api/v4/order/collateral/trigger-market\nThis endpoint creates margin trigger market order❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable margin market. Example: BTC_USDT\tside\tString\tYes\tOrder type. Variables: 'buy' / 'sell' Example: 'buy'. For open long position you have to use buy, for short sell. Also to close current position you have to place opposite order with current position amount.\tamount\tString\tYes\t⚠️Amount of stock currency to buy or sell.\tactivation_price\tString\tYes\tActivation price in money currency. Example: '10000'\tclientOrderId\tString\tNo\tIdentifier should be unique and contain letters, dashes or numbers only. The identifier must be unique for the next 24 hours.\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"buy\",\n  \"amount\": \"0.01\", // I want to buy 0.01 BTC\n  \"activation_price\": \"40000\",\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"sell\",\n  \"amount\": \"0.01\", // I want to sell 0.01 BTC\n  \"activation_price\": \"40000\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 422 if inner validation failed\nStatus 503 if service temporary unavailable\n{\n  \"orderId\": 4180284841, // order id\n  \"clientOrderId\": \"order1987111\", // custom order identifier; \"clientOrderId\": \"\" - if not specified.\n  \"market\": \"BTC_USDT\", // deal market\n  \"side\": \"buy\", // order side\n  \"type\": \"stop market\", // order type\n  \"timestamp\": 1595792396.165973, // current timestamp\n  \"dealMoney\": \"0\", // if order finished - amount in money currency that finished\n  \"dealStock\": \"0\", // if order finished - amount in stock currency that finished\n  \"amount\": \"0.001\", // amount\n  \"takerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n  \"left\": \"0.001\", // if order not finished - rest of amount that must be finished\n  \"dealFee\": \"0\", // fee in money that you pay if order is finished\n  \"activation_price\": \"40000\" // activation price\n}\nError codes:\n31 - market is disabled for trading\n32 - incorrect amount (it is less than or equals zero or its precision is too big)\n33 - incorrect price (it is less than or equals zero or its precision is too big)\n36 - incorrect clientOrderId (invalid string or not unique id)","collateral-account-summary#Collateral Account Summary":"[POST] /api/v4/collateral-account/summary\nThis endpoint retrieves summary of collateral account❗ Rate limit 12000 requests/10 sec.Response is cached for:\nNONERequest BODY raw:\n{\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 503 if service temporary unavailable\n{\n  \"equity\": \"130970.8947456254113367\", // total equity of collateral balance including lending funds in USDT\n  \"margin\": \"456.58349\", // amount of funds in open position USDT\n  \"freeMargin\": \"129681.3285348840110099\", // free funds for trading according to\n  \"unrealizedFunding\": \"0.0292207414003268\", // funding that will be paid on next position stage change (order, liquidation, etc)\n  \"pnl\": \"-832.9535\", // curren profit and loss in USDT\n  \"leverage\": 10, // current leverage of account which affect amount of lending funds\n  \"marginFraction\": \"6.2446758120916304\", // margin fraction\n  \"maintenanceMarginFraction\": \"1.2446758120916304\" // maintenance margin fraction\n}","open-positions#Open Positions":"[POST] /api/v4/collateral-account/positions/open\nThis endpoint returns all open positions❗ Rate limit 12000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tNo\tRequested market. Example: BTC_USDT\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 422 if inner validation failed\nStatus 503 if service temporary unavailable\n[\n  {\n    \"positionId\": 527,                         // position ID\n    \"market\": \"BTC_USDT\",                      // market name\n    \"openDate\": 1651568067.789679,             // date of position opening\n    \"modifyDate\": 1651568067.789679,           // date of position modifying (this is date of current event)\n    \"amount\": \"0.1\",                           // amount of order\n    \"basePrice\": \"45658.349\",                  // base price of position\n    \"liquidationPrice\": null,                  // liquidation price according to current state of position\n    \"liquidationState\": null,                  // state of liquidation. Possible values: null, margin_call, liquidation\n    \"pnl\": \"-168.42\",                          // current profit and loss in **money**\n    \"pnlPercent\": \"-0.43\",                     // current profit and loss in percentage\n    \"margin\": \"8316.74\",                       // amount of funds in open position **money**\n    \"freeMargin\": \"619385.67\",                 // free funds for trading according to\n    \"funding\": \"0\",                            // funding that will be paid on next position stage change (order, liquidation, etc)\n    \"unrealizedFunding\": \"0.0019142920201966\", // funding that will be paid on next position stage change (order, liquidation, etc)\n  },\n  ...\n]\nNOTE: In case of position opening using trigger or limit order you can get situation when basePrice, liquidationPrice, amount, pnl, pnlPercent returns with null value. It happens when funds are lending, and you start to pay funding fee, but position is not completely opened, cos activation price hadn't been triggered yet.","positions-history#Positions History":"[POST] /api/v4/collateral-account/positions/history\nThis endpoint returns past positions history. Each position represented by position states. Each of them means event that shows current position changes such order, position close, liquidation, etc.If your request has a \"positionId\" field, you receive data only with this \"positionId\".\nIf your request has a \"market\" field, you receive data only by this \"market\".❗ Rate limit 12000 requests/10 sec.Response is cached for:\nNONE\"positionId\" field has higher priority then \"market\" field.Parameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tNo\tRequested market. Example: BTC_USDT\tpositionId\tInt\tNo\tRequested position\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\", //optional\n  \"positionId\": 1, //optional\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 422 if inner validation failed\nStatus 503 if service temporary unavailable\n[\n  {\n      \"positionId\": 111,               // position ID\n      \"market\": \"BTC_USDT\",            // position market\n      \"openDate\": 1650400589.882613,   // date of position opening\n      \"modifyDate\": 1650400589.882613, // date of position modifying (this is date of current event)\n      \"amount\": \"0.1\",                 // amount of order\n      \"basePrice\": \"45658.349\",        // base price of position\n      \"realizedFunding\": \"0\",          // funding fee for whole position lifetime till current state\n      \"liquidationPrice\": null,        // liquidation price according to current state of position\n      \"liquidationState\": null,        // state of liquidation. Possible values: null, margin_call, liquidation\n      \"orderDetail\": {                 // details of order which changes position\n        \"id\": 97067934,                // order ID\n        \"tradeAmount\": \"0.1\",          // trade amount of order\n        \"basePrice\": \"41507.59\",       // order's base price\n        \"tradeFee\": \"415.07\",          // order's trade fee\n        \"fundingFee\": null,            // funding fee which was captured by this position change (order)\n        \"realizedPnl\": null            // realized pnl\n      }\n    },\n    ...\n]","change-collateral-account-leverage#Change Collateral Account Leverage":"[POST] /api/v4/collateral-account/leverage\nThis endpoint changes the current leverage of account.Please note: Leverages of 50x and 100x are applicable only for futures trading. When applied to margin trading, the maximum leverage applied will be 20x. The leverage value is applied to the entire account, so if you choose a new leverage value below 50x, it will be applied to both margin and futures trading.\nAdditionally, we would like to draw your attention to the fact that calculations for futures positions with 50x and 100x leverage are done considering brackets (see endpoint futures). You can familiarize yourself with the bracket mechanics for 50x and 100x leverage on the Trading Rules page.❗ Rate limit 12000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tleverage\tInt\tYes\tNew collateral account leverage value. Acceptable values: 1, 2, 3, 5, 10, 20, 50, 100\t\nRequest BODY raw:\n{\n  \"leverage\": 5,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 422 if inner validation failed\nStatus 503 if service temporary unavailable\n{\n  \"leverage\": 5 // current collateral balance leverage\n}","query-unexecutedactive-oco-orders#Query unexecuted(active) OCO orders":"[POST] /api/v4/oco-orders\nThis endpoint retrieves unexecuted oco orders only.❗ Rate limit 1000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tlimit\tInt\tNo\tLIMIT is a special clause used to limit records a particular query can return. Default: 50, Min: 1, Max: 100\toffset\tInt\tNo\tIf you want the request to return entries starting from a particular line, you can use OFFSET clause to tell it where it should start. Default: 0, Min: 0, Max: 10000\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"offset\": 0,\n  \"limit\": 100,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 422 if request validation failed\nStatus 400 if inner validation failed\nStatus 503 if service temporary unavailable\n[\n  {\n    \"id\": 117703764513,                   // oco order id\n    \"stop_loss\": {\n      \"orderId\": 117703764514,            // unexecuted order ID\n      \"clientOrderId\": \"\",                // custom order id; \"clientOrderId\": \"\" - if not specified.\n      \"market\": \"BTC_USDT\",               // currency market\n      \"side\": \"buy\",                      // order side\n      \"type\": \"stop limit\",               // unexecuted order type\n      \"timestamp\": 1594605801.49815,      // current timestamp of unexecuted order\n      \"dealMoney\": \"0\",                   // executed amount in money\n      \"dealStock\": \"0\",                   // executed amount in stock\n      \"amount\": \"2.241379\",               // active order amount\n      \"takerFee\": \"0.001\",                // taker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n      \"makerFee\": \"0.001\",                // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n      \"left\": \"2.241379\",                 // unexecuted amount in stock\n      \"dealFee\": \"0\",                     // executed fee by deal\n      \"post_only\": false,                 // orders are guaranteed to be the maker order when executed.\n      \"mtime\": 1662478154.941582,\n      \"price\": \"19928.79\",                // unexecuted order price\n      \"activation_price\": \"29928.79\",     // activation price\n      \"activation_condition\": \"gte\",      // activation condition\n      \"activated\": 0                      // activation status\n    },\n    \"take_profit\": {\n      \"orderId\": 117703764515,            // unexecuted order ID\n      \"clientOrderId\": \"\",                // custom order id; \"clientOrderId\": \"\" - if not specified.\n      \"market\": \"BTC_USDT\",               // currency market\n      \"side\": \"buy\",                      // order side\n      \"type\": \"limit\",                    // unexecuted order type\n      \"timestamp\": 1662478154.941582,     // current timestamp of unexecuted order\n      \"dealMoney\": \"0\",                   // executed amount in money\n      \"dealStock\": \"0\",                   // executed amount in stock\n      \"amount\": \"0.635709\",               // active order amount\n      \"takerFee\": \"0.001\",                // taker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n      \"makerFee\": \"0.001\",                // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n      \"left\": \"0.635709\",                 // unexecuted amount in stock\n      \"dealFee\": \"0\",                     // executed fee by deal\n      \"post_only\": false,                 // orders are guaranteed to be the maker order when executed.\n      \"mtime\": 1662478154.941582,\n      \"price\": \"9928.79\"                  // unexecuted order price\n    }\n  },\n    {...}\n]\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"The market field is required.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should be a string.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field format is invalid.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should not be empty string.\"]\n  }\n}\n{\n  \"message\": \"Validation failed\",\n  \"code\": 31,\n  \"errors\": {\n    \"market\": [\"Market is not available\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be an integer.\"],\n    \"offset\": [\"The offset must be an integer.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit may not be greater than 100.\"],\n    \"offset\": [\"The offset may not be greater than 10000.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"limit\": [\"The limit must be at least 1.\"],\n    \"offset\": [\"The offset must be at least 0.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}","create-collateral-oco-order#Create collateral OCO order":"[POST] /api/v4/order/collateral/oco\nThis endpoint creates collateral trading OCO order❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\tside\tString\tYes\tOrder type. Variables: 'buy' / 'sell' Example: 'buy'\tamount\tString/Number\tYes\tAmount of stock currency to buy or sell. Example: '0.001' or 0.001\tprice\tString/Number\tYes\tPrice in money currency for limit order. Example: '9800' or 9800\tactivation_price\tString/Number\tYes\tActivation price in money currency. Example: '10000' or 10000\tstop_limit_price\tString/Number\tYes\tPrice in money currency for stop limit order. Example: '10100' or 10100\tclientOrderId\tString\tNo\tIdentifier should be unique and contain letters, dashes or numbers only. The identifier must be unique for the next 24 hours.\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"side\": \"buy\",\n  \"amount\": \"0.001\",\n  \"price\": \"40000\",\n  \"activation_price\": \"41000\",\n  \"stop_limit_price\": \"42000\",\n  \"clientOrderId\": \"order1987111\",\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if request validation failed\nStatus 503 if service temporary unavailable\n{\n  \"id\": 117703764513, // oco order id\n  \"stop_loss\": {\n    \"orderId\": 117703764514, // unexecuted order ID\n    \"clientOrderId\": \"\", // custom order id; \"clientOrderId\": \"\" - if not specified.\n    \"market\": \"BTC_USDT\", // currency market\n    \"side\": \"buy\", // order side\n    \"type\": \"stop limit\", // unexecuted order type\n    \"timestamp\": 1594605801.49815, // current timestamp of unexecuted order\n    \"dealMoney\": \"0\", // executed amount in money\n    \"dealStock\": \"0\", // executed amount in stock\n    \"amount\": \"2.241379\", // active order amount\n    \"takerFee\": \"0.001\", // taker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n    \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n    \"left\": \"2.241379\", // unexecuted amount in stock\n    \"dealFee\": \"0\", // executed fee by deal\n    \"post_only\": false, // orders are guaranteed to be the maker order when executed.\n    \"mtime\": 1662478154.941582,\n    \"price\": \"19928.79\", // unexecuted order price\n    \"activation_price\": \"29928.79\", // activation price\n    \"activation_condition\": \"gte\", // activation condition\n    \"activated\": 0 // activation status\n  },\n  \"take_profit\": {\n    \"orderId\": 117703764515, // unexecuted order ID\n    \"clientOrderId\": \"\", // custom order id; \"clientOrderId\": \"\" - if not specified.\n    \"market\": \"BTC_USDT\", // currency market\n    \"side\": \"buy\", // order side\n    \"type\": \"limit\", // unexecuted order type\n    \"timestamp\": 1662478154.941582, // current timestamp of unexecuted order\n    \"dealMoney\": \"0\", // executed amount in money\n    \"dealStock\": \"0\", // executed amount in stock\n    \"amount\": \"0.635709\", // active order amount\n    \"takerFee\": \"0.001\", // taker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n    \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n    \"left\": \"0.635709\", // unexecuted amount in stock\n    \"dealFee\": \"0\", // executed fee by deal\n    \"post_only\": false, // orders are guaranteed to be the maker order when executed.\n    \"mtime\": 1662478154.941582,\n    \"price\": \"9928.79\" // unexecuted order price\n  }\n}\nError codes:\n30 - default validation error code\n31 - market validation failed\n32 - amount validation failed\n33 - price validation failed\n36 - clientOrderId validation failed\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activation_price\": [\"Activation price field is required.\"],\n    \"amount\": [\"Amount field is required.\"],\n    \"market\": [\"Market field is required.\"],\n    \"price\": [\"Price field is required.\"],\n    \"side\": [\"Side field is required.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"side\": [\"Side field should contain only 'buy' or 'sell' values.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"stop_limit_price\": [\n      \"Stop_limit_price field should be numeric string or number.\"\n    ]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should not be empty string.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"Given amount is less than min amount 0.001\",\n      \"Min amount step = 0.000001\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"total\": [\"Total(amount * price) is less than 5.05\"]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\"ClientOrderId field should be a string.\"]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"ClientOrderId field field should contain only latin letters, numbers and dashes.\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"This client order id is already used by the current account. It will become available in 24 hours (86400 seconds).\"\n    ]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price field should be at least 10\", \"Min price step = 0.000001\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"stop_limit_price\": [\n      \"Stop_limit_price field should be at least 10\",\n      \"Min price step = 0.000001\"\n    ]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"stop_limit_price\": [\"Stop_limit_price should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 35,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"maker_fee\": [\"Incorrect maker fee\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\n      \"Activation price should not be equal to the last price\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activation_price\": [\"Activation price should be numeric string.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Activation price should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Empty history\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Min activation price = 10\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\"Min activation price step = 0.00001\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"activationPrice\": [\n      \"Activation price should not be equal to the last price\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"lastPrice\": [\"internal error\"]\n  }\n}\n{\n  \"code\": 10,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}\n{\n  \"code\": 11,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount too small.\"]\n  }\n}\n{\n  \"code\": 16,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"error\": [\"Please try again later.\"]\n  }\n}\n{\n  \"code\": 15,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"error\": [\"Please try again later.\"]\n  }\n}\n{\n  \"code\": 14,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"postOnly\": [\n      \"This order couldn't be executed as a maker order and was canceled.\"\n    ]\n  }\n}\n{\n  \"code\": 153,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"price\": [\"Not enough balance for limit order.\"]\n  }\n}\n{\n  \"code\": 150,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"price\": [\"Can't place limit order.\"]\n  }\n}\n{\n  \"code\": 151,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"activation_price\": [\"Wrong activation price for stop loss.\"]\n  }\n}\n{\n  \"code\": 152,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"price\": [\"Not enough balance for stop limit order.\"]\n  }\n}","cancel-oco-order#Cancel OCO order":"[POST] /api/v4/order/oco-cancel\nCancel existing order❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\torderId\tString/Int\tYes\tOCO order Id. Example: 4180284841 or \"4180284841\"\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"orderId\": 117703764514,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if validation failed\nStatus 503 if service temporary unavailable\n{\n  \"id\": 117703764513, // oco order id\n  \"stop_loss\": {\n    \"orderId\": 117703764514, // unexecuted order ID\n    \"clientOrderId\": \"\", // custom order id; \"clientOrderId\": \"\" - if not specified.\n    \"market\": \"BTC_USDT\", // currency market\n    \"side\": \"buy\", // order side\n    \"type\": \"stop limit\", // unexecuted order type\n    \"timestamp\": 1594605801.49815, // current timestamp of unexecuted order\n    \"dealMoney\": \"0\", // executed amount in money\n    \"dealStock\": \"0\", // executed amount in stock\n    \"amount\": \"2.241379\", // active order amount\n    \"takerFee\": \"0.001\", // taker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n    \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n    \"left\": \"2.241379\", // unexecuted amount in stock\n    \"dealFee\": \"0\", // executed fee by deal\n    \"post_only\": false, // orders are guaranteed to be the maker order when executed.\n    \"mtime\": 1662478154.941582,\n    \"price\": \"19928.79\", // unexecuted order price\n    \"activation_price\": \"29928.79\", // activation price\n    \"activation_condition\": \"gte\", // activation condition\n    \"activated\": 0 // activation status\n  },\n  \"take_profit\": {\n    \"orderId\": 117703764515, // unexecuted order ID\n    \"clientOrderId\": \"\", // custom order id; \"clientOrderId\": \"\" - if not specified.\n    \"market\": \"BTC_USDT\", // currency market\n    \"side\": \"buy\", // order side\n    \"type\": \"limit\", // unexecuted order type\n    \"timestamp\": 1662478154.941582, // current timestamp of unexecuted order\n    \"dealMoney\": \"0\", // executed amount in money\n    \"dealStock\": \"0\", // executed amount in stock\n    \"amount\": \"0.635709\", // active order amount\n    \"takerFee\": \"0.001\", // taker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n    \"makerFee\": \"0.001\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n    \"left\": \"0.635709\", // unexecuted amount in stock\n    \"dealFee\": \"0\", // executed fee by deal\n    \"post_only\": false, // orders are guaranteed to be the maker order when executed.\n    \"mtime\": 1662478154.941582,\n    \"price\": \"9928.79\" // unexecuted order price\n  }\n}\nError codes:\n30 - default validation error code\n31 - market validation failed\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field is required.\"],\n    \"orderId\": [\"OrderId field is required.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"orderId\": [\"OrderId field should be an integer.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\n      \"Market field should be a string.\",\n      \"Market field format is invalid.\"\n    ]\n  }\n}\n{\n  \"code\": 2,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"orderId\": [\"Unexecuted order was not found.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}","sync-kill-switch-timer#Sync kill-switch timer":"[POST] /api/v4/order/kill-switch\nThis endpoint creates, updates, deletes kill-switch timer❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tYes\tAvailable market. Example: BTC_USDT\ttimeout\tString\tYes\tTimer value. Example: \"5\"-\"600\" or null\ttypes\tArray\tNo\tOrder types value. Example: \"spot\", \"margin\", \"futures\" or null\t\nIf timer=null - delete existing timer by market.\nIf types=null - create timer by market for all order types.Request BODY raw:\n{\n  \"market\": \"BTC_USDT\",\n  \"timeout\": \"5\",\n  \"types\": [\"spot\", \"margin\"],\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if validation failed\n{\n  \"market\": \"BTC_USDT\", // currency market,\n  \"startTime\": 1662478154, // now timestamp,\n  \"cancellationTime\": 1662478154, // now + timer_value,\n  \"types\": [\"spot\", \"margin\"]\n}\nError codes:\n30 - default validation error code\n31 - market validation failed\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field is required.\"],\n    \"timeout\": [\"Timeout field is required.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"timeout\": [\"Timeout field should be a string.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\n      \"Market field should be a string.\",\n      \"Market field format is invalid.\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"timeout\": [\"Timeout should be at least 5.\"]\n  }\n}","status-kill-switch-timer#Status kill-switch timer":"[POST] /api/v4/order/kill-switch/status\nThis endpoint retrieves the status of kill-switch timer❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tmarket\tString\tNo\tAvailable market. Example: BTC_USDT\t\nRequest BODY raw:\n{\n  \"market\": \"BTC_USDT\", // optional\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if validation failed\n[\n  {\n    \"market\": \"BTC_USDT\",\n    \"startTime\": 1686127243,\n    \"cancellationTime\": 1686127343,\n    \"types\": [\"spot\", \"margin\"]\n  }\n]\nError codes:\n30 - default validation error code\n31 - market validation failed\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\n      \"Market field should be a string.\",\n      \"Market field format is invalid.\"\n    ]\n  }\n}","bulk-limit-order#Bulk limit order":"[POST] /api/v4/order/bulk\nThis endpoint creates bulk limit trading orders.❗Limit - From 1 to 20 orders by request.Parameters:\nName\tType\tMandatory\tDescription\torders\tArray\tYes\tArray of limit orders\t\nRequest BODY raw:\n{\n  \"orders\": [\n    {\n      \"side\": \"buy\",\n      \"amount\": \"0.02\",\n      \"price\": \"40000\",\n      \"market\": \"BTC_USDT\",\n      \"postOnly\": false,\n      \"ioc\": false,\n      \"clientOrderId\": \"\"\n    },\n    {\n      \"side\": \"sell\",\n      \"amount\": \"0.0001\",\n      \"price\": \"41000\",\n      \"postOnly\": false,\n      \"market\": \"BTC_USDT\",\n      \"ioc\": false,\n      \"clientOrderId\": \"\"\n    },\n    {\n      \"side\": \"sell\",\n      \"amount\": \"0.02\",\n      \"price\": \"41000\",\n      \"postOnly\": false,\n      \"market\": \"BTC_USDT\",\n      \"ioc\": false,\n      \"clientOrderId\": \"\"\n    }\n  ],\n  \"stopOnFail\": true,\n  \"request\": \"{{request}}\",\n  \"nonce\": \"{{nonce}}\"\n}\nResponse:\nAvailable statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if request validation failed\nStatus 503 if service temporary unavailable\n[\n  {\n    \"result\": {\n      \"orderId\": 4326248250, // order id\n      \"clientOrderId\": \"\", // custom client order id; \"clientOrderId\": \"\" - if not specified.\n      \"market\": \"BTC_USDT\", // deal market\n      \"side\": \"buy\", // order side\n      \"type\": \"limit\", // order type\n      \"timestamp\": 1684916268.825564, // current timestamp\n      \"dealMoney\": \"641.988\", // if order finished - amount in money currency that is finished\n      \"dealStock\": \"0.02\", // if order finished - amount in stock currency that is finished\n      \"amount\": \"0.02\", // amount\n      \"takerFee\": \"0.002\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n      \"makerFee\": \"0.02\", // maker fee ratio. If the number less than 0.0001 - it will be rounded to zero\n      \"left\": \"0\", // if order not finished - rest of the amount that must be finished\n      \"dealFee\": \"1.283976\", // fee in money that you pay if order is finished\n      \"ioc\": false, // IOC\n      \"postOnly\": false, // PostOnly\n      \"price\": \"40000\" // price\n    },\n    \"error\": null\n  },\n  {\n    \"result\": null,\n    \"error\": {\n      \"code\": 32,\n      \"message\": \"Validation failed\",\n      \"errors\": {\n        \"amount\": [\"Given amount is less than min amount 0.001.\"]\n      }\n    }\n  },\n  {\n    \"result\": {\n      \"orderId\": 4326248250,\n      \"clientOrderId\": \"\",\n      \"market\": \"BTC_USDT\",\n      \"side\": \"sell\",\n      \"type\": \"limit\",\n      \"timestamp\": 1684916268.825564,\n      \"dealMoney\": \"641.988\",\n      \"dealStock\": \"0.02\",\n      \"amount\": \"0.02\",\n      \"takerFee\": \"0.002\",\n      \"makerFee\": \"0.02\",\n      \"left\": \"0\",\n      \"dealFee\": \"1.283976\",\n      \"ioc\": false,\n      \"postOnly\": false,\n      \"price\": \"41000\"\n    },\n    \"error\": null\n  }\n]\nError codes:\n30 - default validation error code\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"orders\": [\"The orders must be an array.\"]\n  }\n}\nError codes:\n30 - default validation error code\n31 - market validation failed\n32 - amount validation failed\n33 - price validation failed\n36 - clientOrderId validation failed\n37 - ioc and postOnly flags are both true\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount field is required.\"],\n    \"market\": [\"Market field is required.\"],\n    \"price\": [\"Price field is required.\"],\n    \"side\": [\"Side field is required.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"side\": [\"Side field should contain only 'buy' or 'sell' values.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price field should be numeric string or number.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market is not available.\"]\n  }\n}\n{\n  \"code\": 31,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"market\": [\"Market field should not be empty string.\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"Given amount is less than min amount 0.001\",\n      \"Min amount step = 0.000001\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\"ClientOrderId field should be a string.\"]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"ClientOrderId field field should contain only latin letters, numbers and dashes.\"\n    ]\n  }\n}\n{\n  \"code\": 36,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"clientOrderId\": [\n      \"This client order id is already used by the current account. It will become available in 24 hours (86400 seconds).\"\n    ]\n  }\n}\n{\n  \"code\": 37,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"ioc\": [\"Either IOC or PostOnly flag in true state is allowed.\"]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"total\": [\"Total(amount * price) is less than 5.05\"]\n  }\n}\n{\n  \"code\": 32,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"amount\": [\n      \"Min amount step = 0.01\" // money/stock precision is not taken into consideration when order was submitted\n    ]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price field should be at least 10\", \"Min price step = 0.000001\"]\n  }\n}\n{\n  \"code\": 33,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"price\": [\"Price should be greater than 0.\"]\n  }\n}\n{\n  \"code\": 35,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"maker_fee\": [\"Incorrect maker fee\"]\n  }\n}\n{\n  \"code\": 10,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Not enough balance.\"]\n  }\n}\n{\n  \"code\": 1,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Invalid argument.\"]\n  }\n}\n{\n  \"code\": 11,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"amount\": [\"Amount too small.\"]\n  }\n}\n{\n  \"code\": 13,\n  \"message\": \"Inner validation failed\",\n  \"errors\": {\n    \"postOnly\": [\n      \"This order couldn't be executed as a maker order and was canceled.\"\n    ]\n  }\n}","convert#Convert":"","convert-estimate#Convert Estimate":"[POST] /api/v4/convert/estimate\nThis endpoint creates a quote for converting one currency to another. Quote lifetime is 10 seconds, then quote will be expired.❗ Rate limit 10000 requests/10 sec.Parameters:\nName\tType\tMandatory\tDescription\tfrom\tString\tYes\tFrom currency. Example: BTC\tto\tString\tYes\tTo currency. Example: USDT\tdirection\tString\tYes\tConvert amount direction, defines in which currency corresponding “amount” field is populated. Use “to” in case amount is in “to” currency, use “from” if amount is in “from” currency (see use case samples below)\tamount\tString\tYes\tAmount to convert or receive.\t\nRequest BODY raw:Example of 'I would like to estimate convert of BTC to receive 35,103.1 USDT':\n{\n  \"amount\": \"35,103.1\",\n  \"direction\": \"to\", // enum('from', 'to')\n  \"from\": \"BTC\",\n  \"to\": \"USDT\",\n  \"nonce\": \"{{nonce}}\",\n  \"request\": \"{{request}}\"\n}\nExample of 'I would like to estimate convert of 1 BTC to USDT':\n{\n  \"amount\": \"1\",\n  \"direction\": \"from\", // enum('from', 'to')\n  \"from\": \"BTC\",\n  \"to\": \"USDT\",\n  \"nonce\": \"{{nonce}}\",\n  \"request\": \"{{request}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if validation failed\n{\n  \"id\": \"123\",\n  \"from\": \"BTC\",\n  \"to\": \"USDT\",\n  \"give\": \"50\",\n  \"receive\": \"1714988.41577452\",\n  \"rate\": \"34299.76831549\",\n  \"expireAt\": 1699016476\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"user\": [\n      \"Terms of exchange are not accepted\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"direction\": [\n      \"Direction field does not exist in [from,to].\"\n    ]\n  }\n}\n{\n    \"code\": 0,\n    \"message\": \"Validation failed\",\n    \"errors\": {\n        \"from\": [\n            \"Conversion markets not available\"\n        ]\n    }\n}","convert-confirm#Convert Confirm":"[POST] /api/v4/convert/confirm\nThis endpoint confirms an estimated quote.❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tquoteId\tString\tYes\tQuote ID\t\nRequest BODY raw:\n{\n  \"quoteId\": 4050,\n  \"nonce\": \"{{nonce}}\",\n  \"request\": \"{{request}}\"\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if validation failed\n{\n  \"finalGive\": \"0.00002901\",\n  \"finalReceive\": \"1\"\n}\n{\n  \"code\": 0,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"quoteId\": [\n      \"Quote could not be found\"\n    ]\n  }\n}","convert-history#Convert History":"[POST] /api/v4/convert/history\nThis endpoint returns convert history.❗ Rate limit 10000 requests/10 sec.Response is cached for:\nNONEParameters:\nName\tType\tMandatory\tDescription\tfromTicker\tString\tNo\tFrom currency. Example: BTC\ttoTicker\tString\tNo\tTo currency. Example: USDT\tfrom\tString\tNo\tFrom time filter. Example: 1699260637\tto\tString\tNo\tTo time filter. Example: 1699260637\tquoteId\tString\tNo\tQuote Id. Example: 4050\tlimit\tString\tNo\tHow many records to receive. Default: 100\toffset\tString\tNo\tAmount to convert or receive. Default 0\t\nRequest BODY raw:\n{\n  \"fromTicker\": \"BTC\",\n  \"nonce\": \"{{nonce}}\",\n  \"request\": \"{{request}}\",\n}\nResponse:Available statuses:\nStatus 200\nStatus 400 if inner validation failed\nStatus 422 if validation failed\n{\n  \"records\": [\n    {\n      \"id\": \"4030\",\n      \"date\": 1699020642,\n      \"give\": \"0.00002901\",\n      \"receive\": \"1\",\n      \"rate\": \"34470.87211306\",\n      \"path\": [\n        {\n          \"from\": \"BTC\",\n          \"to\": \"USDT\",\n          \"rate\": \"34470.87211306\"\n        }\n      ]\n    }\n  ],\n  \"total\": 4,\n  \"limit\": 1,\n  \"offset\": 0\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"fromTicker\": [\n      \"fromTicker is invalid.\"\n    ]\n  }\n}\n{\n  \"code\": 30,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"toTicker\": [\n      \"toTicker is invalid.\"\n    ]\n  }\n}"}},"/sdks":{"title":"SDKs","data":{"":"Our SDKs – your gateway to effortless integration! Our Software Development Kits (SDKs) are tailored for various languages, providing a streamlined connection between your application and our APIs.","key-features#Key Features:":"Seamless Integration: Effortlessly integrate our APIs with just a few lines of code, eliminating manual configuration hassles.\nMulti-Language Support: SDKs available for popular languages – Python, PHP, GO, and more to come.\nAutomatic Updates: Stay current with the latest features through automatic updates for your SDK.","official-sdks#Official SDKs":"GO\nPython\nPHP"}},"/webhook/web-hook":{"title":"WebHook HTTP API","data":{"":"How to use\nRequirements\nWebhook methods\nWhiteBIT withdraw from main balance","how-to-use#How to use":"Go to your account on whitebit.com.\nClick on the API keys tab.\nSelect the web-hook configuration tab for your API keys.\nPaste correct URI to your web server which will process web-hook calls.\nPress Generate a new key button and toggle the activation switcher to \"Activated\".\n⚠ Please pay attention that secret key will be shown only once, so make sure you save it in any secure key store","requirements#Requirements:":"","for-web-hook-keys-generation#For web hook keys generation":"Before starting using webhooks, you'll be asked to verify ownership of the domain, you are set as webhook destination. You can do it in one of three ways\nYou can add TXT DNS record to your domain with your webhook public key.\nYou can add plain text file whiteBIT-verification.txt into your root domain folder and provide public web access to this file from your server. In this file should be placed your public webhook key.\nYou can implement /whiteBIT-verification endpoint. This endpoint should respond with 200 OK and return JSON array which contains your public webhook key. For example: [\"<your-public-webhook-key>\"]\nPassing just one of these checks will be able you to switch webhook on","for-processing-web-hook-requests#For processing web-hook requests":"All web hook requests are performing using POST method and with application/json content type. Consumer server should respond with 200 HTTP status code. If consumer was unable to handle web-hook, the request will be retry every 10 minutes but not more than 5 times.","body-data#Body data":"All web-hook requests are performing with\n{\n  \"method\": \"string\",\n  \"params\": {\n    \"nonce\": 0\n  },\n  \"id\": \"uniqueID\"\n}\nmethod - string. The name of method which was evaluated. Web hooks API supports such web-hook methods:\ncode.apply. Performs when code owned by a customer was applied.\nid - string. Uuid to identify every request.params - the request payload. Here you can find useful data about passed actions, which triggered web hook call. Also in this field placed a nonce. 'nonce' - a number that is always greater than the previous request’s nonce number","request-headers#Request headers":"Also, all request contains additional data in headers:\n'Content-type': 'application/json'\n'X-TXC-APIKEY': api_key - where api_key is your WhiteBit webhook API key\n'X-TXC-PAYLOAD': payload' - where payload is base64-encoded body data\n'X-TXC-SIGNATURE': signature - where signature is hex(HMAC_SHA512(payload), key=api_secret))\nOn consumer side you can process security headers to be sure request was performed by WhiteBIT.","webhook-methods#WebHook Methods":"","whitebit-code-apply#WhiteBIT code apply":"Performed when code was applied. Request example:\n{\n  \"method\": \"code.apply\",\n  \"params\": {\n    \"code\": \"<SOME_WHITE_BIT_CODE>\",\n    \"nonce\": 1\n  },\n  \"id\": \"45a1d85d-2fdf-483e-8dfa-6d253148c730\"\n}","whitebit-deposit-to-main-balance#WhiteBIT deposit to main balance":"Performed when deposit was accepted. Request example:\n{\n  \"method\": \"deposit.accepted\",\n  \"params\": {\n    \"address\": \"wallet address\", // deposit address\n    \"amount\": \"0.000600000000000000\", // amount of deposit\n    \"createdAt\": 1593437922, // timestamp of deposit\n    \"currency\": \"Tether US\", // deposit currency\n    \"description\": \"\", // deposit description\n    \"fee\": \"0.000000000000000000\", // deposit fee\n    \"memo\": \"\", // deposit memo\n    \"method\": 1, // called method 1 - deposit, 2 - withdraw\n    \"network\": \"ERC20\", // if currency is multi network\n    \"status\": 15, // transactions status\n    \"ticker\": \"USDT_ETH\", // deposit currency ticker\n    \"transactionHash\": \"transaction hash\", // deposit transaction hash\n    \"uniqueId\": null, // unique Id of deposit\n    \"confirmations\": {\n      // if transaction has confirmations info it will display here\n      \"actual\": 1, // current block confirmations\n      \"required\": 2 // required block confirmation for successful deposit\n    }\n  },\n  \"id\": \"uuid\"\n}\nPerformed when deposit was update. Request example:\n{\n  \"method\": \"deposit.update\",\n  \"params\": {\n    \"address\": \"wallet address\", // deposit address\n    \"amount\": \"0.000600000000000000\", // amount of deposit\n    \"createdAt\": 1593437922, // timestamp of deposit\n    \"currency\": \"Tether US\", // deposit currency\n    \"description\": \"update\", // deposit description\n    \"fee\": \"0.000000000000000000\", // deposit fee\n    \"memo\": \"\", // deposit memo\n    \"network\": \"ERC20\", // if currency is multi network\n    \"status\": 15, // transactions status\n    \"ticker\": \"USDT_ETH\", // deposit currency ticker\n    \"transactionHash\": \"transaction hash\", // deposit transaction hash\n    \"uniqueId\": null, // unique Id of deposit\n    \"confirmations\": {\n      // if transaction has confirmations info it will display here\n      \"actual\": 1, // current block confirmations\n      \"required\": 2 // required block confirmation for successful deposit\n    }\n  },\n  \"id\": \"uuid\"\n}\nPerformed when deposit was processed, so it is available on your balance. Request example:\n{\n  \"method\": \"deposit.processed\",\n  \"params\": {\n    \"address\": \"wallet address\", // deposit address\n    \"amount\": \"0.000600000000000000\", // amount of deposit\n    \"createdAt\": 1593437922, // timestamp of deposit\n    \"currency\": \"Tether US\", // deposit currency\n    \"description\": \"\", // deposit description\n    \"fee\": \"0.000000000000000000\", // deposit fee\n    \"memo\": \"\", // deposit memo\n    \"method\": 1, // called method 1 - deposit, 2 - withdraw\n    \"network\": \"ERC20\", // if currency is multi network\n    \"status\": 15, // transactions status\n    \"ticker\": \"USDT_ETH\", // deposit currency ticker\n    \"transactionHash\": \"transaction hash\", // deposit transaction hash\n    \"uniqueId\": null, // unique Id of deposit\n    \"confirmations\": {\n      // if transaction has confirmations info it will display here\n      \"actual\": 1, // current block confirmations\n      \"required\": 2 // required block confirmation for successful deposit\n    }\n  },\n  \"id\": \"uuid\"\n}\nPerformed when deposit was canceled. Request example:\n{\n  \"method\": \"deposit.canceled\",\n  \"params\": {\n    \"address\": \"wallet address\", // deposit address\n    \"amount\": \"100.00\", // amount of deposit\n    \"createdAt\": 1593437922, // timestamp of deposit\n    \"currency\": \"Tether US\", // deposit currency\n    \"description\": \"\", // deposit description\n    \"fee\": \"0.000000000000000000\", // deposit fee\n    \"memo\": \"\", // deposit memo\n    \"method\": 1, // called method 1 - deposit, 2 - withdraw\n    \"network\": \"ERC20\", // if currency is multi network, \"null\" if no multi network\n    \"status\": 15, // transactions status\n    \"ticker\": \"USDT_ETH\", // deposit currency ticker\n    \"transactionHash\": \"transaction hash\", // deposit transaction hash\n    \"uniqueId\": null, // unique Id of deposit\n    \"confirmations\": {\n      // if transaction has confirmations info it will display here\n      \"actual\": 1, // current block confirmations\n      \"required\": 32 // required block confirmation for successful deposit\n    }\n  },\n  \"id\": \"uuid\"\n}\nDeposit status codes:\nPending - 15","whitebit-withdraw-from-main-balance#WhiteBIT withdraw from main balance":"Performed when withdraw was created. Request example:\n{\n  \"method\": \"withdraw.unconfirmed\",\n  \"params\": {\n    \"address\": \"wallet address\", // withdraw address\n    \"amount\": \"100.00\", // amount of withdraw\n    \"createdAt\": 1593437922, // timestamp of withdraw\n    \"currency\": \"Tether US\", // withdraw currency\n    \"ticker\": \"USDT\", // withdraw currency ticker\n    \"description\": null, // withdraw description\n    \"fee\": \"0.000000000000000000\", // withdraw fee\n    \"memo\": \"\", // withdraw memo\n    \"method\": 2, // called method 1 - deposit, 2 - withdraw\n    \"network\": \"TRC20\", // if currency is multi network, \"null\" if no multi network\n    \"status\": 15, // transactions status\n    \"transactionHash\": \"transaction hash\", // withdraw transaction hash\n    \"uniqueId\": null // unique Id of withdraw\n  },\n  \"id\": \"uuid\"\n}\nPerformed when withdraw is pending. Request example:\n{\n  \"method\": \"withdraw.pending\",\n  \"params\": {\n    \"address\": \"wallet address\", // withdraw address\n    \"amount\": \"100.00\", // amount of withdraw\n    \"createdAt\": 1593437922, // timestamp of withdraw\n    \"currency\": \"Tether US\", // withdraw currency\n    \"ticker\": \"USDT\", // withdraw currency ticker\n    \"description\": null, // withdraw description\n    \"fee\": \"0.000000000000000000\", // withdraw fee\n    \"memo\": \"\", // withdraw memo\n    \"method\": 2, // called method 1 - deposit, 2 - withdraw\n    \"network\": \"TRC20\", // if currency is multi network, \"null\" if no multi network\n    \"status\": 15, // transactions status\n    \"transactionHash\": \"transaction hash\", // withdraw transaction hash\n    \"uniqueId\": null // unique Id of withdraw\n  },\n  \"id\": \"uuid\"\n}\nPerformed when withdraw was canceled. Request example:\n{\n  \"method\": \"withdraw.canceled\",\n  \"params\": {\n    \"address\": \"wallet address\", // withdraw address\n    \"amount\": \"100.00\", // amount of withdraw\n    \"createdAt\": 1593437922, // timestamp of withdraw\n    \"currency\": \"Tether US\", // withdraw currency\n    \"ticker\": \"USDT\", // withdraw currency ticker\n    \"description\": null, // withdraw description\n    \"fee\": \"0.000000000000000000\", // withdraw fee\n    \"memo\": \"\", // withdraw memo\n    \"method\": 2, // called method 1 - deposit, 2 - withdraw\n    \"network\": \"TRC20\", // if currency is multi network, \"null\" if no multi network\n    \"status\": 15, // transactions status\n    \"transactionHash\": \"transaction hash\", // withdraw transaction hash\n    \"uniqueId\": null // unique Id of withdraw\n  },\n  \"id\": \"uuid\"\n}\nPerformed when withdraw was completed. Request example:\n{\n  \"method\": \"withdraw.successful\",\n  \"params\": {\n    \"address\": \"wallet address\", // withdraw address\n    \"amount\": \"100.00\", // amount of withdraw\n    \"createdAt\": 1593437922, // timestamp of withdraw\n    \"currency\": \"Tether US\", // withdraw currency\n    \"ticker\": \"USDT\", // withdraw currency ticker\n    \"description\": null, // withdraw description\n    \"fee\": \"0.000000000000000000\", // withdraw fee\n    \"memo\": \"\", // withdraw memo\n    \"method\": 2, // called method 1 - deposit, 2 - withdraw\n    \"network\": \"TRC20\", // if currency is multi network, \"null\" if no multi network\n    \"status\": 15, // transactions status\n    \"transactionHash\": \"transaction hash\", // withdraw transaction hash\n    \"uniqueId\": null // unique Id of withdraw\n  },\n  \"id\": \"uuid\"\n}"}}}